{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\usersRequest\\\\requestHandler.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport AddRequest from './addRequest';\nimport RequestPreview from './requestPreview';\n\nvar RequestHandler = function RequestHandler() {\n  _s();\n\n  var _useState = useState(),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: count == undefined ? /*#__PURE__*/_jsxDEV(AddRequest, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, _this) : /*#__PURE__*/_jsxDEV(RequestPreview, {\n      setCount: setCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, _this)\n  }, void 0, false);\n};\n\n_s(RequestHandler, \"07zuxD/gcoLzpVXBXRATxcpBEFY=\");\n\n_c = RequestHandler;\nexport default RequestHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestHandler\");","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/usersRequest/requestHandler.js"],"names":["React","useContext","useState","AddRequest","RequestPreview","RequestHandler","count","setCount","undefined"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAAA,kBAGCH,QAAQ,EAHT;AAAA,MAGlBI,KAHkB;AAAA,MAGXC,QAHW;;AAMzB,sBACI;AAAA,cACSD,KAAK,IAAIE,SAAT,gBACG,QAAC,UAAD;AACA,MAAA,KAAK,EAAGF;AADR;AAAA;AAAA;AAAA;AAAA,aADH,gBAKG,QAAC,cAAD;AACA,MAAA,QAAQ,EAAGC;AADX;AAAA;AAAA;AAAA;AAAA;AANZ,mBADJ;AAWE,CAjBN;;GAAMF,c;;KAAAA,c;AAmBN,eAAeA,cAAf","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport AddRequest from './addRequest';\r\nimport RequestPreview from './requestPreview';\r\n\r\n\r\n\r\nconst RequestHandler = () => {\r\n\r\n    \r\n    const [count, setCount] = useState();\r\n\r\n\r\n    return (\r\n        <>\r\n                {count == undefined ?\r\n                    <AddRequest\r\n                    count= {count}\r\n                    />\r\n                    :\r\n                    <RequestPreview \r\n                    setCount ={setCount} /> \r\n                }\r\n        </>\r\n    )}\r\n    \r\nexport default RequestHandler;"]},"metadata":{},"sourceType":"module"}