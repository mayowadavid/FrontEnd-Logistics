{"ast":null,"code":"import { useContext, useEffect, useState } from 'react';\nimport { ClientContext } from '../context/ClientContext';\nimport { store } from '../firebase';\n\nconst useStorage = image => {\n  const {\n    setError,\n    setUrl,\n    setProgress\n  } = useContext(ClientContext);\n  useEffect(() => {\n    // references\n    const storageRef = store.ref(`profileimages/${image.name}`);\n    storageRef.put(image).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const newUrl = await storageRef.getDownloadURL();\n      await setUrl(newUrl);\n    });\n  }, []);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/storageHook.js"],"names":["useContext","useEffect","useState","ClientContext","store","useStorage","image","setError","setUrl","setProgress","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","newUrl","getDownloadURL","progress","url","error"],"mappings":"AAAA,SAAWA,UAAX,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAAQC,KAAR,QAAoB,aAApB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE9B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAAkCT,UAAU,CAACG,aAAD,CAAlD;AAEEF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMS,UAAU,GAAGN,KAAK,CAACO,GAAN,CAAW,iBAAgBL,KAAK,CAACM,IAAK,EAAtC,CAAnB;AACAF,IAAAA,UAAU,CAACG,GAAX,CAAeP,KAAf,EAAsBQ,EAAtB,CAAyB,eAAzB,EAA2CC,IAAD,IAAU;AAClD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAT,MAAAA,WAAW,CAACO,UAAD,CAAX;AACD,KAHD,EAGIG,GAAD,IAAS;AACVZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AACD,KALD,EAKG,YAAY;AACb,YAAMC,MAAM,GAAG,MAAMV,UAAU,CAACW,cAAX,EAArB;AACD,YAAMb,MAAM,CAACY,MAAD,CAAZ;AACA,KARD;AASD,GAZQ,EAYN,EAZM,CAAT;AAeA,SAAO;AAAEE,IAAAA,QAAF;AAAYC,IAAAA,GAAZ;AAAiBC,IAAAA;AAAjB,GAAP;AACD,CApBD;;AAsBA,eAAenB,UAAf","sourcesContent":["import  {  useContext, useEffect, useState } from 'react';\r\nimport { ClientContext } from '../context/ClientContext';\r\nimport {store} from '../firebase';\r\n\r\nconst useStorage = (image) => {\r\n    \r\nconst {setError, setUrl, setProgress} = useContext(ClientContext);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = store.ref(`profileimages/${image.name}`);\r\n    storageRef.put(image).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const newUrl = await storageRef.getDownloadURL();\r\n     await setUrl(newUrl);\r\n    });\r\n  }, []);\r\n  \r\n  \r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}