{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\RequestContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from '../../helpers/axios';\nimport { generatePublicUrl } from '../../urlConfig';\nimport { gallery, message, offBack, contact } from \"../../svg\";\nimport { requestValidate } from '../validator/validate';\nimport { useRouter } from 'next/router';\nimport { store } from '../firebase';\nexport const RequestContext = /*#__PURE__*/createContext();\n\nconst RequestContextProvider = props => {\n  // const initialState =\n  //     {sender: {\n  //         firstName: '',\n  //         phoneNumber1: '',\n  //         phoneNumber2: '' },\n  //    receiver: {\n  //            firstName: '',\n  //            phoneNumber1: '',\n  //            phoneNumber2: '' },\n  //    cartons: '',\n  //    createdAt: '',\n  //    deliveryLocations: '',\n  //    descriptions: '',\n  //    itemsWorth: '',\n  //    otherItems: true,\n  //    requestImages: [{img: '',\n  //                     _id: ''}],\n  //     status: '',\n  //     tagName: '',\n  //     amount: '',\n  //     _id: '',\n  //     formErrors: {\n  //                 sender: {\n  //                         firstName: '',\n  //                         phoneNumber1: '',\n  //                         phoneNumber2: '' },\n  //                 receiver: {\n  //                         firstName: '',\n  //                         phoneNumber1: '',\n  //                         phoneNumber2: '' },\n  //                 cartons: '',\n  //                 createdAt: '',\n  //                 deliveryLocations: '',\n  //                 descriptions: '',\n  //                 itemsWorth: '',\n  //                 otherItems: true,\n  //                 requestImages: '',\n  //                 status: '',\n  //                 tagName: '',\n  //                 amount: ''\n  //                 }\n  //    };\n  const initialState = {\n    cartons: \"55\",\n    deliveryLocations: \"lagos\",\n    descriptions: \"thank you\",\n    itemsWorth: \"5000\",\n    receiver: {\n      firstName: \"David\",\n      phoneNumber1: \"07130614615\",\n      phoneNumber2: \"08130614915\"\n    },\n    sender: {\n      firstName: \"mayowa\",\n      phoneNumber1: \"08130614615\",\n      phoneNumber2: \"08140614615\"\n    },\n    tagName: \"chisom\",\n    otherItems: false,\n    _id: undefined,\n    formErrors: {\n      sender: {\n        firstName: '',\n        phoneNumber1: '',\n        phoneNumber2: ''\n      },\n      receiver: {\n        firstName: '',\n        phoneNumber1: '',\n        phoneNumber2: ''\n      },\n      cartons: '',\n      createdAt: '',\n      deliveryLocations: '',\n      descriptions: '',\n      itemsWorth: '',\n      otherItems: true,\n      requestImages: '',\n      status: '',\n      tagName: '',\n      amount: '',\n      requestImages: [{\n        img: '',\n        _id: ''\n      }]\n    }\n  };\n  const {\n    0: input,\n    1: setInput\n  } = useState(initialState);\n  const {\n    0: contacts,\n    1: setContacts\n  } = useState([]);\n  const {\n    0: extractedRequest,\n    1: setExtractedRequest\n  } = useState();\n  const {\n    0: sessionToken,\n    1: setSessionToken\n  } = useState();\n  const {\n    0: isLogin,\n    1: setisLogin\n  } = useState(false);\n  const {\n    0: permanentImages,\n    1: setPermanentImages\n  } = useState([]);\n  const {\n    0: requestImages,\n    1: setRequestImages\n  } = useState([]);\n  const {\n    0: count,\n    1: setCount\n  } = useState();\n  const {\n    0: form,\n    1: setForm\n  } = useState();\n  const {\n    0: requestSuccess,\n    1: setRequestSuccess\n  } = useState(false);\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState();\n  const {\n    0: url,\n    1: setUrl\n  } = useState([]);\n  const router = useRouter();\n  useEffect(() => {\n    setRequestImages([...url, {\n      url\n    }]);\n  }, [url]);\n  useEffect(() => {\n    console.log(requestImages);\n  }, [requestImages]);\n  console.log(progress);\n\n  const handleChange = e => {\n    if (e) {\n      const {\n        sender\n      } = _objectSpread({}, input);\n\n      const {\n        name,\n        value,\n        id\n      } = e.target;\n\n      const {\n        formErrors\n      } = _objectSpread({}, input);\n\n      requestValidate(id, value, formErrors);\n      sender[name] = e.target.value;\n\n      const newInput = _objectSpread(_objectSpread({}, input), {}, {\n        sender,\n        [name]: value\n      });\n\n      return setInput(newInput);\n    }\n  };\n\n  const handleCheck = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n\n    const newInput = _objectSpread(_objectSpread({}, input), {}, {\n      [name]: checked\n    });\n\n    return setInput(newInput);\n  };\n\n  const photoChange = e => {\n    e.preventDefault();\n    setSelected(e.target.files);\n    let types = ['image/jpeg', 'image/png'];\n    let filteredImage = Array.from(e.target.files).filter(x => types.includes(x.type));\n\n    if (filteredImage) {\n      let FileSize = \"5000000\";\n      let filteredImageSize = Array.from(filteredImage).filter(x => x.size < FileSize);\n      filteredImageSize == undefined && setError(\"file too large *5mb minimum\");\n      let hold = filteredImageSize !== null && filteredImageSize.map(file => URL.createObjectURL(file));\n      let sourceUrl = hold !== undefined && hold.map(file => {\n        let img = file;\n        return {\n          img\n        };\n      });\n\n      if (filteredImageSize !== undefined) {\n        let updatedRequestImage = [...permanentImages, ...sourceUrl];\n        setPermanentImages(updatedRequestImage);\n      } else {\n        setPermanentImages(...permanentImages, []);\n      }\n\n      sourceUrl !== undefined && setPermanentImages(sourceUrl);\n      URL.revokeObjectURL(selected);\n\n      if (filteredImageSize !== undefined && filteredImageSize.length !== url.length) {\n        filteredImageSize.map(requestUrl => {\n          const storageRef = store.ref(`requestImages/${requestUrl.name}`);\n          storageRef.put(requestUrl).on('state_changed', async snap => {\n            const newPercentage = (await (snap.bytesTransferred / snap.totalBytes)) * 100;\n            await setProgress(newPercentage);\n          }, async err => {\n            await setError(err);\n          }, async () => {\n            const newUrl = await storageRef.getDownloadURL();\n            await setUrl({\n              newUrl\n            });\n          });\n        });\n      }\n    } else {\n      setError(\"unsupported image type* accepted image jpg/png\");\n    }\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage && localStorage.getItem('token');\n    const res = await axios.post('/request/create', form, {\n      headers: {\n        'authorization': token ? `Bearer ${token}` : ''\n      }\n    }).catch(function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n        error.response.status && (error.response.status == '500' || '400' && (axios.post('/signout'), localStorage.clear(), router.replace('/login')));\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n    console.log(res);\n    res && res.status == 201 && (console.log(res), setRequestSuccess(true));\n  };\n\n  const handleReceiver = e => {\n    if (e) {\n      const {\n        receiver\n      } = _objectSpread({}, input);\n\n      const {\n        name,\n        id,\n        value\n      } = e.target;\n\n      const {\n        formErrors\n      } = _objectSpread({}, input);\n\n      requestValidate(id, value, formErrors);\n      receiver[name] = e.target.value;\n\n      const newInp = _objectSpread(_objectSpread({}, input), {}, {\n        receiver\n      });\n\n      return setInput(newInp);\n    }\n  };\n\n  const handleRequestUpdate = async (e, id) => {\n    e.preventDefault();\n    let form = new FormData();\n\n    if (requestImages !== undefined) {\n      for (let img of requestImages) {\n        form.append('requestImages', img);\n      }\n    }\n\n    const {\n      cartons,\n      deliveryLocations,\n      descriptions,\n      itemsWorth,\n      otherItems,\n      tagName,\n      receiver,\n      sender,\n      status,\n      amount\n    } = _objectSpread({}, input);\n\n    form.append('cartons', cartons);\n    form.append('deliveryLocations', deliveryLocations);\n    form.append('descriptions', descriptions);\n    form.append('itemsWorth', itemsWorth);\n    form.append('otherItems', otherItems);\n    form.append('tagName', tagName);\n    form.append('receiver[firstName]', receiver.firstName);\n    form.append('receiver[phoneNumber1]', receiver.phoneNumber1);\n    form.append('receiver[phoneNumber2]', receiver.phoneNumber2);\n    form.append('sender[firstName]', sender.firstName);\n    form.append('sender[phoneNumber1]', sender.phoneNumber1);\n    form.append('sender[phoneNumber2]', sender.phoneNumber1);\n    input._id && form.append('status', status);\n    input._id && form.append('amount', amount);\n    setForm(form);\n\n    for (let pair of form.entries()) {\n      console.log([pair[0] + ',' + pair[1]]);\n    }\n\n    const res = await axios.put('/request/' + id, form);\n  };\n\n  const handleFormPreview = e => {\n    e.preventDefault();\n    let form = new FormData();\n\n    if (requestImages !== undefined) {\n      for (let img of requestImages) {\n        form.append('requestImages', img);\n      }\n    }\n\n    const {\n      cartons,\n      deliveryLocations,\n      descriptions,\n      itemsWorth,\n      otherItems,\n      tagName,\n      receiver,\n      sender,\n      status,\n      amount\n    } = _objectSpread({}, input);\n\n    form.append('cartons', cartons);\n    form.append('deliveryLocations', deliveryLocations);\n    form.append('descriptions', descriptions);\n    form.append('itemsWorth', itemsWorth);\n    form.append('otherItems', otherItems);\n    form.append('tagName', tagName);\n    form.append('receiver[firstName]', receiver.firstName);\n    form.append('receiver[phoneNumber1]', receiver.phoneNumber1);\n    form.append('receiver[phoneNumber2]', receiver.phoneNumber2);\n    form.append('sender[firstName]', sender.firstName);\n    form.append('sender[phoneNumber1]', sender.phoneNumber1);\n    form.append('sender[phoneNumber2]', sender.phoneNumber1);\n    input._id && form.append('status', status);\n    input._id && form.append('amount', amount);\n    setForm(form);\n\n    for (let pair of form.entries()) {\n      console.log([pair[0] + ',' + pair[1]]);\n    }\n\n    setCount(\"active\");\n  };\n\n  const selector = [{\n    content: \"contact\",\n    icon: contact(),\n    title: \"Contact\",\n    id: 1\n  }, {\n    content: \"gallery\",\n    icon: gallery(),\n    title: \"Gallery\",\n    id: 2\n  }, {\n    content: \"ShippingRequest\",\n    icon: offBack(),\n    title: \"Request\",\n    id: 3\n  }, {\n    content: \"\",\n    icon: message(),\n    title: \"Message\",\n    id: 4\n  }];\n  return /*#__PURE__*/_jsxDEV(RequestContext.Provider, {\n    value: {\n      input,\n      requestSuccess,\n      setRequestSuccess,\n      initialState,\n      setCount,\n      count,\n      setInput,\n      handleChange,\n      handleReceiver,\n      handleCheck,\n      permanentImages,\n      setPermanentImages,\n      handleFormSubmit,\n      handleFormPreview,\n      photoChange,\n      selector,\n      setExtractedRequest,\n      extractedRequest,\n      contacts,\n      setContacts,\n      handleRequestUpdate,\n      sessionToken,\n      isLogin,\n      setisLogin\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RequestContextProvider;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/RequestContext.js"],"names":["React","createContext","useEffect","useState","axios","generatePublicUrl","gallery","message","offBack","contact","requestValidate","useRouter","store","RequestContext","RequestContextProvider","props","initialState","cartons","deliveryLocations","descriptions","itemsWorth","receiver","firstName","phoneNumber1","phoneNumber2","sender","tagName","otherItems","_id","undefined","formErrors","createdAt","requestImages","status","amount","img","input","setInput","contacts","setContacts","extractedRequest","setExtractedRequest","sessionToken","setSessionToken","isLogin","setisLogin","permanentImages","setPermanentImages","setRequestImages","count","setCount","form","setForm","requestSuccess","setRequestSuccess","progress","setProgress","error","setError","selected","setSelected","url","setUrl","router","console","log","handleChange","e","name","value","id","target","newInput","handleCheck","checked","photoChange","preventDefault","files","types","filteredImage","Array","from","filter","x","includes","type","FileSize","filteredImageSize","size","hold","map","file","URL","createObjectURL","sourceUrl","updatedRequestImage","revokeObjectURL","length","requestUrl","storageRef","ref","put","on","snap","newPercentage","bytesTransferred","totalBytes","err","newUrl","getDownloadURL","handleFormSubmit","token","localStorage","getItem","res","post","headers","catch","response","data","clear","replace","request","config","handleReceiver","newInp","handleRequestUpdate","FormData","append","pair","entries","handleFormPreview","selector","content","icon","title","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,iBAAR,QAAgC,iBAAhC;AACA,SAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,OAAnC,QAAiD,WAAjD;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,KAAR,QAAoB,aAApB;AAEA,OAAO,MAAMC,cAAc,gBAAGZ,aAAa,EAApC;;AAEP,MAAMa,sBAAsB,GAAIC,KAAD,IAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,QAAMC,YAAY,GACd;AAACC,IAAAA,OAAO,EAAE,IAAV;AACAC,IAAAA,iBAAiB,EAAE,OADnB;AAEAC,IAAAA,YAAY,EAAE,WAFd;AAGAC,IAAAA,UAAU,EAAE,MAHZ;AAIAC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,SAAS,EAAE,OAAZ;AAAqBC,MAAAA,YAAY,EAAE,aAAnC;AAAkDC,MAAAA,YAAY,EAAE;AAAhE,KAJV;AAKAC,IAAAA,MAAM,EAAE;AAACH,MAAAA,SAAS,EAAE,QAAZ;AAAsBC,MAAAA,YAAY,EAAE,aAApC;AAAmDC,MAAAA,YAAY,EAAE;AAAjE,KALR;AAMAE,IAAAA,OAAO,EAAE,QANT;AAOAC,IAAAA,UAAU,EAAE,KAPZ;AAQAC,IAAAA,GAAG,EAAEC,SARL;AASAC,IAAAA,UAAU,EAAE;AACRL,MAAAA,MAAM,EAAE;AACAH,QAAAA,SAAS,EAAE,EADX;AAEAC,QAAAA,YAAY,EAAE,EAFd;AAGAC,QAAAA,YAAY,EAAE;AAHd,OADA;AAKRH,MAAAA,QAAQ,EAAE;AACFC,QAAAA,SAAS,EAAE,EADT;AAEFC,QAAAA,YAAY,EAAE,EAFZ;AAGFC,QAAAA,YAAY,EAAE;AAHZ,OALF;AASRP,MAAAA,OAAO,EAAE,EATD;AAURc,MAAAA,SAAS,EAAE,EAVH;AAWRb,MAAAA,iBAAiB,EAAE,EAXX;AAYRC,MAAAA,YAAY,EAAE,EAZN;AAaRC,MAAAA,UAAU,EAAE,EAbJ;AAcRO,MAAAA,UAAU,EAAE,IAdJ;AAeRK,MAAAA,aAAa,EAAE,EAfP;AAgBRC,MAAAA,MAAM,EAAE,EAhBA;AAiBRP,MAAAA,OAAO,EAAE,EAjBD;AAkBRQ,MAAAA,MAAM,EAAE,EAlBA;AAmBRF,MAAAA,aAAa,EAAE,CAAC;AAACG,QAAAA,GAAG,EAAE,EAAN;AACIP,QAAAA,GAAG,EAAE;AADT,OAAD;AAnBP;AATZ,GADJ;AAiCA,QAAK;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBlC,QAAQ,CAACa,YAAD,CAAjC;AACA,QAAM;AAAA,OAACsB,QAAD;AAAA,OAAWC;AAAX,MAA0BpC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACqC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CtC,QAAQ,EAAxD;AACA,QAAM;AAAA,OAACuC,YAAD;AAAA,OAAeC;AAAf,MAAkCxC,QAAQ,EAAhD;AACA,QAAM;AAAA,OAACyC,OAAD;AAAA,OAAUC;AAAV,MAAwB1C,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAK;AAAA,OAAC2C,eAAD;AAAA,OAAkBC;AAAlB,MAAwC5C,QAAQ,CAAC,EAAD,CAArD;AACA,QAAM;AAAA,OAAC6B,aAAD;AAAA,OAAgBgB;AAAhB,MAAoC7C,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAAC8C,KAAD;AAAA,OAAQC;AAAR,MAAoB/C,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACgD,IAAD;AAAA,OAAOC;AAAP,MAAkBjD,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACkD,cAAD;AAAA,OAAiBC;AAAjB,MAAsCnD,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACoD,QAAD;AAAA,OAAWC;AAAX,MAA0BrD,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACsD,KAAD;AAAA,OAAQC;AAAR,MAAoBvD,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACwD,QAAD;AAAA,OAAWC;AAAX,MAAyBzD,QAAQ,EAAvC;AACA,QAAM;AAAA,OAAC0D,GAAD;AAAA,OAAMC;AAAN,MAAgB3D,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM4D,MAAM,GAAGpD,SAAS,EAAxB;AAEAT,EAAAA,SAAS,CAAG,MAAM;AAEd8C,IAAAA,gBAAgB,CAAC,CAAC,GAAGa,GAAJ,EAAS;AAACA,MAAAA;AAAD,KAAT,CAAD,CAAhB;AAEH,GAJQ,EAIN,CAACA,GAAD,CAJM,CAAT;AAMA3D,EAAAA,SAAS,CAAG,MAAM;AAEd8D,IAAAA,OAAO,CAACC,GAAR,CAAYjC,aAAZ;AAEH,GAJQ,EAIN,CAACA,aAAD,CAJM,CAAT;AAOAgC,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;;AAIA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAGA,CAAH,EAAK;AACF,YAAM;AAAC1C,QAAAA;AAAD,4BAAeW,KAAf,CAAN;;AACA,YAAM;AAACgC,QAAAA,IAAD;AAAOC,QAAAA,KAAP;AAAcC,QAAAA;AAAd,UAAoBH,CAAC,CAACI,MAA5B;;AACA,YAAM;AAACzC,QAAAA;AAAD,4BAAmBM,KAAnB,CAAN;;AACA1B,MAAAA,eAAe,CAAC4D,EAAD,EAAKD,KAAL,EAAYvC,UAAZ,CAAf;AACAL,MAAAA,MAAM,CAAC2C,IAAD,CAAN,GAAeD,CAAC,CAACI,MAAF,CAASF,KAAxB;;AACA,YAAMG,QAAQ,mCAAQpC,KAAR;AAAeX,QAAAA,MAAf;AAAuB,SAAC2C,IAAD,GAAQC;AAA/B,QAAd;;AACA,aAAOhC,QAAQ,CAACmC,QAAD,CAAf;AACF;AACJ,GAVD;;AAWD,QAAMC,WAAW,GAAIN,CAAD,IAAK;AACxB,UAAM;AAACC,MAAAA,IAAD;AAAOM,MAAAA;AAAP,QAAkBP,CAAC,CAACI,MAA1B;;AACA,UAAMC,QAAQ,mCAAOpC,KAAP;AAAc,OAACgC,IAAD,GAAQM;AAAtB,MAAd;;AACA,WAAOrC,QAAQ,CAACmC,QAAD,CAAf;AACA,GAJD;;AAMC,QAAMG,WAAW,GAAIR,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACS,cAAF;AACAhB,IAAAA,WAAW,CAAEO,CAAC,CAACI,MAAF,CAASM,KAAX,CAAX;AACA,QAAIC,KAAK,GAAG,CAAC,YAAD,EAAe,WAAf,CAAZ;AACA,QAAIC,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAWd,CAAC,CAACI,MAAF,CAASM,KAApB,EAA2BK,MAA3B,CAAkCC,CAAC,IAAGL,KAAK,CAACM,QAAN,CAAeD,CAAC,CAACE,IAAjB,CAAtC,CAApB;;AACA,QAAGN,aAAH,EAAiB;AACf,UAAIO,QAAQ,GAAG,SAAf;AACD,UAAIC,iBAAiB,GAAEP,KAAK,CAACC,IAAN,CAAWF,aAAX,EAA0BG,MAA1B,CAAiCC,CAAC,IAAGA,CAAC,CAACK,IAAF,GAASF,QAA9C,CAAvB;AACAC,MAAAA,iBAAiB,IAAI1D,SAArB,IAAmC6B,QAAQ,CAAC,6BAAD,CAA3C;AACA,UAAI+B,IAAI,GAAGF,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,CAACG,GAAlB,CAAuBC,IAAD,IAC5DC,GAAG,CAACC,eAAJ,CAAoBF,IAApB,CADsC,CAAzC;AAED,UAAIG,SAAS,GAAGL,IAAI,KAAK5D,SAAT,IAAsB4D,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAQ;AACnD,YAAIxD,GAAG,GAAGwD,IAAV;AACA,eAAO;AAACxD,UAAAA;AAAD,SAAP;AAAc,OAFoB,CAAtC;;AAII,UAAGoD,iBAAiB,KAAK1D,SAAzB,EAAmC;AAC/B,YAAIkE,mBAAmB,GAAG,CAAC,GAAGjD,eAAJ,EAAqB,GAAGgD,SAAxB,CAA1B;AACA/C,QAAAA,kBAAkB,CAACgD,mBAAD,CAAlB;AACH,OAHD,MAGK;AACDhD,QAAAA,kBAAkB,CAAC,GAAGD,eAAJ,EAAqB,EAArB,CAAlB;AACH;;AACDgD,MAAAA,SAAS,KAAKjE,SAAd,IAA4BkB,kBAAkB,CAAC+C,SAAD,CAA9C;AACFF,MAAAA,GAAG,CAACI,eAAJ,CAAoBrC,QAApB;;AACA,UAAG4B,iBAAiB,KAAK1D,SAAtB,IAAoC0D,iBAAiB,CAACU,MAAlB,KAA6BpC,GAAG,CAACoC,MAAxE,EAAiF;AAC/EV,QAAAA,iBAAiB,CAACG,GAAlB,CAAsBQ,UAAU,IAAG;AAC/B,gBAAMC,UAAU,GAAGvF,KAAK,CAACwF,GAAN,CAAW,iBAAgBF,UAAU,CAAC9B,IAAK,EAA3C,CAAnB;AACA+B,UAAAA,UAAU,CAACE,GAAX,CAAeH,UAAf,EAA2BI,EAA3B,CAA8B,eAA9B,EACA,MAAOC,IAAP,IAAgB;AACd,kBAAMC,aAAa,GAAG,QAAOD,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAApC,KAAkD,GAAxE;AACF,kBAAMlD,WAAW,CAACgD,aAAD,CAAjB;AACC,WAJD,EAII,MAAOG,GAAP,IAAe;AACnB,kBAAMjD,QAAQ,CAACiD,GAAD,CAAd;AACC,WAND,EAMG,YAAY;AACb,kBAAMC,MAAM,GAAG,MAAMT,UAAU,CAACU,cAAX,EAArB;AACF,kBAAM/C,MAAM,CAAC;AAAC8C,cAAAA;AAAD,aAAD,CAAZ;AACC,WATD;AAWC,SAbL;AAcE;AACH,KAlCH,MAkCO;AACLlD,MAAAA,QAAQ,CAAC,gDAAD,CAAR;AACD;AACN,GA1CC;;AA4CA,QAAMoD,gBAAgB,GAAG,MAAM3C,CAAN,IAAY;AACjCA,IAAAA,CAAC,CAACS,cAAF;AACA,UAAMmC,KAAK,GAAGC,YAAY,IAAIA,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA9B;AACA,UAAMC,GAAG,GAAG,MAAM9G,KAAK,CAAC+G,IAAN,CAAW,iBAAX,EAA8BhE,IAA9B,EAAoC;AAClDiE,MAAAA,OAAO,EAAG;AAAC,yBAAiBL,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAA9C;AADwC,KAApC,EAEfM,KAFe,CAET,UAAU5D,KAAV,EAAiB;AACtB,UAAIA,KAAK,CAAC6D,QAAV,EAAoB;AAClB;AACA;AACAtD,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAAC6D,QAAN,CAAeC,IAA3B;AACAvD,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAAC6D,QAAN,CAAerF,MAA3B;AACA+B,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAAC6D,QAAN,CAAeF,OAA3B;AACA3D,QAAAA,KAAK,CAAC6D,QAAN,CAAerF,MAAf,KACEwB,KAAK,CAAC6D,QAAN,CAAerF,MAAf,IAAyB,KAAzB,IAAkC,UAChC7B,KAAK,CAAC+G,IAAN,CAAW,UAAX,GACAH,YAAY,CAACQ,KAAb,EADA,EAEAzD,MAAM,CAAC0D,OAAP,CAAe,QAAf,CAHgC,CADpC;AAOD,OAbD,MAaO,IAAIhE,KAAK,CAACiE,OAAV,EAAmB;AACxB;AACA;AACA;AACA1D,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACiE,OAAlB;AACD,OALM,MAKA;AACL;AACA1D,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,KAAK,CAAClD,OAA3B;AACD;;AACDyD,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACkE,MAAlB;AACD,KA1Be,CAAlB;AA2BE3D,IAAAA,OAAO,CAACC,GAAR,CAAYiD,GAAZ;AACAA,IAAAA,GAAG,IACCA,GAAG,CAACjF,MAAJ,IAAc,GAAd,KACI+B,OAAO,CAACC,GAAR,CAAYiD,GAAZ,GACA5D,iBAAiB,CAAC,IAAD,CAFrB,CADJ;AAML,GArCD;;AAuCA,QAAMsE,cAAc,GAAIzD,CAAD,IAAO;AAE1B,QAAGA,CAAH,EAAK;AACD,YAAM;AAAC9C,QAAAA;AAAD,4BAAiBe,KAAjB,CAAN;;AACA,YAAM;AAACgC,QAAAA,IAAD;AAAOE,QAAAA,EAAP;AAAWD,QAAAA;AAAX,UAAoBF,CAAC,CAACI,MAA5B;;AACA,YAAM;AAACzC,QAAAA;AAAD,4BAAmBM,KAAnB,CAAN;;AACA1B,MAAAA,eAAe,CAAC4D,EAAD,EAAKD,KAAL,EAAYvC,UAAZ,CAAf;AACAT,MAAAA,QAAQ,CAAC+C,IAAD,CAAR,GAAiBD,CAAC,CAACI,MAAF,CAASF,KAA1B;;AACA,YAAMwD,MAAM,mCAAQzF,KAAR;AAAef,QAAAA;AAAf,QAAZ;;AACA,aAAOgB,QAAQ,CAACwF,MAAD,CAAf;AACH;AACJ,GAXD;;AAaA,QAAMC,mBAAmB,GAAG,OAAM3D,CAAN,EAASG,EAAT,KAAgB;AACxCH,IAAAA,CAAC,CAACS,cAAF;AACA,QAAIzB,IAAI,GAAG,IAAI4E,QAAJ,EAAX;;AACA,QAAG/F,aAAa,KAAKH,SAArB,EAA+B;AAE3B,WAAK,IAAIM,GAAT,IAAgBH,aAAhB,EAA8B;AAC1BmB,QAAAA,IAAI,CAAC6E,MAAL,CAAY,eAAZ,EAA6B7F,GAA7B;AACH;AACL;;AACI,UAAM;AAAClB,MAAAA,OAAD;AAAUC,MAAAA,iBAAV;AAA6BC,MAAAA,YAA7B;AAA2CC,MAAAA,UAA3C;AAAuDO,MAAAA,UAAvD;AAAmED,MAAAA,OAAnE;AAA4EL,MAAAA,QAA5E;AAAsFI,MAAAA,MAAtF;AAA8FQ,MAAAA,MAA9F;AAAsGC,MAAAA;AAAtG,0BAAqHE,KAArH,CAAN;;AACIe,IAAAA,IAAI,CAAC6E,MAAL,CAAY,SAAZ,EAAuB/G,OAAvB;AACAkC,IAAAA,IAAI,CAAC6E,MAAL,CAAY,mBAAZ,EAAiC9G,iBAAjC;AACAiC,IAAAA,IAAI,CAAC6E,MAAL,CAAY,cAAZ,EAA4B7G,YAA5B;AACAgC,IAAAA,IAAI,CAAC6E,MAAL,CAAY,YAAZ,EAA0B5G,UAA1B;AACA+B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,YAAZ,EAA2BrG,UAA3B;AACAwB,IAAAA,IAAI,CAAC6E,MAAL,CAAY,SAAZ,EAAwBtG,OAAxB;AACAyB,IAAAA,IAAI,CAAC6E,MAAL,CAAY,qBAAZ,EAAoC3G,QAAQ,CAACC,SAA7C;AACA6B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,wBAAZ,EAAuC3G,QAAQ,CAACE,YAAhD;AACA4B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,wBAAZ,EAAuC3G,QAAQ,CAACG,YAAhD;AACA2B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,mBAAZ,EAAkCvG,MAAM,CAACH,SAAzC;AACA6B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,sBAAZ,EAAqCvG,MAAM,CAACF,YAA5C;AACA4B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,sBAAZ,EAAqCvG,MAAM,CAACF,YAA5C;AAECa,IAAAA,KAAK,CAACR,GAAN,IAAauB,IAAI,CAAC6E,MAAL,CAAY,QAAZ,EAAsB/F,MAAtB,CAAb;AACAG,IAAAA,KAAK,CAACR,GAAN,IAAauB,IAAI,CAAC6E,MAAL,CAAY,QAAZ,EAAsB9F,MAAtB,CAAb;AACDkB,IAAAA,OAAO,CAACD,IAAD,CAAP;;AAEA,SAAI,IAAI8E,IAAR,IAAgB9E,IAAI,CAAC+E,OAAL,EAAhB,EAA+B;AAC3BlE,MAAAA,OAAO,CAACC,GAAR,CAAY,CAACgE,IAAI,CAAC,CAAD,CAAJ,GAAS,GAAT,GAAeA,IAAI,CAAC,CAAD,CAApB,CAAZ;AACL;;AACP,UAAMf,GAAG,GAAG,MAAM9G,KAAK,CAACiG,GAAN,CAAU,cAAc/B,EAAxB,EAA4BnB,IAA5B,CAAlB;AACH,GA/BD;;AAiCA,QAAMgF,iBAAiB,GAAIhE,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACS,cAAF;AACA,QAAIzB,IAAI,GAAG,IAAI4E,QAAJ,EAAX;;AACA,QAAG/F,aAAa,KAAKH,SAArB,EAA+B;AAE3B,WAAK,IAAIM,GAAT,IAAgBH,aAAhB,EAA8B;AAC1BmB,QAAAA,IAAI,CAAC6E,MAAL,CAAY,eAAZ,EAA6B7F,GAA7B;AACH;AACL;;AACI,UAAM;AAAClB,MAAAA,OAAD;AAAUC,MAAAA,iBAAV;AAA6BC,MAAAA,YAA7B;AAA2CC,MAAAA,UAA3C;AAAuDO,MAAAA,UAAvD;AAAmED,MAAAA,OAAnE;AAA4EL,MAAAA,QAA5E;AAAsFI,MAAAA,MAAtF;AAA8FQ,MAAAA,MAA9F;AAAsGC,MAAAA;AAAtG,0BAAqHE,KAArH,CAAN;;AACIe,IAAAA,IAAI,CAAC6E,MAAL,CAAY,SAAZ,EAAuB/G,OAAvB;AACAkC,IAAAA,IAAI,CAAC6E,MAAL,CAAY,mBAAZ,EAAiC9G,iBAAjC;AACAiC,IAAAA,IAAI,CAAC6E,MAAL,CAAY,cAAZ,EAA4B7G,YAA5B;AACAgC,IAAAA,IAAI,CAAC6E,MAAL,CAAY,YAAZ,EAA0B5G,UAA1B;AACA+B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,YAAZ,EAA2BrG,UAA3B;AACAwB,IAAAA,IAAI,CAAC6E,MAAL,CAAY,SAAZ,EAAwBtG,OAAxB;AACAyB,IAAAA,IAAI,CAAC6E,MAAL,CAAY,qBAAZ,EAAoC3G,QAAQ,CAACC,SAA7C;AACA6B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,wBAAZ,EAAuC3G,QAAQ,CAACE,YAAhD;AACA4B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,wBAAZ,EAAuC3G,QAAQ,CAACG,YAAhD;AACA2B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,mBAAZ,EAAkCvG,MAAM,CAACH,SAAzC;AACA6B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,sBAAZ,EAAqCvG,MAAM,CAACF,YAA5C;AACA4B,IAAAA,IAAI,CAAC6E,MAAL,CAAY,sBAAZ,EAAqCvG,MAAM,CAACF,YAA5C;AAECa,IAAAA,KAAK,CAACR,GAAN,IAAauB,IAAI,CAAC6E,MAAL,CAAY,QAAZ,EAAsB/F,MAAtB,CAAb;AACAG,IAAAA,KAAK,CAACR,GAAN,IAAauB,IAAI,CAAC6E,MAAL,CAAY,QAAZ,EAAsB9F,MAAtB,CAAb;AAGDkB,IAAAA,OAAO,CAACD,IAAD,CAAP;;AAEA,SAAI,IAAI8E,IAAR,IAAgB9E,IAAI,CAAC+E,OAAL,EAAhB,EAA+B;AAC3BlE,MAAAA,OAAO,CAACC,GAAR,CAAY,CAACgE,IAAI,CAAC,CAAD,CAAJ,GAAS,GAAT,GAAeA,IAAI,CAAC,CAAD,CAApB,CAAZ;AACL;;AACP/E,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACH,GAjCD;;AAuCA,QAAMkF,QAAQ,GAAG,CACb;AAACC,IAAAA,OAAO,EAAE,SAAV;AAAsBC,IAAAA,IAAI,EAAE7H,OAAO,EAAnC;AAAuC8H,IAAAA,KAAK,EAAE,SAA9C;AAAyDjE,IAAAA,EAAE,EAAE;AAA7D,GADa,EAEb;AAAC+D,IAAAA,OAAO,EAAE,SAAV;AAAqBC,IAAAA,IAAI,EAAEhI,OAAO,EAAlC;AAAsCiI,IAAAA,KAAK,EAAE,SAA7C;AAAwDjE,IAAAA,EAAE,EAAE;AAA5D,GAFa,EAGb;AAAC+D,IAAAA,OAAO,EAAE,iBAAV;AAA6BC,IAAAA,IAAI,EAAE9H,OAAO,EAA1C;AAA8C+H,IAAAA,KAAK,EAAE,SAArD;AAAgEjE,IAAAA,EAAE,EAAE;AAApE,GAHa,EAIb;AAAC+D,IAAAA,OAAO,EAAE,EAAV;AAAcC,IAAAA,IAAI,EAAE/H,OAAO,EAA3B;AAA+BgI,IAAAA,KAAK,EAAE,SAAtC;AAAiDjE,IAAAA,EAAE,EAAE;AAArD,GAJa,CAAjB;AAQA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAClC,MAAAA,KAAD;AAAQiB,MAAAA,cAAR;AAAwBC,MAAAA,iBAAxB;AAA2CtC,MAAAA,YAA3C;AAAyDkC,MAAAA,QAAzD;AAAmED,MAAAA,KAAnE;AAA0EZ,MAAAA,QAA1E;AAAoF6B,MAAAA,YAApF;AAAkG0D,MAAAA,cAAlG;AAAkHnD,MAAAA,WAAlH;AAA+H3B,MAAAA,eAA/H;AAAgJC,MAAAA,kBAAhJ;AAAoK+D,MAAAA,gBAApK;AAAsLqB,MAAAA,iBAAtL;AAAyMxD,MAAAA,WAAzM;AAAsNyD,MAAAA,QAAtN;AAAgO3F,MAAAA,mBAAhO;AAAqPD,MAAAA,gBAArP;AAAuQF,MAAAA,QAAvQ;AAAiRC,MAAAA,WAAjR;AAA8RuF,MAAAA,mBAA9R;AAAmTpF,MAAAA,YAAnT;AAAiUE,MAAAA,OAAjU;AAA0UC,MAAAA;AAA1U,KAAhC;AAAA,cACK9B,KAAK,CAACyH;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArTD;;AAuTA,eAAe1H,sBAAf","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from '../../helpers/axios';\r\nimport {generatePublicUrl} from '../../urlConfig';\r\nimport {gallery, message, offBack, contact} from \"../../svg\";\r\nimport { requestValidate } from '../validator/validate';\r\nimport {useRouter} from 'next/router';\r\nimport {store} from '../firebase';\r\n\r\nexport const RequestContext = createContext();\r\n\r\nconst RequestContextProvider = (props) =>{\r\n    // const initialState =\r\n    //     {sender: {\r\n    //         firstName: '',\r\n    //         phoneNumber1: '',\r\n    //         phoneNumber2: '' },\r\n    //    receiver: {\r\n    //            firstName: '',\r\n    //            phoneNumber1: '',\r\n    //            phoneNumber2: '' },\r\n    //    cartons: '',\r\n    //    createdAt: '',\r\n    //    deliveryLocations: '',\r\n    //    descriptions: '',\r\n    //    itemsWorth: '',\r\n    //    otherItems: true,\r\n    //    requestImages: [{img: '',\r\n    //                     _id: ''}],\r\n    //     status: '',\r\n    //     tagName: '',\r\n    //     amount: '',\r\n    //     _id: '',\r\n    //     formErrors: {\r\n    //                 sender: {\r\n    //                         firstName: '',\r\n    //                         phoneNumber1: '',\r\n    //                         phoneNumber2: '' },\r\n    //                 receiver: {\r\n    //                         firstName: '',\r\n    //                         phoneNumber1: '',\r\n    //                         phoneNumber2: '' },\r\n    //                 cartons: '',\r\n    //                 createdAt: '',\r\n    //                 deliveryLocations: '',\r\n    //                 descriptions: '',\r\n    //                 itemsWorth: '',\r\n    //                 otherItems: true,\r\n    //                 requestImages: '',\r\n    //                 status: '',\r\n    //                 tagName: '',\r\n    //                 amount: ''\r\n    //                 }\r\n           \r\n    //    };\r\n\r\n    const initialState =\r\n        {cartons: \"55\",\r\n        deliveryLocations: \"lagos\",\r\n        descriptions: \"thank you\",\r\n        itemsWorth: \"5000\",\r\n        receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\r\n        sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\r\n        tagName: \"chisom\",\r\n        otherItems: false,\r\n        _id: undefined,\r\n        formErrors: {\r\n            sender: {\r\n                    firstName: '',\r\n                    phoneNumber1: '',\r\n                    phoneNumber2: '' },\r\n            receiver: {\r\n                    firstName: '',\r\n                    phoneNumber1: '',\r\n                    phoneNumber2: '' },\r\n            cartons: '',\r\n            createdAt: '',\r\n            deliveryLocations: '',\r\n            descriptions: '',\r\n            itemsWorth: '',\r\n            otherItems: true,\r\n            requestImages: '',\r\n            status: '',\r\n            tagName: '',\r\n            amount: '',\r\n            requestImages: [{img: '',\r\n                                _id: ''}],\r\n            }\r\n        };\r\n    const[input, setInput] = useState(initialState);\r\n    const [contacts, setContacts] = useState([]);\r\n    const [extractedRequest, setExtractedRequest] = useState();\r\n    const [sessionToken, setSessionToken] = useState();\r\n    const [isLogin, setisLogin] = useState(false);\r\n    const[permanentImages, setPermanentImages] = useState([]);\r\n    const [requestImages, setRequestImages] = useState([]);\r\n    const [count, setCount] = useState();\r\n    const [form, setForm] = useState();\r\n    const [requestSuccess, setRequestSuccess] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [selected, setSelected]= useState();\r\n    const [url, setUrl] = useState([]);\r\n    const router = useRouter();\r\n\r\n    useEffect ( () => {\r\n                \r\n        setRequestImages([...url, {url}]);\r\n        \r\n    }, [url]);\r\n    \r\n    useEffect ( () => {\r\n                \r\n        console.log(requestImages);\r\n        \r\n    }, [requestImages]);\r\n   \r\n    \r\n    console.log(progress);\r\n    \r\n\r\n\r\n    const handleChange = (e) => {\r\n        if(e){\r\n           const {sender} = {...input};\r\n           const {name, value, id} = e.target;\r\n           const {formErrors} = {...input};\r\n           requestValidate(id, value, formErrors);\r\n           sender[name] = e.target.value;\r\n           const newInput = { ...input, sender, [name]: value };\r\n           return setInput(newInput);\r\n        }\r\n    }; \r\n   const handleCheck = (e)=>{\r\n    const {name, checked} = e.target;\r\n    const newInput = {...input, [name]: checked};\r\n    return setInput(newInput);\r\n   } \r\n\r\n    const photoChange = (e) => {\r\n        e.preventDefault();  \r\n        setSelected( e.target.files);\r\n        let types = ['image/jpeg', 'image/png'];\r\n        let filteredImage=  Array.from(e.target.files).filter(x=> types.includes(x.type));\r\n        if(filteredImage){\r\n          let FileSize = \"5000000\";\r\n         let filteredImageSize= Array.from(filteredImage).filter(x=> x.size < FileSize);\r\n         filteredImageSize == undefined && (setError(\"file too large *5mb minimum\")); \r\n         let hold = filteredImageSize !== null && filteredImageSize.map((file)=>\r\n            URL.createObjectURL(file));\r\n        let sourceUrl = hold !== undefined && hold.map((file)=>{\r\n            let img = file\r\n            return {img }}\r\n            );\r\n            if(filteredImageSize !== undefined){\r\n                let updatedRequestImage = [...permanentImages, ...sourceUrl ]\r\n                setPermanentImages(updatedRequestImage);\r\n            }else{\r\n                setPermanentImages(...permanentImages, []);\r\n            }\r\n            sourceUrl !== undefined && (setPermanentImages(sourceUrl));\r\n          URL.revokeObjectURL(selected); \r\n          if(filteredImageSize !== undefined && (filteredImageSize.length !== url.length) ){\r\n            filteredImageSize.map(requestUrl =>{\r\n                const storageRef = store.ref(`requestImages/${requestUrl.name}`);\r\n                storageRef.put(requestUrl).on('state_changed', \r\n                async (snap) => {\r\n                  const newPercentage = await (snap.bytesTransferred / snap.totalBytes) * 100;\r\n                await setProgress(newPercentage);\r\n                },  async (err) => {\r\n                await setError(err);\r\n                }, async () => {\r\n                  const newUrl = await storageRef.getDownloadURL();\r\n                await setUrl({newUrl});\r\n                });\r\n                   \r\n                } )\r\n             }\r\n          }else{\r\n          setError(\"unsupported image type* accepted image jpg/png\")\r\n        }\r\n  };\r\n    \r\n    const handleFormSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const token = localStorage && localStorage.getItem('token');\r\n        const res = await axios.post('/request/create', form, {\r\n            headers : {'authorization': token ? `Bearer ${token}` : ''}\r\n        }).catch(function (error) {\r\n            if (error.response) {\r\n              // The request was made and the server responded with a status code\r\n              // that falls out of the range of 2xx\r\n              console.log(error.response.data);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n              error.response.status && (\r\n                error.response.status == '500' || '400' && (\r\n                  axios.post('/signout'),\r\n                  localStorage.clear(),\r\n                  router.replace('/login')\r\n                )\r\n              )\r\n            } else if (error.request) {\r\n              // The request was made but no response was received\r\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n              // http.ClientRequest in node.js\r\n              console.log(error.request);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              console.log('Error', error.message);\r\n            }\r\n            console.log(error.config);\r\n          });\r\n          console.log(res)\r\n          res && (\r\n              res.status == 201 && (\r\n                  console.log(res),\r\n                  setRequestSuccess(true)\r\n              )\r\n          )\r\n    }\r\n\r\n    const handleReceiver = (e) => {\r\n            \r\n        if(e){\r\n            const {receiver} = {...input};\r\n            const {name, id, value} = e.target;\r\n            const {formErrors} = {...input};\r\n            requestValidate(id, value, formErrors)\r\n            receiver[name] = e.target.value;\r\n            const newInp = { ...input, receiver };\r\n            return setInput(newInp);\r\n        }\r\n    }; \r\n\r\n    const handleRequestUpdate = async(e, id) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        if(requestImages !== undefined){\r\n\r\n            for( let img of requestImages){\r\n                form.append('requestImages', img)\r\n            }                                                   \r\n       }\r\n            const {cartons, deliveryLocations, descriptions, itemsWorth, otherItems, tagName, receiver, sender, status, amount } = {...input}\r\n                form.append('cartons', cartons);\r\n                form.append('deliveryLocations', deliveryLocations);\r\n                form.append('descriptions', descriptions);\r\n                form.append('itemsWorth', itemsWorth);\r\n                form.append('otherItems',  otherItems); \r\n                form.append('tagName',  tagName); \r\n                form.append('receiver[firstName]',  receiver.firstName);\r\n                form.append('receiver[phoneNumber1]',  receiver.phoneNumber1);\r\n                form.append('receiver[phoneNumber2]',  receiver.phoneNumber2);\r\n                form.append('sender[firstName]',  sender.firstName);\r\n                form.append('sender[phoneNumber1]',  sender.phoneNumber1);\r\n                form.append('sender[phoneNumber2]',  sender.phoneNumber1); \r\n               \r\n                 input._id && form.append('status', status);\r\n                 input._id && form.append('amount', amount);\r\n                setForm(form);\r\n\r\n                for(let pair of form.entries()){\r\n                    console.log([pair[0]+ ',' + pair[1]])\r\n              }\r\n        const res = await axios.put('/request/' + id, form);\r\n    }\r\n\r\n    const handleFormPreview = (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        if(requestImages !== undefined){\r\n\r\n            for( let img of requestImages){\r\n                form.append('requestImages', img)\r\n            }                                                   \r\n       }\r\n            const {cartons, deliveryLocations, descriptions, itemsWorth, otherItems, tagName, receiver, sender, status, amount } = {...input}\r\n                form.append('cartons', cartons);\r\n                form.append('deliveryLocations', deliveryLocations);\r\n                form.append('descriptions', descriptions);\r\n                form.append('itemsWorth', itemsWorth);\r\n                form.append('otherItems',  otherItems); \r\n                form.append('tagName',  tagName); \r\n                form.append('receiver[firstName]',  receiver.firstName);\r\n                form.append('receiver[phoneNumber1]',  receiver.phoneNumber1);\r\n                form.append('receiver[phoneNumber2]',  receiver.phoneNumber2);\r\n                form.append('sender[firstName]',  sender.firstName);\r\n                form.append('sender[phoneNumber1]',  sender.phoneNumber1);\r\n                form.append('sender[phoneNumber2]',  sender.phoneNumber1); \r\n               \r\n                 input._id && form.append('status', status);\r\n                 input._id && form.append('amount', amount);\r\n\r\n\r\n                setForm(form);\r\n\r\n                for(let pair of form.entries()){\r\n                    console.log([pair[0]+ ',' + pair[1]])\r\n              }\r\n        setCount(\"active\");\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    const selector = [\r\n        {content: \"contact\" , icon: contact(), title: \"Contact\", id: 1 },\r\n        {content: \"gallery\", icon: gallery(), title: \"Gallery\", id: 2},\r\n        {content: \"ShippingRequest\", icon: offBack(), title: \"Request\", id: 3},\r\n        {content: \"\", icon: message(), title: \"Message\", id: 4}\r\n    ]\r\n\r\n\r\n    return (\r\n        <RequestContext.Provider value={{input, requestSuccess, setRequestSuccess, initialState, setCount, count, setInput, handleChange, handleReceiver, handleCheck, permanentImages, setPermanentImages, handleFormSubmit, handleFormPreview, photoChange, selector, setExtractedRequest, extractedRequest, contacts, setContacts, handleRequestUpdate, sessionToken, isLogin, setisLogin}}>\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RequestContextProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}