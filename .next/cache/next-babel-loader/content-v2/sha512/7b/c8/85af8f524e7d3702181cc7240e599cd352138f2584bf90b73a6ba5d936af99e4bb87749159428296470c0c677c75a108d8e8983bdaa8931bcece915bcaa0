{"ast":null,"code":"import _defineProperty from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nexport var profileValidate = function profileValidate(name, value, formErrors) {\n  switch (name) {\n    case \"firstName\":\n      formErrors.firstName = value.length < 3 && value.length > 0 ? '*minimum 3 character required*' : '';\n      break;\n\n    case \"lastName\":\n      formErrors.lastName = value.length < 3 && value.length > 0 ? '*minimum 3 character required*' : '';\n      break;\n\n    case \"email\":\n      formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : '*input a valid email address*';\n      break;\n\n    case \"phoneNumber\":\n      formErrors.phoneNumber = value.length < 11 && value.length > 0 ? '*input a valid phone number*' : '';\n      break;\n\n    case \"address\":\n      formErrors.address = value.length < 3 && value.length > 0 ? '*minimum 3 character required*' : '';\n      break;\n  }\n};\nexport var requestValidate = function requestValidate(name, value, formErrors) {\n  var _formErrors = _objectSpread({}, formErrors),\n      sender = _formErrors.sender;\n\n  switch (name, sender) {\n    case \"firstName\":\n      formErrors[sender].firstName = value.length < 3 && value.length > 0 ? '*minimum 3 character required*' : '';\n      break;\n\n    case \"lastName\":\n      formErrors.sender.phoneNumber1 = value.length < 3 && value.length > 0 ? '*minimum 3 character required*' : '';\n      break;\n\n    case \"phoneNumber\":\n      formErrors.lastName = value.length < 3 && value.length > 0 ? '*minimum 3 character required*' : '';\n      break;\n\n    case \"email\":\n      formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : '*input a valid email address*';\n      break;\n\n    case \"phoneNumber\":\n      formErrors.phoneNumber = value.length < 11 && value.length > 0 ? '*input a valid phone number*' : '';\n      break;\n\n    case \"address\":\n      formErrors.address = value.length < 3 && value.length > 0 ? '*minimum 3 character required*' : '';\n      break;\n  }\n};\nexport var loginValidate = function loginValidate(name, value, formErrors) {\n  switch (name) {\n    case \"email\":\n      formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : '*input a valid email address*';\n      break;\n\n    case \"password\":\n      formErrors.password = value.length < 6 && value.length > 0 ? '*password is too short*' : '';\n      break;\n  }\n};","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/validator/validate.js"],"names":["emailRegex","RegExp","profileValidate","name","value","formErrors","firstName","length","lastName","email","test","phoneNumber","address","requestValidate","sender","phoneNumber1","loginValidate","password"],"mappings":"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","sourcesContent":["export const emailRegex = RegExp( /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\n\r\nexport const profileValidate = ( name, value, formErrors ) => {\r\n\t\r\n\tswitch (name) {\r\n\t\tcase \"firstName\":\r\n\t\t\tformErrors.firstName = value.length < 3 && value.length > 0 ? '*minimum 3 character required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"lastName\":\r\n\t\t\tformErrors.lastName = value.length < 3 && value.length > 0 ? '*minimum 3 character required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"email\":\r\n\t\t\tformErrors.email = emailRegex.test(value) && value.length > 0 ? '': '*input a valid email address*';\r\n\t\t\tbreak;\r\n\t\tcase \"phoneNumber\":\r\n\t\t\tformErrors.phoneNumber = value.length < 11  && value.length > 0 ? '*input a valid phone number*' : '';\r\n\t\t\tbreak;\r\n\t\tcase \"address\":\r\n\t\t\tformErrors.address = value.length < 3 && value.length > 0 ? '*minimum 3 character required*': '';\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t  }\r\n};\r\n\r\nexport const requestValidate = ( name, value, formErrors ) => {\r\n\t\r\n\tconst {sender} = {...formErrors};\r\n\tswitch (name, sender) {\r\n\t\tcase \"firstName\":\r\n\t\t\tformErrors[sender].firstName = value.length < 3 && value.length > 0 ? '*minimum 3 character required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"lastName\":\r\n\t\t\tformErrors.sender.phoneNumber1 = value.length < 3 && value.length > 0 ? '*minimum 3 character required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"phoneNumber\":\r\n\t\t\tformErrors.lastName = value.length < 3 && value.length > 0 ? '*minimum 3 character required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"email\":\r\n\t\t\tformErrors.email = emailRegex.test(value) && value.length > 0 ? '': '*input a valid email address*';\r\n\t\t\tbreak;\r\n\t\tcase \"phoneNumber\":\r\n\t\t\tformErrors.phoneNumber = value.length < 11  && value.length > 0 ? '*input a valid phone number*' : '';\r\n\t\t\tbreak;\r\n\t\tcase \"address\":\r\n\t\t\tformErrors.address = value.length < 3 && value.length > 0 ? '*minimum 3 character required*': '';\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t  }\r\n};\r\n\r\nexport const loginValidate = ( name, value, formErrors ) => {\r\n\t\r\n\tswitch (name) {\r\n\t\tcase \"email\":\r\n\t\t\tformErrors.email = emailRegex.test(value) && value.length > 0 ? '': '*input a valid email address*';\r\n\t\t\tbreak;\r\n\t\tcase \"password\":\r\n\t\t\tformErrors.password = value.length < 6  && value.length > 0 ? '*password is too short*' : '';\r\n\t\t\tbreak;\r\n\t  }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}