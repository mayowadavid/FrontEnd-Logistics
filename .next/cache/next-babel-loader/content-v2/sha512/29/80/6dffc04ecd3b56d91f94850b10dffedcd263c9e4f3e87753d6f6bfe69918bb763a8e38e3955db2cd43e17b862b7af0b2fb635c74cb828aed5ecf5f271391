{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\RequestContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useState } from 'react';\nexport const RequestContext = /*#__PURE__*/createContext();\n\nconst RequestContextProvider = props => {\n  // const initialState =[\n  //     {sender: {\n  //         firstName: '',\n  //         phoneNumber1: '',\n  //         phoneNumber2: '' },\n  //    receiver: {\n  //            firstName: '',\n  //            phoneNumber1: '',\n  //            phoneNumber2: '' },\n  //    tagName: '',\n  //    cartons: '',\n  //    otherItems: true,\n  //    itemsWorth: '',\n  //    deliveryLocations: '',\n  //    descriptions: '',\n  //    galleryImages: {sourceUrl: [] },\n  //    }\n  // ];\n  const initialState = {\n    cartons: \"55\",\n    deliveryLocations: \"lagos\",\n    descriptions: \"thank you\",\n    itemsWorth: \"5000\",\n    otherItems: \"true\",\n    receiver: {\n      firstName: \"David\",\n      phoneNumber1: \"07130614615\",\n      phoneNumber2: \"08130614915\"\n    },\n    sender: {\n      firstName: \"mayowa\",\n      phoneNumber1: \"08130614615\",\n      phoneNumber2: \"08140614615\"\n    },\n    tagName: \"chisom\",\n    cartons: \"55\"\n  };\n  const {\n    0: input,\n    1: setInput\n  } = useState(initialState);\n  const {\n    0: permanentImages,\n    1: setPermanentImages\n  } = useState();\n  const {\n    0: requestImages,\n    1: setRequestImage\n  } = useState();\n  const {\n    0: count,\n    1: setCount\n  } = useState();\n\n  const handleChange = e => {\n    if (e) {\n      const {\n        sender\n      } = _objectSpread({}, input);\n\n      const {\n        name,\n        value\n      } = e.target;\n      sender[name] = e.target.value;\n\n      const newInput = _objectSpread(_objectSpread({}, input), {}, {\n        sender,\n        [name]: value\n      });\n\n      return setInput(newInput);\n    }\n  };\n\n  const photoChange = e => {\n    e.preventDefault();\n\n    if (e.target.files) {\n      setRequestImage(e.target.files);\n      let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\n      let filterUrl = Array.from(e.target.files).filter(x => (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]));\n      let sourceUrl = sourceUrl && filterUrl.map(file => URL.createObjectURL(file));\n      console.log(sourceUrl); //   setPermanentImages(fileIndex);\n      //   URL.revokeObjectURL(e.target.files); \n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    let form = new FormData();\n\n    if (requestImages.length > 0) {\n      for (let img of requestImages) {\n        form.append('requestImages', img);\n      }\n\n      const {\n        cartons,\n        deliveryLocations,\n        descriptions,\n        itemsWorth,\n        otherItems,\n        tagName,\n        receiver,\n        sender\n      } = _objectSpread({}, input);\n\n      form.append('cartons', cartons);\n      form.append('deliveryLocations', deliveryLocations);\n      form.append('descriptions', descriptions);\n      form.append('itemsWorth', itemsWorth);\n      form.append('otherItems', otherItems);\n      form.append('tagName', tagName);\n      form.append('receiver[firstName]', receiver.firstName);\n      form.append('receiver[phoneNumber1]', receiver.phoneNumber1);\n      form.append('receiver[phoneNumber2]', receiver.phoneNumber2);\n      form.append('sender[firstName]', sender.firstName);\n      form.append('sender[phoneNumber1]', sender.phoneNumber1);\n      form.append('sender[phoneNumber2]', sender.phoneNumber1);\n\n      for (let pair of form.entries()) {\n        console.log([pair[0] + ',' + pair[1]]);\n      } //  const res = await axios.post('/request/create', form);\n      // console.log(res);        \n      //  setInput(newSource);                                                 \n\n    }\n\n    return setCount(1);\n  };\n\n  const handleReceiver = e => {\n    if (e) {\n      const {\n        receiver\n      } = _objectSpread({}, input);\n\n      const {\n        name\n      } = e.target;\n      receiver[name] = e.target.value;\n\n      const newInp = _objectSpread(_objectSpread({}, input), {}, {\n        receiver\n      });\n\n      return setInput(newInp);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(RequestContext.Provider, {\n    value: {\n      input,\n      count,\n      setInput,\n      handleChange,\n      handleReceiver,\n      permanentImages,\n      setPermanentImages,\n      handleFormSubmit,\n      photoChange\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RequestContextProvider;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/RequestContext.js"],"names":["React","createContext","useState","RequestContext","RequestContextProvider","props","initialState","cartons","deliveryLocations","descriptions","itemsWorth","otherItems","receiver","firstName","phoneNumber1","phoneNumber2","sender","tagName","input","setInput","permanentImages","setPermanentImages","requestImages","setRequestImage","count","setCount","handleChange","e","name","value","target","newInput","photoChange","preventDefault","files","Format","filterUrl","Array","from","filter","x","type","size","sourceUrl","map","file","URL","createObjectURL","console","log","handleFormSubmit","form","FormData","length","img","append","pair","entries","handleReceiver","newInp","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from 'react';\r\nexport const RequestContext = createContext();\r\n\r\nconst RequestContextProvider = (props) =>{\r\n    // const initialState =[\r\n    //     {sender: {\r\n    //         firstName: '',\r\n    //         phoneNumber1: '',\r\n    //         phoneNumber2: '' },\r\n    //    receiver: {\r\n    //            firstName: '',\r\n    //            phoneNumber1: '',\r\n    //            phoneNumber2: '' },\r\n    //    tagName: '',\r\n    //    cartons: '',\r\n    //    otherItems: true,\r\n    //    itemsWorth: '',\r\n    //    deliveryLocations: '',\r\n    //    descriptions: '',\r\n    //    galleryImages: {sourceUrl: [] },\r\n           \r\n    //    }\r\n    // ];\r\n\r\n    const initialState =\r\n        {cartons: \"55\",\r\n        deliveryLocations: \"lagos\",\r\n        descriptions: \"thank you\",\r\n        itemsWorth: \"5000\",\r\n        otherItems: \"true\",\r\n        receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\r\n        sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\r\n        tagName: \"chisom\", cartons: \"55\"\r\n        };\r\n\r\n    const[input, setInput] = useState(initialState);\r\n    const[permanentImages, setPermanentImages] = useState();\r\n    const [requestImages, setRequestImage] = useState();\r\n    const [count, setCount] = useState();\r\n\r\n    const handleChange = (e) => {\r\n         \r\n        if(e){\r\n           const {sender} = {...input};\r\n           const {name, value} = e.target;\r\n           sender[name] = e.target.value;\r\n           const newInput = { ...input, sender, [name]: value };\r\n           return setInput(newInput);\r\n        }\r\n    }; \r\n\r\n    const photoChange = (e) => {\r\n        e.preventDefault();\r\n          if(e.target.files){\r\n              setRequestImage(e.target.files);\r\n               let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\r\n              let filterUrl = Array.from(e.target.files).filter(x=> (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]) );\r\n              \r\n                 let sourceUrl = sourceUrl && filterUrl.map((file)=>URL.createObjectURL(file)) \r\n                  console.log(sourceUrl);\r\n            \r\n            //   setPermanentImages(fileIndex);\r\n            //   URL.revokeObjectURL(e.target.files); \r\n      } \r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n\r\n           if(requestImages.length > 0){\r\n\r\n            for( let img of requestImages){\r\n                form.append('requestImages', img)\r\n            }   \r\n            const {cartons, deliveryLocations, descriptions, itemsWorth, otherItems, tagName, receiver, sender } = {...input}\r\n\r\n                form.append('cartons', cartons);\r\n                form.append('deliveryLocations', deliveryLocations);\r\n                form.append('descriptions', descriptions);\r\n                form.append('itemsWorth', itemsWorth);\r\n                form.append('otherItems',  otherItems);\r\n                form.append('tagName',  tagName); \r\n                form.append('receiver[firstName]',  receiver.firstName);\r\n                form.append('receiver[phoneNumber1]',  receiver.phoneNumber1);\r\n                form.append('receiver[phoneNumber2]',  receiver.phoneNumber2);\r\n                form.append('sender[firstName]',  sender.firstName);\r\n                form.append('sender[phoneNumber1]',  sender.phoneNumber1);\r\n                form.append('sender[phoneNumber2]',  sender.phoneNumber1);\r\n\r\n                for(let pair of form.entries()){\r\n                    console.log([pair[0]+ ',' + pair[1]])\r\n                }\r\n            //  const res = await axios.post('/request/create', form);\r\n            // console.log(res);        \r\n            //  setInput(newSource);                                                 \r\n       }\r\n        return setCount(1);\r\n    }\r\n\r\n\r\n    const handleReceiver = (e) => {\r\n            \r\n        if(e){\r\n            const {receiver} = {...input};\r\n            const {name} = e.target;\r\n            receiver[name] = e.target.value;\r\n            const newInp = { ...input, receiver };\r\n            return setInput(newInp);\r\n        }\r\n    }; \r\n\r\n    return (\r\n        <RequestContext.Provider value={{input, count, setInput, handleChange, handleReceiver, permanentImages, setPermanentImages, handleFormSubmit, photoChange}}>\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RequestContextProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}