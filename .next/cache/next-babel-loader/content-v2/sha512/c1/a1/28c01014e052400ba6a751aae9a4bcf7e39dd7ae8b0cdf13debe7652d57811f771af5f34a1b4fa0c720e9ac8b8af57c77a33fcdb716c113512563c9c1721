{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\G4 Logistics\\\\FrontEnd\\\\pages\\\\profile.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport ProfileHandler from '../components/profile/profileHandler';\nimport { AuthContext } from '../components/context/AuthContext';\nimport { ClientContext } from '../components/context/ClientContext';\nimport UserLogin from '../components/userLogin/userLogin';\nimport axios from '../helpers/axios';\nimport React, { useEffect, useContext } from 'react';\nimport DynamicHeader from '../components/DynamicHeader';\n\nvar Profile = function Profile() {\n  _s();\n\n  var _useContext = useContext(AuthContext),\n      isLogin = _useContext.isLogin,\n      setisLogin = _useContext.setisLogin;\n\n  var _useContext2 = useContext(ClientContext),\n      profile = _useContext2.profile,\n      setProfile = _useContext2.setProfile,\n      setProfileImage = _useContext2.setProfileImage;\n\n  console.log(isLogin); // useEffect (async () => {\n  //     const token = localStorage && localStorage.getItem('token');\n  //     console.log(token);\n  //     token !== null && (setisLogin(true))\n  //         let res = await axios.post('profile/create', {}, { headers: {\n  //             'Authorization': \n  //                                 token ? `Bearer ${token}`: ''\n  //         }}).catch(function (error) {\n  //             if (error.response) {\n  //               // The request was made and the server responded with a status code\n  //               // that falls out of the range of 2xx\n  //               console.log(error.response.data);\n  //               console.log(error.response.status);\n  //               console.log(error.response.headers);\n  //               error.response.status && (\n  //                 error.response.status == '500' || '400' && (\n  //                   axios.post('/signout'),\n  //                   localStorage.clear(),\n  //                   router.replace('/login')\n  //                 )\n  //               )\n  //             } else if (error.request) {\n  //               // The request was made but no response was received\n  //               // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n  //               // http.ClientRequest in node.js\n  //               console.log(error.request);\n  //             } else {\n  //               // Something happened in setting up the request that triggered an Error\n  //               console.log('Error', error.message);\n  //             }\n  //             console.log(error.config);\n  //           });\n  //           let formError =  {formErrors: {\n  //                 firstName: '',\n  //                 lastName: '',\n  //                 email: '',\n  //                 phoneNumber: '', \n  //                 address: ''\n  //               }}\n  //           res && (\n  //             res.data.profile.userId  && (\n  //                 setProfile({...res.data.profile, ...formError})\n  //             ),\n  //             res.data.profile.profileImage  && (\n  //               setProfileImage(res.data.profile.profileImage)\n  //           )\n  //             )\n  // }, []);\n\n  setisLogin(true);\n  return isLogin == true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DynamicHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }, _this), /*#__PURE__*/_jsxDEV(ProfileHandler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }, _this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(UserLogin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 17\n  }, _this);\n};\n\n_s(Profile, \"Y6UaBpuBFagP/LP491f/nDHQZ+A=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["F:/G4 Logistics/FrontEnd/pages/profile.js"],"names":["ProfileHandler","AuthContext","ClientContext","UserLogin","axios","React","useEffect","useContext","DynamicHeader","Profile","isLogin","setisLogin","profile","setProfile","setProfileImage","console","log"],"mappings":";;;;;;;AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AACA,SAASC,WAAT,QAA2B,mCAA3B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA4C,OAA5C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,oBAEWF,UAAU,CAACN,WAAD,CAFrB;AAAA,MAEZS,OAFY,eAEZA,OAFY;AAAA,MAEHC,UAFG,eAEHA,UAFG;;AAAA,qBAG4BJ,UAAU,CAACL,aAAD,CAHtC;AAAA,MAGZU,OAHY,gBAGZA,OAHY;AAAA,MAGHC,UAHG,gBAGHA,UAHG;AAAA,MAGSC,eAHT,gBAGSA,eAHT;;AAKpBC,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EALoB,CAMlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAC,EAAAA,UAAU,CAAC,IAAD,CAAV;AACA,SAASD,OAAO,IAAI,IAAX,gBACF;AAAA,4BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAEG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,aAFH;AAAA,kBADE,gBAIG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,WAJZ;AAKE,CA/DN;;GAAMD,O;;KAAAA,O;AAiEN,eAAeA,OAAf","sourcesContent":["import ProfileHandler from '../components/profile/profileHandler';\r\nimport { AuthContext} from '../components/context/AuthContext';\r\nimport { ClientContext } from '../components/context/ClientContext';\r\nimport UserLogin from '../components/userLogin/userLogin';\r\nimport axios from '../helpers/axios';\r\nimport React, { useEffect, useContext} from 'react';\r\nimport DynamicHeader from '../components/DynamicHeader';\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const{isLogin, setisLogin} = useContext(AuthContext); \r\n    const{profile, setProfile, setProfileImage} = useContext(ClientContext);\r\n   \r\n  console.log(isLogin);\r\n    // useEffect (async () => {\r\n    //     const token = localStorage && localStorage.getItem('token');\r\n    //     console.log(token);\r\n    //     token !== null && (setisLogin(true))\r\n    //         let res = await axios.post('profile/create', {}, { headers: {\r\n    //             'Authorization': \r\n    //                                 token ? `Bearer ${token}`: ''\r\n    //         }}).catch(function (error) {\r\n    //             if (error.response) {\r\n    //               // The request was made and the server responded with a status code\r\n    //               // that falls out of the range of 2xx\r\n    //               console.log(error.response.data);\r\n    //               console.log(error.response.status);\r\n    //               console.log(error.response.headers);\r\n    //               error.response.status && (\r\n    //                 error.response.status == '500' || '400' && (\r\n    //                   axios.post('/signout'),\r\n    //                   localStorage.clear(),\r\n    //                   router.replace('/login')\r\n    //                 )\r\n    //               )\r\n    //             } else if (error.request) {\r\n    //               // The request was made but no response was received\r\n    //               // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n    //               // http.ClientRequest in node.js\r\n    //               console.log(error.request);\r\n    //             } else {\r\n    //               // Something happened in setting up the request that triggered an Error\r\n    //               console.log('Error', error.message);\r\n    //             }\r\n    //             console.log(error.config);\r\n    //           });\r\n    //           let formError =  {formErrors: {\r\n    //                 firstName: '',\r\n    //                 lastName: '',\r\n    //                 email: '',\r\n    //                 phoneNumber: '', \r\n    //                 address: ''\r\n    //               }}\r\n                  \r\n                \r\n    //           res && (\r\n    //             res.data.profile.userId  && (\r\n    //                 setProfile({...res.data.profile, ...formError})\r\n    //             ),\r\n    //             res.data.profile.profileImage  && (\r\n    //               setProfileImage(res.data.profile.profileImage)\r\n    //           )\r\n    //             )\r\n  \r\n    // }, []);\r\n    setisLogin(true)\r\n    return ( isLogin == true  ?\r\n          (<>\r\n             <DynamicHeader />\r\n              <ProfileHandler />\r\n          </>): <UserLogin />\r\n    )}\r\n    \r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}