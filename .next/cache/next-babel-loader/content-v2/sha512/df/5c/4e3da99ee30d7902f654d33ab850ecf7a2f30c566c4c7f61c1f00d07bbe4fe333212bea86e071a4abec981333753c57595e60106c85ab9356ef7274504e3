{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\RequestContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useState } from 'react';\nexport var RequestContext = /*#__PURE__*/createContext();\n\nvar RequestContextProvider = function RequestContextProvider(props) {\n  _s();\n\n  // const initialState =[\n  //     {sender: {\n  //         firstName: '',\n  //         phoneNumber1: '',\n  //         phoneNumber2: '' },\n  //    receiver: {\n  //            firstName: '',\n  //            phoneNumber1: '',\n  //            phoneNumber2: '' },\n  //    tagName: '',\n  //    cartons: '',\n  //    otherItems: true,\n  //    itemsWorth: '',\n  //    deliveryLocations: '',\n  //    descriptions: '',\n  //    galleryImages: {sourceUrl: [] },\n  //    }\n  // ];\n  var initialState = _defineProperty({\n    cartons: \"55\",\n    deliveryLocations: \"lagos\",\n    descriptions: \"thank you\",\n    itemsWorth: \"5000\",\n    otherItems: \"true\",\n    receiver: {\n      firstName: \"David\",\n      phoneNumber1: \"07130614615\",\n      phoneNumber2: \"08130614915\"\n    },\n    sender: {\n      firstName: \"mayowa\",\n      phoneNumber1: \"08130614615\",\n      phoneNumber2: \"08140614615\"\n    },\n    tagName: \"chisom\"\n  }, \"cartons\", \"55\");\n\n  var _useState = useState(initialState),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var _useState2 = useState(),\n      permanentImages = _useState2[0],\n      setPermanentImages = _useState2[1];\n\n  var _useState3 = useState(),\n      requestImages = _useState3[0],\n      setRequestImage = _useState3[1];\n\n  var _useState4 = useState(),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var handleChange = function handleChange(e) {\n    if (e) {\n      var _input = _objectSpread({}, input),\n          sender = _input.sender;\n\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      sender[name] = e.target.value;\n\n      var newInput = _objectSpread(_objectSpread({}, input), {}, _defineProperty({\n        sender: sender\n      }, name, value));\n\n      return setInput(newInput);\n    }\n  };\n\n  var photoChange = function photoChange(e) {\n    e.preventDefault();\n\n    if (e.target.files) {\n      setRequestImage(e.target.files);\n      var Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\n      var filterUrl = Array.from(e.target.files).filter(function (x) {\n        return (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]);\n      });\n      var sourceUrl = filterUrl.map(function (file) {\n        return URL.createObjectURL(file);\n      });\n      console.log(sourceUrl); //   setPermanentImages(fileIndex);\n      //   URL.revokeObjectURL(e.target.files); \n    }\n  };\n\n  var handleFormSubmit = function handleFormSubmit(e) {\n    e.preventDefault();\n    var form = new FormData();\n\n    if (requestImages.length > 0) {\n      var _iterator = _createForOfIteratorHelper(requestImages),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var img = _step.value;\n          form.append('requestImages', img);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _input2 = _objectSpread({}, input),\n          cartons = _input2.cartons,\n          deliveryLocations = _input2.deliveryLocations,\n          descriptions = _input2.descriptions,\n          itemsWorth = _input2.itemsWorth,\n          otherItems = _input2.otherItems,\n          tagName = _input2.tagName,\n          receiver = _input2.receiver,\n          sender = _input2.sender;\n\n      form.append('cartons', cartons);\n      form.append('deliveryLocations', deliveryLocations);\n      form.append('descriptions', descriptions);\n      form.append('itemsWorth', itemsWorth);\n      form.append('otherItems', otherItems);\n      form.append('tagName', tagName);\n      form.append('receiver[firstName]', receiver.firstName);\n      form.append('receiver[phoneNumber1]', receiver.phoneNumber1);\n      form.append('receiver[phoneNumber2]', receiver.phoneNumber2);\n      form.append('sender[firstName]', sender.firstName);\n      form.append('sender[phoneNumber1]', sender.phoneNumber1);\n      form.append('sender[phoneNumber2]', sender.phoneNumber1);\n\n      var _iterator2 = _createForOfIteratorHelper(form.entries()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var pair = _step2.value;\n          console.log([pair[0] + ',' + pair[1]]);\n        } //  const res = await axios.post('/request/create', form);\n        // console.log(res);        \n        //  setInput(newSource);                                                 \n\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return setCount(1);\n  };\n\n  var handleReceiver = function handleReceiver(e) {\n    if (e) {\n      var _input3 = _objectSpread({}, input),\n          receiver = _input3.receiver;\n\n      var name = e.target.name;\n      receiver[name] = e.target.value;\n\n      var newInp = _objectSpread(_objectSpread({}, input), {}, {\n        receiver: receiver\n      });\n\n      return setInput(newInp);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(RequestContext.Provider, {\n    value: {\n      input: input,\n      count: count,\n      setInput: setInput,\n      handleChange: handleChange,\n      handleReceiver: handleReceiver,\n      permanentImages: permanentImages,\n      setPermanentImages: setPermanentImages,\n      handleFormSubmit: handleFormSubmit,\n      photoChange: photoChange\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RequestContextProvider, \"z/HnbWyps+2HByijMJ3Mm6EZ6R4=\");\n\n_c = RequestContextProvider;\nexport default RequestContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestContextProvider\");","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/RequestContext.js"],"names":["React","createContext","useState","RequestContext","RequestContextProvider","props","initialState","cartons","deliveryLocations","descriptions","itemsWorth","otherItems","receiver","firstName","phoneNumber1","phoneNumber2","sender","tagName","input","setInput","permanentImages","setPermanentImages","requestImages","setRequestImage","count","setCount","handleChange","e","target","name","value","newInput","photoChange","preventDefault","files","Format","filterUrl","Array","from","filter","x","type","size","sourceUrl","map","file","URL","createObjectURL","console","log","handleFormSubmit","form","FormData","length","img","append","entries","pair","handleReceiver","newInp","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from 'react';\r\nexport const RequestContext = createContext();\r\n\r\nconst RequestContextProvider = (props) =>{\r\n    // const initialState =[\r\n    //     {sender: {\r\n    //         firstName: '',\r\n    //         phoneNumber1: '',\r\n    //         phoneNumber2: '' },\r\n    //    receiver: {\r\n    //            firstName: '',\r\n    //            phoneNumber1: '',\r\n    //            phoneNumber2: '' },\r\n    //    tagName: '',\r\n    //    cartons: '',\r\n    //    otherItems: true,\r\n    //    itemsWorth: '',\r\n    //    deliveryLocations: '',\r\n    //    descriptions: '',\r\n    //    galleryImages: {sourceUrl: [] },\r\n           \r\n    //    }\r\n    // ];\r\n\r\n    const initialState =\r\n        {cartons: \"55\",\r\n        deliveryLocations: \"lagos\",\r\n        descriptions: \"thank you\",\r\n        itemsWorth: \"5000\",\r\n        otherItems: \"true\",\r\n        receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\r\n        sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\r\n        tagName: \"chisom\", cartons: \"55\"\r\n        };\r\n\r\n    const[input, setInput] = useState(initialState);\r\n    const[permanentImages, setPermanentImages] = useState();\r\n    const [requestImages, setRequestImage] = useState();\r\n    const [count, setCount] = useState();\r\n\r\n    const handleChange = (e) => {\r\n         \r\n        if(e){\r\n           const {sender} = {...input};\r\n           const {name, value} = e.target;\r\n           sender[name] = e.target.value;\r\n           const newInput = { ...input, sender, [name]: value };\r\n           return setInput(newInput);\r\n        }\r\n    }; \r\n\r\n    const photoChange = (e) => {\r\n        e.preventDefault();\r\n          if(e.target.files){\r\n              setRequestImage(e.target.files);\r\n               let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\r\n              let filterUrl = Array.from(e.target.files).filter(x=> (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]) );\r\n              \r\n                 let sourceUrl = filterUrl.map((file)=>URL.createObjectURL(file)) \r\n                  console.log(sourceUrl);\r\n            \r\n            //   setPermanentImages(fileIndex);\r\n            //   URL.revokeObjectURL(e.target.files); \r\n      } \r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n\r\n           if(requestImages.length > 0){\r\n\r\n            for( let img of requestImages){\r\n                form.append('requestImages', img)\r\n            }   \r\n            const {cartons, deliveryLocations, descriptions, itemsWorth, otherItems, tagName, receiver, sender } = {...input}\r\n\r\n                form.append('cartons', cartons);\r\n                form.append('deliveryLocations', deliveryLocations);\r\n                form.append('descriptions', descriptions);\r\n                form.append('itemsWorth', itemsWorth);\r\n                form.append('otherItems',  otherItems);\r\n                form.append('tagName',  tagName); \r\n                form.append('receiver[firstName]',  receiver.firstName);\r\n                form.append('receiver[phoneNumber1]',  receiver.phoneNumber1);\r\n                form.append('receiver[phoneNumber2]',  receiver.phoneNumber2);\r\n                form.append('sender[firstName]',  sender.firstName);\r\n                form.append('sender[phoneNumber1]',  sender.phoneNumber1);\r\n                form.append('sender[phoneNumber2]',  sender.phoneNumber1);\r\n\r\n                for(let pair of form.entries()){\r\n                    console.log([pair[0]+ ',' + pair[1]])\r\n                }\r\n            //  const res = await axios.post('/request/create', form);\r\n            // console.log(res);        \r\n            //  setInput(newSource);                                                 \r\n       }\r\n        return setCount(1);\r\n    }\r\n\r\n\r\n    const handleReceiver = (e) => {\r\n            \r\n        if(e){\r\n            const {receiver} = {...input};\r\n            const {name} = e.target;\r\n            receiver[name] = e.target.value;\r\n            const newInp = { ...input, receiver };\r\n            return setInput(newInp);\r\n        }\r\n    }; \r\n\r\n    return (\r\n        <RequestContext.Provider value={{input, count, setInput, handleChange, handleReceiver, permanentImages, setPermanentImages, handleFormSubmit, photoChange}}>\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RequestContextProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}