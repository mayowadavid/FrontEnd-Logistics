{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\G4 Logistics\\\\FrontEnd\\\\pages\\\\contact.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { RequestContext } from \"../components/context/RequestContext\";\nimport { AuthContext } from \"../components/context/AuthContext\";\nimport SideButton from \"../components/AdminRequest/sideButton\";\nimport AdminSignin from \"../components/adminLogin/adminSignin\";\nimport BottomButton from \"../components/AdminRequest/BottomButton\";\nimport DynamicButtom from \"../components/AdminRequest/DynamicButtom\";\nimport { auth, database } from \"../components/firebase\";\n\nconst Contact = () => {\n  const {\n    0: contacts,\n    1: setContacts\n  } = useState([]);\n  const {\n    isAdmin\n  } = useContext(AuthContext);\n  const initialState = {\n    firstName: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    email: \"\"\n  };\n  const {\n    0: contact,\n    1: setContact\n  } = useState(initialState);\n  const {\n    0: contactForm,\n    1: setContactForm\n  } = useState();\n  const {\n    0: selectAll,\n    1: setSelectAll\n  } = useState(false);\n  const {\n    0: q,\n    1: setQ\n  } = useState(\"\");\n  const {\n    0: bulk,\n    1: setBulk\n  } = useState(\"\");\n  const {\n    0: contactOption,\n    1: setContactOption\n  } = useState([{\n    options: \"Move-to-trash\"\n  }, {\n    options: \" Change status to processing\"\n  }, {\n    options: \"Change status to on-hold\"\n  }, {\n    options: \"Change status to completed\"\n  }]);\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      user !== null && database.collection('Profile').onSnapshot(snapshot => setContacts(snapshot.docs.map(doc => ({\n        data: doc.data(),\n        id: doc.id\n      }))));\n    });\n  }, []);\n  console.log(contacts); // change contact\n\n  const handleChange = e => {\n    if (e) {\n      const select = false;\n      const {\n        name,\n        value\n      } = e.target;\n\n      const newContact = _objectSpread(_objectSpread({}, contact), {}, {\n        select,\n        [name]: value\n      });\n\n      return setContact(newContact);\n    }\n  }; // search function\n\n\n  const search = rows => {\n    const columns = rows[0] && Object.keys(rows[0]);\n    return rows.filter(row => columns.some(column => row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1));\n  }; // submit contact\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setContactForm('');\n    const {\n      firstName,\n      email,\n      phoneNumber,\n      address,\n      select\n    } = contact;\n    return setContacts([...contacts, {\n      firstName,\n      email,\n      phoneNumber,\n      address,\n      select\n    }]);\n  }; // make form visible\n\n\n  const activateForm = () => {\n    return setContactForm('active');\n  }; //change selector\n\n\n  const changeSelector = e => {\n    setSelectAll(e.target.checked);\n    contacts.map(({\n      select\n    }) => select = e.target.checked);\n    return contacts;\n  }; // CREATE contacts\n\n\n  const createContact = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"contact-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          onChange: handleChange,\n          id: \"firstName\",\n          value: contact.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phoneNumber\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phoneNumber\",\n          onChange: handleChange,\n          id: \"phoneNumber\",\n          value: contact.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"address\",\n          onChange: handleChange,\n          id: \"address\",\n          value: contact.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          onChange: handleChange,\n          id: \"email\",\n          value: contact.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }, this);\n  }; // handle bulk submit\n\n\n  const handleBulk = e => {\n    e.preventDefault();\n    setBulk(e.target.value);\n  }; // handle bulk submit\n\n\n  const handleBulkSubmit = e => {\n    e.preventDefault();\n\n    if (bulk === \"Move-to-trash\") {\n      contacts.filter(select => select === true);\n    }\n  };\n\n  return isAdmin == true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), contactForm == 'active' ? createContact() : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \" \"\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shipping-request\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-contact\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: activateForm,\n              children: \"Create New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"search\",\n              name: \"search\",\n              value: q,\n              onChange: e => setQ(e.target.value),\n              placeholder: \"search...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-contact\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-head\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: handleBulk,\n              name: \"options\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bulk-action\",\n                children: \"Bulk Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 49\n              }, this), contactOption.map(({\n                options\n              }) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: options,\n                children: options\n              }, uuidv4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 57\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              onClick: handleBulkSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"All dates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Date1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Date2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"All dates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Date1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Date2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"contact-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: changeSelector\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 95\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 108\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 122\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 143\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: search(contacts).map(({\n            data\n          }, i) => {\n            let {\n              firstName,\n              email,\n              phoneNumber,\n              address\n            } = data;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: e => {\n                    (contacts[i] = e.target.checked) || setSelectAll(false);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: firstName ? firstName : '--'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 186\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 182\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: email ? email : '--'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 235\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 231\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: phoneNumber ? phoneNumber : '--'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 282\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 278\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: address ? address : '--'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 340\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 336\n              }, this)]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 49\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: changeSelector\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 102\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 98\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 132\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 128\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 159\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 180\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DynamicButtom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BottomButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(AdminSignin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 15\n  }, this);\n};\n\nexport default Contact;","map":{"version":3,"sources":["G:/G4 Logistics/FrontEnd/pages/contact.js"],"names":["useContext","useEffect","useState","v4","uuidv4","RequestContext","AuthContext","SideButton","AdminSignin","BottomButton","DynamicButtom","auth","database","Contact","contacts","setContacts","isAdmin","initialState","firstName","phoneNumber","address","email","contact","setContact","contactForm","setContactForm","selectAll","setSelectAll","q","setQ","bulk","setBulk","contactOption","setContactOption","options","onAuthStateChanged","user","collection","onSnapshot","snapshot","docs","map","doc","data","id","console","log","handleChange","e","select","name","value","target","newContact","search","rows","columns","Object","keys","filter","row","some","column","toString","toLowerCase","indexOf","handleSubmit","preventDefault","activateForm","changeSelector","checked","createContact","handleBulk","handleBulkSubmit","i"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4} from 'uuid';\r\nimport { RequestContext } from \"../components/context/RequestContext\";\r\nimport { AuthContext } from \"../components/context/AuthContext\";\r\nimport SideButton from \"../components/AdminRequest/sideButton\";\r\nimport AdminSignin from \"../components/adminLogin/adminSignin\";\r\nimport BottomButton from \"../components/AdminRequest/BottomButton\";\r\nimport DynamicButtom from \"../components/AdminRequest/DynamicButtom\";\r\nimport { auth, database } from \"../components/firebase\";\r\n\r\nconst Contact = () => {\r\n    const[contacts, setContacts] = useState([]); \r\n    const{isAdmin} = useContext(AuthContext);\r\n\r\n        const initialState =\r\n        {\r\n        firstName: \"\",\r\n        phoneNumber: \"\",\r\n        address: \"\",\r\n        email: \"\"\r\n        };\r\n     \r\n    const [contact, setContact] = useState(initialState);\r\n    \r\n    const [contactForm, setContactForm] = useState();\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [q, setQ] = useState(\"\"); \r\n    const [bulk, setBulk] = useState(\"\");\r\n    const [contactOption, setContactOption] = useState([\r\n        {options: \"Move-to-trash\"},\r\n        {options: \" Change status to processing\"},\r\n        {options: \"Change status to on-hold\"},\r\n        {options: \"Change status to completed\"}\r\n    ])\r\n\r\n    \r\n    useEffect(()=>{\r\n        auth.onAuthStateChanged(user=>{\r\n          user !== null && database.collection('Profile').onSnapshot(snapshot=>(\r\n            setContacts(snapshot.docs.map(doc=>({\r\n               data: doc.data(),\r\n               id: doc.id\r\n            }))))\r\n          );\r\n        })\r\n   }, [])\r\n    console.log(contacts);\r\n\r\n    // change contact\r\n        const handleChange = (e) => {\r\n                if(e){\r\n                    const select = false;\r\n                   const {name, value} = e.target;\r\n                   const newContact = {...contact, select, [name]: value};\r\n                \r\n                   return setContact(newContact);\r\n                }\r\n            }; \r\n\r\n            // search function\r\n\r\n            const search =(rows) => {\r\n                const columns = rows[0] && Object.keys(rows[0])\r\n                return rows.filter((row) => \r\n                columns.some((column) => row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1)\r\n                );\r\n            }\r\n\r\n           // submit contact\r\n        \r\n            const handleSubmit = (e) =>{\r\n                e.preventDefault();\r\n             \r\n                setContactForm('');\r\n                const {firstName, email, phoneNumber, address, select} = contact\r\n               return setContacts([...contacts, {firstName, email, phoneNumber, address, select}])\r\n            }\r\n            // make form visible\r\n            const activateForm = () => {\r\n               return  setContactForm('active')\r\n            }\r\n            //change selector\r\n            const changeSelector = (e) => {\r\n                \r\n                   setSelectAll( e.target.checked)\r\n                   contacts.map(({select})=>\r\n                   select = e.target.checked\r\n                   )\r\n                return contacts;\r\n            }\r\n            \r\n        // CREATE contacts\r\n        const createContact = () =>{\r\n\r\n              return  (\r\n              <div className=\"form-wrapper\">\r\n                         <form onSubmit={handleSubmit} className=\"contact-form\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" name=\"firstName\" onChange={handleChange} id=\"firstName\" value={contact.firstName} />\r\n                        <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                        <input type=\"text\" name=\"phoneNumber\"  onChange={handleChange}  id=\"phoneNumber\" value={contact.phoneNumber} />\r\n                        <label htmlFor=\"address\">Address</label>\r\n                        <input type=\"text\" name=\"address\" onChange={handleChange}  id=\"address\" value={contact.address} />\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"text\" name=\"email\" onChange={handleChange}  id=\"email\" value={contact.email} />\r\n                        <input type=\"submit\" value=\"submit\" />\r\n                </form>\r\n              </div>\r\n             )\r\n        }\r\n        // handle bulk submit\r\n        const handleBulk = (e) => {\r\n            e.preventDefault();\r\n            setBulk(e.target.value);\r\n        }\r\n        \r\n        // handle bulk submit\r\n        const handleBulkSubmit = (e) => {\r\n            e.preventDefault();\r\n            if(bulk === \"Move-to-trash\"){\r\n                contacts.filter((select)=> \r\n                    select === true\r\n                )\r\n            }\r\n        }\r\n\r\n    \r\n    return ( isAdmin == true ? (<>\r\n        <SideButton />\r\n         {contactForm == 'active' ? createContact() : <> </> \r\n         } \r\n            <div className=\"shipping-request\"> \r\n                <div className=\"create-contact\">\r\n                    <div className=\"add-button\">\r\n                            <div ><p onClick={activateForm}>Create New</p></div>\r\n                            <div><input type=\"text\" id=\"search\" name=\"search\" value={q} onChange={(e) => setQ(e.target.value)} placeholder=\"search...\"/></div>               \r\n                    </div>\r\n                </div>\r\n                    <div className=\"all-contact\" >\r\n                            <div className=\"contact-head\"> \r\n                                    <div>                                        \r\n                                            <select onChange={ handleBulk }  name=\"options\">\r\n                                                <option value=\"bulk-action\">Bulk Actions</option>\r\n                                                {\r\n                                                    contactOption.map(({options})=>\r\n                                                        <option value={options}  key={uuidv4()} >{options}</option>  \r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                        <input type=\"submit\" onClick={ handleBulkSubmit} />                                        \r\n                                    </div>\r\n                                    <div>\r\n                                        <select>\r\n                                            <option>All dates</option>\r\n                                            <option>Date1</option>\r\n                                            <option>Date2</option>\r\n                                        </select>\r\n                                        <select>\r\n                                            <option>All dates</option>\r\n                                            <option>Date1</option>\r\n                                            <option>Date2</option>\r\n                                        </select>\r\n                                        <input type=\"submit\" value=\"Filter\" />\r\n                                    </div>\r\n                            </div>\r\n                    </div>\r\n                    <table className=\"contact-body\">\r\n                        <thead> \r\n                             <tr><th><input type=\"checkbox\" onChange={ changeSelector} /></th><th>Name</th><th>Email</th><th>Phone Number</th><th>Address</th></tr>\r\n                        </thead>\r\n                        <tbody>{  \r\n                                             search(contacts).map(({data}, i) =>{\r\n                                                 let {firstName, email, phoneNumber, address} =data\r\n                                        return (<tr key={uuidv4()} ><td><input type=\"checkbox\"   onChange={(e)=> { (contacts[i] = e.target.checked) || setSelectAll(false)}}  /></td><td><div>{firstName ? firstName: '--'}</div></td><td><strong>{email ? email: '--'}</strong></td><td><strong>{phoneNumber? phoneNumber: '--'}</strong></td><td><strong>{address ? address: '--'}</strong></td></tr>)\r\n                                    }\r\n                                  ) }\r\n                        </tbody>\r\n                        <thead> \r\n                                <tr><th><input type=\"checkbox\" onChange={ changeSelector} /></th><th><strong>Name</strong></th><th><strong>Email</strong></th><th>Phone Number</th><th>Address</th></tr>\r\n                        </thead>\r\n                    </table>\r\n                    <DynamicButtom />\r\n                 <BottomButton />\r\n                </div>\r\n        </>): <AdminSignin />\r\n    )\r\n}  \r\nexport default Contact;"]},"metadata":{},"sourceType":"module"}