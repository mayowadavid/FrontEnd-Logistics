{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\ClientContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { object } from 'prop-types';\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from '../../helpers/axios';\nimport { generatePublicUrl } from '../../urlConfig';\nimport { profileValidate } from '../validator/validate';\nexport var ClientContext = /*#__PURE__*/createContext();\n\nvar ClientContextProvider = function ClientContextProvider(props) {\n  _s();\n\n  var initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phoneNumber: '',\n    address: '',\n    formErrors: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '',\n      address: ''\n    }\n  };\n\n  var _useState = useState(),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useState2 = useState(initialState),\n      profile = _useState2[0],\n      setProfile = _useState2[1]; // .type !== Format[0] || Format[1] || Format[2]) && (profileImage.size <= Format[2] || profileImage.size <= Format[3])\n\n\n  var formValid = function formValid(formErrors) {\n    var valid = true;\n    object.values(formErrors).forEach(function (val) {\n      val.length > 0 && (valid = false);\n    });\n  }; // const profileDetails = (e) => {\n  //   e.preventDefault();\n  //   const {name, value} = e.target;\n  //   let {formErrors} = {...profile}\n  //   profileValidate(name, value, formErrors);\n  //   const {firstName, lastName, email, phoneNumber, address} = {... profile}\n  //   let form = new FormData();\n  //   form.append('profileImage', profileImage)\n  //   form.append('firstName', firstName);\n  //   form.append('email', email);\n  //   form.append('lastName', lastName);\n  //   form.append('phoneNumber',  phoneNumber);\n  //   form.append('address',  address);\n  //        for(let pair of form.entries()){\n  //         console.log([pair[0]+ ',' + pair[1]])\n  //   }\n  //   setForm(form);\n  //     return setProfile({...profile,  [name]: value})  \n  // }\n\n\n  var handleProfileSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var token, res, updatedProfile, _profileImage, newProfile;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              token = localStorage && localStorage.getItem('token');\n              setCount('');\n              _context.next = 5;\n              return axios.post('/profile/update', form, {\n                headers: {\n                  'authorization': token ? \"Bearer \".concat(token) : ''\n                }\n              })[\"catch\"](function (error) {\n                if (error.response) {\n                  // The request was made and the server responded with a status code\n                  // that falls out of the range of 2xx\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  // The request was made but no response was received\n                  // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                  // http.ClientRequest in node.js\n                  console.log(error.request);\n                } else {\n                  // Something happened in setting up the request that triggered an Error\n                  console.log('Error', error.message);\n                }\n\n                console.log(error.config);\n              });\n\n            case 5:\n              res = _context.sent;\n              console.log(res);\n\n              if (res.status == 201) {\n                updatedProfile = res.data.updatedProfile;\n                _profileImage = updatedProfile.profileImage;\n                newProfile = generatePublicUrl(_profileImage);\n                setTemporaryImage(newProfile);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleProfileSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleProfilePreview = function handleProfilePreview(e) {\n    e.preventDefault();\n    var form = new FormData();\n    form.append('profileImage', profileImage);\n    form.append('firstName', firstName);\n    form.append('email', email);\n    form.append('lastName', lastName);\n    form.append('phoneNumber', phoneNumber);\n    form.append('address', address);\n\n    var _iterator = _createForOfIteratorHelper(form.entries()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var pair = _step.value;\n        console.log([pair[0] + ',' + pair[1]]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    setForm(form);\n    setCount('active');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      handleProfilePreview: handleProfilePreview,\n      profile: profile,\n      handleProfileSubmit: handleProfileSubmit,\n      count: count,\n      setCount: setCount\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ClientContextProvider, \"ctgaXb5mcxBhb6riWs75dVHiglE=\");\n\n_c = ClientContextProvider;\nexport default ClientContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientContextProvider\");","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/ClientContext.js"],"names":["object","React","createContext","useState","useEffect","axios","generatePublicUrl","profileValidate","ClientContext","ClientContextProvider","props","initialState","firstName","lastName","email","phoneNumber","address","formErrors","count","setCount","profile","setProfile","formValid","valid","values","forEach","val","length","handleProfileSubmit","e","preventDefault","token","localStorage","getItem","post","form","headers","error","response","console","log","data","status","request","message","config","res","updatedProfile","profileImage","newProfile","setTemporaryImage","handleProfilePreview","FormData","append","entries","pair","setForm","children"],"mappings":"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","sourcesContent":["import { object } from 'prop-types';\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from '../../helpers/axios';\r\nimport {generatePublicUrl} from '../../urlConfig';\r\nimport { profileValidate } from '../validator/validate';\r\n\r\nexport const ClientContext = createContext();\r\n\r\nconst ClientContextProvider = (props) => {\r\n\r\n    const initialState = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '', \r\n      address: '',\r\n      formErrors: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: '', \r\n        address: ''\r\n      }\r\n    }\r\n\r\n    const [count, setCount] = useState(); \r\n    const [profile, setProfile] = useState(initialState);\r\n    \r\n\r\n    // .type !== Format[0] || Format[1] || Format[2]) && (profileImage.size <= Format[2] || profileImage.size <= Format[3])\r\n\r\n    \r\n\r\n    \r\n    \r\n\r\n    \r\n\r\n  const formValid = formErrors => {\r\n    let valid = true;\r\n\r\n    object.values(formErrors).forEach(val => {\r\n      val.length > 0 && (valid = false)\r\n    })\r\n  }\r\n\r\n  // const profileDetails = (e) => {\r\n  //   e.preventDefault();\r\n   \r\n  //   const {name, value} = e.target;\r\n  //   let {formErrors} = {...profile}\r\n\r\n  //   profileValidate(name, value, formErrors);\r\n\r\n  //   const {firstName, lastName, email, phoneNumber, address} = {... profile}\r\n  //   let form = new FormData();\r\n  //   form.append('profileImage', profileImage)\r\n  //   form.append('firstName', firstName);\r\n  //   form.append('email', email);\r\n  //   form.append('lastName', lastName);\r\n  //   form.append('phoneNumber',  phoneNumber);\r\n  //   form.append('address',  address);\r\n  //        for(let pair of form.entries()){\r\n  //         console.log([pair[0]+ ',' + pair[1]])\r\n  //   }\r\n  //   setForm(form);\r\n  \r\n  //     return setProfile({...profile,  [name]: value})  \r\n  // }\r\n\r\n  const handleProfileSubmit = async(e) => {\r\n    e.preventDefault();\r\n    const token = localStorage && localStorage.getItem('token');\r\n    setCount('');\r\n   \r\n    let res = await axios.post('/profile/update', form, {\r\n      headers : {'authorization': token ? `Bearer ${token}` : ''}\r\n  }).catch(function (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n      }\r\n      console.log(error.config);\r\n    });\r\n    console.log(res);\r\n    if(res.status == 201){\r\n      const {updatedProfile} = res.data;\r\n      const {profileImage} = updatedProfile;\r\n      let newProfile = generatePublicUrl(profileImage);\r\n     setTemporaryImage(newProfile);\r\n    }\r\n  }; \r\n\r\n  const handleProfilePreview = (e) => {\r\n    e.preventDefault();\r\n    let form = new FormData();\r\n    form.append('profileImage', profileImage)\r\n    form.append('firstName', firstName);\r\n    form.append('email', email);\r\n    form.append('lastName', lastName);\r\n    form.append('phoneNumber',  phoneNumber);\r\n    form.append('address',  address);\r\n         for(let pair of form.entries()){\r\n          console.log([pair[0]+ ',' + pair[1]])\r\n    }\r\n    setForm(form);\r\n    setCount('active');\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n    return (\r\n        <ClientContext.Provider value={{ handleProfilePreview, profile, handleProfileSubmit, count, setCount}}>\r\n            {props.children}\r\n        </ClientContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ClientContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}