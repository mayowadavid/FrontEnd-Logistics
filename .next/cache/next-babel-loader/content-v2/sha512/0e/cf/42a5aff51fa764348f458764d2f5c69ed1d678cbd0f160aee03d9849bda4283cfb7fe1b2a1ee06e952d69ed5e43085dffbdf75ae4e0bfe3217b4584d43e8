{"ast":null,"code":"import _regeneratorRuntime from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { store } from '../firebase';\n\nvar useStorage = function useStorage(image) {\n  _s();\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(null),\n      url = _useState3[0],\n      setUrl = _useState3[1];\n\n  useEffect(function () {\n    // references\n    var storageRef = store.ref(\"profileimages/\".concat(image.name));\n    storageRef.put(image).on('state_changed', function (snap) {\n      var percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, function (err) {\n      setError(err);\n    }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return storageRef.getDownloadURL();\n\n            case 2:\n              url = _context.sent;\n              setUrl(url);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n  }, [image]);\n  return {\n    progress: progress,\n    url: url,\n    error: error\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/storageHook.js"],"names":["useState","useEffect","store","useStorage","image","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,KAAR,QAAoB,aAApB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACIJ,QAAQ,CAAC,CAAD,CADZ;AAAA,MACrBK,QADqB;AAAA,MACXC,WADW;;AAAA,mBAEFN,QAAQ,CAAC,IAAD,CAFN;AAAA,MAErBO,KAFqB;AAAA,MAEdC,QAFc;;AAAA,mBAGNR,QAAQ,CAAC,IAAD,CAHF;AAAA,MAGrBS,GAHqB;AAAA,MAGhBC,MAHgB;;AAK5BT,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMU,UAAU,GAAGT,KAAK,CAACU,GAAN,yBAA2BR,KAAK,CAACS,IAAjC,EAAnB;AAGAF,IAAAA,UAAU,CAACG,GAAX,CAAeV,KAAf,EAAsBW,EAAtB,CAAyB,eAAzB,EAA0C,UAACC,IAAD,EAAU;AAClD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAb,MAAAA,WAAW,CAACW,UAAD,CAAX;AACD,KAHD,EAGG,UAACG,GAAD,EAAS;AACVZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AACD,KALD,wEAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBT,UAAU,CAACU,cAAX,EADjB;;AAAA;AACKZ,cAAAA,GADL;AAEDC,cAAAA,MAAM,CAACD,GAAD,CAAN;;AAFC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALH;AASD,GAdQ,EAcN,CAACL,KAAD,CAdM,CAAT;AAgBA,SAAO;AAAEC,IAAAA,QAAQ,EAARA,QAAF;AAAYI,IAAAA,GAAG,EAAHA,GAAZ;AAAiBF,IAAAA,KAAK,EAALA;AAAjB,GAAP;AACD,CAtBD;;GAAMJ,U;;AAwBN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {store} from '../firebase';\r\n\r\nconst useStorage = (image) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = store.ref(`profileimages/${image.name}`);\r\n   \r\n    \r\n    storageRef.put(image).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storageRef.getDownloadURL();\r\n      setUrl(url);\r\n    });\r\n  }, [image]);\r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}