{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from \"next/app\";\nimport React from \"react\"; // Main CSS\n\nimport './style.css';\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({\n        ctx\n      });\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\n\nMyApp.getInitialProps = async appContext => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n  return _objectSpread({}, appProps);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/pages/_app.js"],"names":["App","React","MyApp","constructor","props","state","isLoading","getInitialProps","Component","ctx","pageProps","render","appContext","appProps"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AACtBG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AACD;;AACD,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAE/C,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0B;AAAEE,QAAAA;AAAF,OAA1B,CAAlB;AACD;;AAED,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA0B,KAAKN,KAArC;AACA,wBACI,QAAC,SAAD,oBAAeM,SAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AAnBqB,C,CAsBxB;AACA;AACA;AACA;;;AAEAR,KAAK,CAACK,eAAN,GAAwB,MAAMK,UAAN,IAAoB;AAC1C;AACA,QAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACO,eAAJ,CAAoBK,UAApB,CAAvB;AACA,2BAAYC,QAAZ;AACD,CAJD;;AAMA,eAAeX,KAAf","sourcesContent":["import App from \"next/app\";\r\nimport React from \"react\";\r\n\r\n\r\n// Main CSS\r\nimport './style.css';\r\n\r\nclass MyApp extends App {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isLoading: false };\r\n  }\r\n  static async getInitialProps({ Component, ctx }) {\r\n    \r\n    let pageProps = {};\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps({ ctx });\r\n    }\r\n\r\n    return { pageProps };\r\n  }\r\n  render() {\r\n    const { Component, pageProps} = this.props;\r\n    return (\r\n        <Component {...pageProps} />\r\n    );\r\n  }\r\n}\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n\r\nMyApp.getInitialProps = async appContext => {\r\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  const appProps = await App.getInitialProps(appContext);\r\n  return { ...appProps };\r\n};\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}