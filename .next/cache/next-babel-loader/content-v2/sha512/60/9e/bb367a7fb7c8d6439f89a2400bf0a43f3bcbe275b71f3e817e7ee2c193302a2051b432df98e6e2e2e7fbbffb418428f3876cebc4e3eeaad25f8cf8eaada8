{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\RequestContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from '../../helpers/axios';\nimport { generatePublicUrl } from '../../urlConfig';\nimport { gallery, message, offBack, contact } from \"../../svg\";\nimport { requestValidate } from '../validator/validate';\nexport const RequestContext = /*#__PURE__*/createContext();\n\nconst RequestContextProvider = props => {\n  // const initialState =\n  //     {sender: {\n  //         firstName: '',\n  //         phoneNumber1: '',\n  //         phoneNumber2: '' },\n  //    receiver: {\n  //            firstName: '',\n  //            phoneNumber1: '',\n  //            phoneNumber2: '' },\n  //    cartons: '',\n  //    createdAt: '',\n  //    deliveryLocations: '',\n  //    descriptions: '',\n  //    itemsWorth: '',\n  //    otherItems: true,\n  //    requestImages: [{img: '',\n  //                     _id: ''}],\n  //     status: '',\n  //     tagName: '',\n  //     amount: '',\n  //     _id: ''\n  //    };\n  const initialState = {\n    cartons: \"55\",\n    deliveryLocations: \"lagos\",\n    descriptions: \"thank you\",\n    itemsWorth: \"5000\",\n    receiver: {\n      firstName: \"David\",\n      phoneNumber1: \"07130614615\",\n      phoneNumber2: \"08130614915\"\n    },\n    sender: {\n      firstName: \"mayowa\",\n      phoneNumber1: \"08130614615\",\n      phoneNumber2: \"08140614615\"\n    },\n    tagName: \"chisom\",\n    otherItems: false,\n    formErrors: {\n      sender: {\n        firstName: '',\n        phoneNumber1: '',\n        phoneNumber2: ''\n      },\n      receiver: {\n        firstName: '',\n        phoneNumber1: '',\n        phoneNumber2: ''\n      },\n      cartons: '',\n      createdAt: '',\n      deliveryLocations: '',\n      descriptions: '',\n      itemsWorth: '',\n      otherItems: true,\n      requestImages: '',\n      status: '',\n      tagName: '',\n      amount: ''\n    }\n  };\n  const {\n    0: input,\n    1: setInput\n  } = useState(initialState);\n  const {\n    0: contacts,\n    1: setContacts\n  } = useState([]);\n  const {\n    0: extractedRequest,\n    1: setExtractedRequest\n  } = useState();\n  const {\n    0: sessionToken,\n    1: setSessionToken\n  } = useState();\n  useEffect(async () => {\n    let res = await axios.get('/profile/get').catch(function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n\n    if (res.status == 201) {\n      const {\n        profile\n      } = res.data;\n      return setContacts(profile);\n    }\n  }, []);\n  const {\n    0: permanentImages,\n    1: setPermanentImages\n  } = useState([]);\n  const {\n    0: requestImages,\n    1: setRequestImage\n  } = useState();\n  const {\n    0: count,\n    1: setCount\n  } = useState();\n  const {\n    0: form,\n    1: setForm\n  } = useState();\n\n  const handleChange = e => {\n    let form = new FormData();\n\n    if (requestImages !== undefined) {\n      for (let img of requestImages) {\n        form.append('requestImages', img);\n      }\n    }\n\n    const {\n      cartons,\n      deliveryLocations,\n      descriptions,\n      itemsWorth,\n      otherItems,\n      tagName,\n      receiver,\n      sender,\n      status,\n      amount\n    } = _objectSpread({}, input);\n\n    form.append('cartons', cartons);\n    form.append('deliveryLocations', deliveryLocations);\n    form.append('descriptions', descriptions);\n    form.append('itemsWorth', itemsWorth);\n    form.append('otherItems', otherItems);\n    form.append('tagName', tagName);\n    form.append('receiver[firstName]', receiver.firstName);\n    form.append('receiver[phoneNumber1]', receiver.phoneNumber1);\n    form.append('receiver[phoneNumber2]', receiver.phoneNumber2);\n    form.append('sender[firstName]', sender.firstName);\n    form.append('sender[phoneNumber1]', sender.phoneNumber1);\n    form.append('sender[phoneNumber2]', sender.phoneNumber1);\n    input._id && form.append('status', status);\n    input._id && form.append('amount', amount);\n    setForm(form);\n\n    for (let pair of form.entries()) {\n      console.log([pair[0] + ',' + pair[1]]);\n    }\n\n    if (e) {\n      const {\n        sender\n      } = _objectSpread({}, input);\n\n      const {\n        name,\n        value,\n        id\n      } = e.target;\n\n      const {\n        formErrors\n      } = _objectSpread({}, input);\n\n      requestValidate(id, value, formErrors);\n      sender[name] = e.target.value;\n\n      const newInput = _objectSpread(_objectSpread({}, input), {}, {\n        sender,\n        [name]: value\n      });\n\n      return setInput(newInput);\n    }\n  };\n\n  const handleCheck = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n\n    const newInput = _objectSpread(_objectSpread({}, input), {}, {\n      [name]: checked\n    });\n\n    return setInput(newInput);\n  };\n\n  const photoChange = e => {\n    e.preventDefault();\n\n    if (e.target.files) {\n      setRequestImage(e.target.files);\n      let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\n      let filterUrl = Array.from(e.target.files).filter(x => (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]));\n      let sourceUrl = filterUrl && filterUrl.map(file => URL.createObjectURL(file));\n      let mapUrl = sourceUrl.map(url => {\n        // let generate = generatePublicUrl(url);\n        let img = url;\n        return {\n          img\n        };\n      });\n\n      if (mapUrl !== []) {\n        let updatedPermanentImage = [...permanentImages, ...mapUrl];\n        setPermanentImages(updatedPermanentImage);\n      } else {\n        setPermanentImages(sourceUrl);\n      }\n\n      URL.revokeObjectURL(e.target.files);\n    }\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage && localStorage.getItem('token');\n    setSessionToken(token);\n    const res = await axios.post('/request/create', form, {\n      headers: {\n        'authorization': token ? `Bearer ${token}` : ''\n      }\n    }).catch(function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n    console.log(res);\n  };\n\n  const handleReceiver = e => {\n    if (e) {\n      const {\n        receiver\n      } = _objectSpread({}, input);\n\n      const {\n        name,\n        id,\n        value\n      } = e.target;\n\n      const {\n        formErrors\n      } = _objectSpread({}, input);\n\n      requestValidate(id, value, formErrors);\n      receiver[name] = e.target.value;\n\n      const newInp = _objectSpread(_objectSpread({}, input), {}, {\n        receiver\n      });\n\n      return setInput(newInp);\n    }\n  };\n\n  const handleRequestUpdate = async (e, id) => {\n    e.preventDefault();\n    const res = await axios.put('/request/' + id, form);\n    console.log(res);\n  };\n\n  const selector = [{\n    content: \"contact\",\n    icon: contact(),\n    title: \"Contact\",\n    id: 1\n  }, {\n    content: \"gallery\",\n    icon: gallery(),\n    title: \"Gallery\",\n    id: 2\n  }, {\n    content: \"ShippingRequest\",\n    icon: offBack(),\n    title: \"Request\",\n    id: 3\n  }, {\n    content: \"\",\n    icon: message(),\n    title: \"Message\",\n    id: 4\n  }];\n  return /*#__PURE__*/_jsxDEV(RequestContext.Provider, {\n    value: {\n      input,\n      initialState,\n      setCount,\n      count,\n      setInput,\n      handleChange,\n      handleReceiver,\n      handleCheck,\n      permanentImages,\n      setPermanentImages,\n      handleFormSubmit,\n      photoChange,\n      selector,\n      setExtractedRequest,\n      extractedRequest,\n      contacts,\n      setContacts,\n      handleRequestUpdate,\n      sessionToken\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RequestContextProvider;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/RequestContext.js"],"names":["React","createContext","useEffect","useState","axios","generatePublicUrl","gallery","message","offBack","contact","requestValidate","RequestContext","RequestContextProvider","props","initialState","cartons","deliveryLocations","descriptions","itemsWorth","receiver","firstName","phoneNumber1","phoneNumber2","sender","tagName","otherItems","formErrors","createdAt","requestImages","status","amount","input","setInput","contacts","setContacts","extractedRequest","setExtractedRequest","sessionToken","setSessionToken","res","get","catch","error","response","console","log","data","headers","request","config","profile","permanentImages","setPermanentImages","setRequestImage","count","setCount","form","setForm","handleChange","e","FormData","undefined","img","append","_id","pair","entries","name","value","id","target","newInput","handleCheck","checked","photoChange","preventDefault","files","Format","filterUrl","Array","from","filter","x","type","size","sourceUrl","map","file","URL","createObjectURL","mapUrl","url","updatedPermanentImage","revokeObjectURL","handleFormSubmit","token","localStorage","getItem","post","handleReceiver","newInp","handleRequestUpdate","put","selector","content","icon","title","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from '../../helpers/axios';\r\nimport {generatePublicUrl} from '../../urlConfig';\r\nimport {gallery, message, offBack, contact} from \"../../svg\";\r\nimport { requestValidate } from '../validator/validate';\r\n\r\nexport const RequestContext = createContext();\r\n\r\nconst RequestContextProvider = (props) =>{\r\n    // const initialState =\r\n    //     {sender: {\r\n    //         firstName: '',\r\n    //         phoneNumber1: '',\r\n    //         phoneNumber2: '' },\r\n    //    receiver: {\r\n    //            firstName: '',\r\n    //            phoneNumber1: '',\r\n    //            phoneNumber2: '' },\r\n    //    cartons: '',\r\n    //    createdAt: '',\r\n    //    deliveryLocations: '',\r\n    //    descriptions: '',\r\n    //    itemsWorth: '',\r\n    //    otherItems: true,\r\n    //    requestImages: [{img: '',\r\n    //                     _id: ''}],\r\n    //     status: '',\r\n    //     tagName: '',\r\n    //     amount: '',\r\n    //     _id: ''\r\n           \r\n    //    };\r\n\r\n    const initialState =\r\n        {cartons: \"55\",\r\n        deliveryLocations: \"lagos\",\r\n        descriptions: \"thank you\",\r\n        itemsWorth: \"5000\",\r\n        receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\r\n        sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\r\n        tagName: \"chisom\",\r\n        otherItems: false,\r\n        formErrors: {\r\n            sender: {\r\n                    firstName: '',\r\n                    phoneNumber1: '',\r\n                    phoneNumber2: '' },\r\n            receiver: {\r\n                    firstName: '',\r\n                    phoneNumber1: '',\r\n                    phoneNumber2: '' },\r\n            cartons: '',\r\n            createdAt: '',\r\n            deliveryLocations: '',\r\n            descriptions: '',\r\n            itemsWorth: '',\r\n            otherItems: true,\r\n            requestImages: '',\r\n            status: '',\r\n            tagName: '',\r\n            amount: ''\r\n            }\r\n        };\r\n    const[input, setInput] = useState(initialState);\r\n    const [contacts, setContacts] = useState([]);\r\n    const [extractedRequest, setExtractedRequest] = useState();\r\n    const [sessionToken, setSessionToken] = useState();\r\n\r\n    useEffect (async () => {\r\n            let res = await axios.get('/profile/get').catch(function (error) {\r\n                if (error.response) {\r\n                  // The request was made and the server responded with a status code\r\n                  // that falls out of the range of 2xx\r\n                  console.log(error.response.data);\r\n                  console.log(error.response.status);\r\n                  console.log(error.response.headers);\r\n                } else if (error.request) {\r\n                  // The request was made but no response was received\r\n                  // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                  // http.ClientRequest in node.js\r\n                  console.log(error.request);\r\n                } else {\r\n                  // Something happened in setting up the request that triggered an Error\r\n                  console.log('Error', error.message);\r\n                }\r\n                console.log(error.config);\r\n              });\r\n            if(res.status == 201){\r\n                const {profile} = res.data;\r\n               return setContacts(profile);\r\n            }\r\n\r\n    }, []);\r\n\r\n   \r\n    const[permanentImages, setPermanentImages] = useState([]);\r\n    const [requestImages, setRequestImage] = useState();\r\n    const [count, setCount] = useState();\r\n    const [form, setForm] = useState();\r\n   \r\n    \r\n\r\n    const handleChange = (e) => {\r\n        let form = new FormData();\r\n        if(requestImages !== undefined){\r\n\r\n            for( let img of requestImages){\r\n                form.append('requestImages', img)\r\n            }                                                   \r\n       }\r\n\r\n            const {cartons, deliveryLocations, descriptions, itemsWorth, otherItems, tagName, receiver, sender, status, amount } = {...input}\r\n\r\n                form.append('cartons', cartons);\r\n                form.append('deliveryLocations', deliveryLocations);\r\n                form.append('descriptions', descriptions);\r\n                form.append('itemsWorth', itemsWorth);\r\n                form.append('otherItems',  otherItems); \r\n                form.append('tagName',  tagName); \r\n                form.append('receiver[firstName]',  receiver.firstName);\r\n                form.append('receiver[phoneNumber1]',  receiver.phoneNumber1);\r\n                form.append('receiver[phoneNumber2]',  receiver.phoneNumber2);\r\n                form.append('sender[firstName]',  sender.firstName);\r\n                form.append('sender[phoneNumber1]',  sender.phoneNumber1);\r\n                form.append('sender[phoneNumber2]',  sender.phoneNumber1); \r\n               \r\n                 input._id && form.append('status', status);\r\n                 input._id && form.append('amount', amount);\r\n\r\n\r\n                setForm(form);\r\n\r\n                for(let pair of form.entries()){\r\n                    console.log([pair[0]+ ',' + pair[1]])\r\n              }\r\n\r\n         \r\n        if(e){\r\n           const {sender} = {...input};\r\n           const {name, value, id} = e.target;\r\n           const {formErrors} = {...input};\r\n           requestValidate(id, value, formErrors);\r\n           sender[name] = e.target.value;\r\n           const newInput = { ...input, sender, [name]: value };\r\n           return setInput(newInput);\r\n        }\r\n    }; \r\n   const handleCheck = (e)=>{\r\n    const {name, checked} = e.target;\r\n    const newInput = {...input, [name]: checked};\r\n    return setInput(newInput);\r\n   } \r\n\r\n    const photoChange = (e) => {\r\n        e.preventDefault();\r\n          if(e.target.files){\r\n              setRequestImage(e.target.files);\r\n               let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\r\n              let filterUrl = Array.from(e.target.files).filter(x=> (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]) );\r\n              \r\n                let sourceUrl = filterUrl && filterUrl.map((file)=> URL.createObjectURL(file));\r\n                let mapUrl = sourceUrl.map(url => {\r\n                    // let generate = generatePublicUrl(url);\r\n                    let img = url\r\n                    return {img }}\r\n                    )\r\n            if(mapUrl !== []){\r\n                let updatedPermanentImage = [...permanentImages, ...mapUrl ]\r\n                setPermanentImages(updatedPermanentImage);\r\n            }else{\r\n                setPermanentImages(sourceUrl);\r\n            }\r\n            \r\n            URL.revokeObjectURL(e.target.files); \r\n      } \r\n    }\r\n    \r\n    const handleFormSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const token = localStorage && localStorage.getItem('token');\r\n        setSessionToken(token);\r\n        const res = await axios.post('/request/create', form, {\r\n            headers : {'authorization': token ? `Bearer ${token}` : ''}\r\n        }).catch(function (error) {\r\n            if (error.response) {\r\n              // The request was made and the server responded with a status code\r\n              // that falls out of the range of 2xx\r\n              console.log(error.response.data);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n            } else if (error.request) {\r\n              // The request was made but no response was received\r\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n              // http.ClientRequest in node.js\r\n              console.log(error.request);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              console.log('Error', error.message);\r\n            }\r\n            console.log(error.config);\r\n          });\r\n          console.log(res);\r\n    }\r\n\r\n    const handleReceiver = (e) => {\r\n            \r\n        if(e){\r\n            const {receiver} = {...input};\r\n            const {name, id, value} = e.target;\r\n            const {formErrors} = {...input};\r\n            requestValidate(id, value, formErrors)\r\n            receiver[name] = e.target.value;\r\n            const newInp = { ...input, receiver };\r\n            return setInput(newInp);\r\n        }\r\n    }; \r\n\r\n    const handleRequestUpdate = async(e, id) => {\r\n        e.preventDefault();\r\n        const res = await axios.put('/request/' + id, form);\r\n        console.log(res);\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    const selector = [\r\n        {content: \"contact\" , icon: contact(), title: \"Contact\", id: 1 },\r\n        {content: \"gallery\", icon: gallery(), title: \"Gallery\", id: 2},\r\n        {content: \"ShippingRequest\", icon: offBack(), title: \"Request\", id: 3},\r\n        {content: \"\", icon: message(), title: \"Message\", id: 4}\r\n    ]\r\n\r\n\r\n    return (\r\n        <RequestContext.Provider value={{input, initialState, setCount, count, setInput, handleChange, handleReceiver, handleCheck, permanentImages, setPermanentImages, handleFormSubmit, photoChange, selector, setExtractedRequest, extractedRequest, contacts, setContacts, handleRequestUpdate, sessionToken}}>\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RequestContextProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}