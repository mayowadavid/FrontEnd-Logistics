{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\fireBase\\\\ProgressBar.js\";\nimport React, { useState, useEffect } from 'react';\nimport useStorage from './storageHook';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({\n  image,\n  setImage\n}) => {\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    0: url,\n    1: setUrl\n  } = useState(null);\n\n  if (image.length) {\n    for (let img of image) {\n      const {\n        progress,\n        url\n      } = useStorage(img);\n      setProgress(progress), setUrl(url);\n    }\n  }\n\n  useEffect(() => {\n    if (url) {\n      setImage(null);\n    }\n  }, [url, setImage]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"progress-bar\",\n    initial: {\n      width: 0\n    },\n    animate: {\n      width: progress + '%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/ProgressBar.js"],"names":["React","useState","useEffect","useStorage","motion","ProgressBar","image","setImage","progress","setProgress","url","setUrl","length","img","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AACzC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACF,QAAM;AAAA,OAACS,GAAD;AAAA,OAAMC;AAAN,MAAgBV,QAAQ,CAAC,IAAD,CAA9B;;AAEE,MAAGK,KAAK,CAACM,MAAT,EAAgB;AAEZ,SAAK,IAAIC,GAAT,IAAgBP,KAAhB,EAAsB;AAClB,YAAM;AAAEE,QAAAA,QAAF;AAAYE,QAAAA;AAAZ,UAAoBP,UAAU,CAACU,GAAD,CAApC;AACAJ,MAAAA,WAAW,CAACD,QAAD,CAAX,EAAuBG,MAAM,CAACD,GAAD,CAA7B;AACH;AACL;;AAGFR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,GAAJ,EAAS;AACPH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACG,GAAD,EAAMH,QAAN,CAJM,CAAT;AAMA,sBACE,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,cAAtB;AACE,IAAA,OAAO,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,KAAK,EAAEN,QAAQ,GAAG;AAApB;AAFX;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzBD;;AA2BA,eAAeH,WAAf","sourcesContent":["import React, {  useState, useEffect } from 'react';\r\nimport useStorage from './storageHook';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({ image, setImage }) => {\r\n    const [progress, setProgress] = useState(0);\r\n  const [url, setUrl] = useState(null);\r\n\r\n    if(image.length){\r\n\r\n        for( let img of image){\r\n            const { progress, url } = useStorage(img);\r\n            setProgress(progress), setUrl(url)\r\n        }                                                   \r\n   }\r\n  \r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setImage(null);\r\n    }\r\n  }, [url, setImage]);\r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}