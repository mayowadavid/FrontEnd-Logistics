{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\fireBase\\\\ProgressBar.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { motion } from 'framer-motion';\nimport useStorage from './storageHook';\n\nconst ProgressBar = ({\n  image,\n  setImage\n}) => {\n  const {\n    0: check,\n    1: setCheck\n  } = useState([]);\n  const {\n    0: progressCheck,\n    1: setProgressCheck\n  } = useState();\n  let url = check;\n  useEffect(() => {\n    // references\n    image.map(img => {\n      const {\n        url,\n        progress\n      } = useStorage(img);\n      setCheck(url);\n      setProgressCheck(progress);\n    });\n  }, []);\n  let compile = [...check, check];\n  image.length !== check.length && console.log(compile);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"progress-bar\",\n    initial: {\n      width: 0\n    },\n    animate: {\n      width: progressCheck + '%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/ProgressBar.js"],"names":["React","useState","useEffect","useContext","motion","useStorage","ProgressBar","image","setImage","check","setCheck","progressCheck","setProgressCheck","url","map","img","progress","compile","length","console","log","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAEzC,QAAK;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM;AAAA,OAACU,aAAD;AAAA,OAAgBC;AAAhB,MAAoCX,QAAQ,EAAlD;AAED,MAAIY,GAAG,GAAEJ,KAAT;AAECP,EAAAA,SAAS,CAAC,MAAM;AACZ;AAEAK,IAAAA,KAAK,CAACO,GAAN,CAAUC,GAAG,IAAI;AACf,YAAM;AAACF,QAAAA,GAAD;AAAMG,QAAAA;AAAN,UAAkBX,UAAU,CAACU,GAAD,CAAlC;AACAL,MAAAA,QAAQ,CAACG,GAAD,CAAR;AACAD,MAAAA,gBAAgB,CAACI,QAAD,CAAhB;AACD,KAJD;AAMD,GATM,EASJ,EATI,CAAT;AAUE,MAAIC,OAAO,GAAG,CAAC,GAAGR,KAAJ,EAAWA,KAAX,CAAd;AAEAF,EAAAA,KAAK,CAACW,MAAN,KAAiBT,KAAK,CAACS,MAAvB,IAAkCC,OAAO,CAACC,GAAR,CAAYH,OAAZ,CAAlC;AAUJ,sBACE,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,cAAtB;AACE,IAAA,OAAO,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,KAAK,EAAEV,aAAa,GAAG;AAAzB;AAFX;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAnCD;;AAqCA,eAAeL,WAAf","sourcesContent":["import React, {  useState, useEffect, useContext } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport useStorage from './storageHook';\r\n\r\nconst ProgressBar = ({ image, setImage }) => {\r\n  \r\n    const[check, setCheck] = useState([]);\r\n    const [progressCheck, setProgressCheck] = useState();\r\n    \r\n   let url= check;\r\n\r\n    useEffect(() => {\r\n        // references\r\n        \r\n        image.map(img => {\r\n          const {url, progress} = useStorage(img);\r\n          setCheck(url);\r\n          setProgressCheck(progress);\r\n        } )\r\n        \r\n      }, []); \r\n      let compile = [...check, check];\r\n\r\n      image.length !== check.length && (console.log(compile));\r\n      \r\n    \r\n\r\n  \r\n   \r\n \r\n     \r\n \r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progressCheck + '%' }}\r\n    ></motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}