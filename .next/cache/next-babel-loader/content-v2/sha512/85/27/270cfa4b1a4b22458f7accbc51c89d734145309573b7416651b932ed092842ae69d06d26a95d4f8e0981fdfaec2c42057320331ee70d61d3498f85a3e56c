{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACIDeiqQIHextjTi28NVDmh5hWHahuiNE\",\n  authDomain: \"mayor-db13a.firebaseapp.com\",\n  databaseURL: \"https://mayor-db13a.firebaseio.com\",\n  projectId: \"mayor-db13a\",\n  storageBucket: \"mayor-db13a.appspot.com\",\n  messagingSenderId: \"22905502977\",\n  appId: \"1:22905502977:web:248fd426a1ce4497336f00\"\n};\nconst firebaseApp = !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\nconst database = firebase.firestore();\n\nif (false) {\n  database.enablePersistence().catch(function (err) {\n    if (err.code == 'failed-precondition') {\n      // Multiple tabs open, persistence can only be enabled\n      // in one tab at a a time.\n      // ...\n      console.log(err.code);\n    } else if (err.code == 'unimplemented') {\n      // The current browser does not support all of the\n      // features required to enable persistence\n      // ...\n      console.log(err.code);\n    }\n  });\n}\n\nconst store = firebaseApp.storage();\nconst auth = firebase.auth();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\nconst provider = new firebase.auth.GoogleAuthProvider();\nconsole.log(auth);\nexport { store, database, auth, timestamp, provider };","map":{"version":3,"sources":["F:/G4 Logistics/FrontEnd/components/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseApp","apps","length","initializeApp","app","database","firestore","enablePersistence","catch","err","code","console","log","store","storage","auth","timestamp","FieldValue","serverTimestamp","provider","GoogleAuthProvider"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,kBAAP;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,6BAFO;AAGnBC,EAAAA,WAAW,EAAE,oCAHM;AAInBC,EAAAA,SAAS,EAAE,aAJQ;AAKnBC,EAAAA,aAAa,EAAE,yBALI;AAMnBC,EAAAA,iBAAiB,EAAE,aANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAAvB;AAUE,MAAMC,WAAW,GAAG,CAACT,QAAQ,CAACU,IAAT,CAAcC,MAAf,GAAwBX,QAAQ,CAACY,aAAT,CAAuBX,cAAvB,CAAxB,GAAgED,QAAQ,CAACa,GAAT,EAApF;AACA,MAAMC,QAAQ,GAAGd,QAAQ,CAACe,SAAT,EAAjB;;AACA,WAAmB;AACjBD,EAAAA,QAAQ,CAACE,iBAAT,GACGC,KADH,CACS,UAASC,GAAT,EAAc;AACjB,QAAIA,GAAG,CAACC,IAAJ,IAAY,qBAAhB,EAAuC;AACnC;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACH,KALD,MAKO,IAAID,GAAG,CAACC,IAAJ,IAAY,eAAhB,EAAiC;AACpC;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACH;AACJ,GAbH;AAcC;;AACH,MAAMG,KAAK,GAAGb,WAAW,CAACc,OAAZ,EAAd;AACA,MAAMC,IAAI,GAAGxB,QAAQ,CAACwB,IAAT,EAAb;AACA,MAAMC,SAAS,GAAGzB,QAAQ,CAACe,SAAT,CAAmBW,UAAnB,CAA8BC,eAAhD;AACA,MAAMC,QAAQ,GAAG,IAAI5B,QAAQ,CAACwB,IAAT,CAAcK,kBAAlB,EAAjB;AACAT,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAGA,SAAQF,KAAR,EAAeR,QAAf,EAAyBU,IAAzB,EAA+BC,SAA/B,EAA0CG,QAA1C","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyACIDeiqQIHextjTi28NVDmh5hWHahuiNE\",\r\n    authDomain: \"mayor-db13a.firebaseapp.com\",\r\n    databaseURL: \"https://mayor-db13a.firebaseio.com\",\r\n    projectId: \"mayor-db13a\",\r\n    storageBucket: \"mayor-db13a.appspot.com\",\r\n    messagingSenderId: \"22905502977\",\r\n    appId: \"1:22905502977:web:248fd426a1ce4497336f00\"\r\n  };\r\n\r\n  const firebaseApp = !firebase.apps.length ? firebase.initializeApp(firebaseConfig) :firebase.app();\r\n  const database = firebase.firestore();\r\n  if(process.browser){\r\n    database.enablePersistence()\r\n      .catch(function(err) {\r\n          if (err.code == 'failed-precondition') {\r\n              // Multiple tabs open, persistence can only be enabled\r\n              // in one tab at a a time.\r\n              // ...\r\n              console.log(err.code);\r\n          } else if (err.code == 'unimplemented') {\r\n              // The current browser does not support all of the\r\n              // features required to enable persistence\r\n              // ...\r\n              console.log(err.code);\r\n          }\r\n      });\r\n    }\r\n  const store = firebaseApp.storage();\r\n  const auth = firebase.auth();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  console.log(auth);\r\n\r\n \r\n  export {store, database, auth, timestamp, provider};  \r\n "]},"metadata":{},"sourceType":"module"}