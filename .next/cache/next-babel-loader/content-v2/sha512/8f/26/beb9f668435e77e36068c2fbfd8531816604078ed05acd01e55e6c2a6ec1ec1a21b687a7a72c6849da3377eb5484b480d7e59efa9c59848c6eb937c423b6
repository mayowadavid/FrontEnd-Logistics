{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\fireBase\\\\ProgressBar.js\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport useStorage from './storageHook';\nimport { motion } from 'framer-motion';\nimport { ClientContext } from '../context/ClientContext';\n\nvar ProgressBar = function ProgressBar(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var image = _ref.image,\n      setImage = _ref.setImage;\n\n  var _useContext = useContext(ClientContext),\n      url = _useContext.url,\n      progress = _useContext.progress;\n\n  var _useState = useState([]),\n      check = _useState[0],\n      setCheck = _useState[1];\n\n  useEffect(_s(function () {\n    _s();\n\n    // references\n    if (image.length) {\n      var _iterator = _createForOfIteratorHelper(image),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var img = _step.value;\n          useStorage(img);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, \"S0m34To1Ci5mukmSAeTwXfhfNsE=\", false, function () {\n    return [useStorage];\n  }), [image]);\n  url !== undefined ? setCheck([].concat(_toConsumableArray(check), [{\n    url: url\n  }])) : '';\n  console.log(check);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"progress-bar\",\n    initial: {\n      width: 0\n    },\n    animate: {\n      width: progress + '%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(ProgressBar, \"VICPTGWB55xFG8lrv5ule173h0w=\");\n\n_c = ProgressBar;\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/ProgressBar.js"],"names":["React","useState","useEffect","useContext","useStorage","motion","ClientContext","ProgressBar","image","setImage","url","progress","check","setCheck","length","img","undefined","console","log","width"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAyB;AAAA;;AAAA;;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACjBN,UAAU,CAACG,aAAD,CADO;AAAA,MAClCI,GADkC,eAClCA,GADkC;AAAA,MAC7BC,QAD6B,eAC7BA,QAD6B;;AAAA,kBAEhBV,QAAQ,CAAC,EAAD,CAFQ;AAAA,MAEnCW,KAFmC;AAAA,MAE5BC,QAF4B;;AAMzCX,EAAAA,SAAS,IAAC,YAAM;AAAA;;AACZ;AACA,QAAGM,KAAK,CAACM,MAAT,EAAgB;AAAA,iDAEIN,KAFJ;AAAA;;AAAA;AAEZ,4DAAsB;AAAA,cAAbO,GAAa;AACpBX,UAAAA,UAAU,CAACW,GAAD,CAAV;AACA;AAJU;AAAA;AAAA;AAAA;AAAA;AAKf;AACF,GARM;AAAA,YAKCX,UALD;AAAA,MAQJ,CAACI,KAAD,CARI,CAAT;AAWFE,EAAAA,GAAG,KAAKM,SAAR,GAECH,QAAQ,8BAAKD,KAAL,IAAY;AAACF,IAAAA,GAAG,EAAHA;AAAD,GAAZ,GAFT,GAEgC,EAFhC;AAGGO,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAGH,sBACE,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,cAAtB;AACE,IAAA,OAAO,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,KAAK,EAAER,QAAQ,GAAG;AAApB;AAFX;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CA7BD;;IAAMJ,W;;KAAAA,W;AA+BN,eAAeA,WAAf","sourcesContent":["import React, {  useState, useEffect, useContext } from 'react';\r\nimport useStorage from './storageHook';\r\nimport { motion } from 'framer-motion';\r\nimport { ClientContext } from '../context/ClientContext';\r\n\r\nconst ProgressBar = ({ image, setImage }) => {\r\n    const {url, progress} = useContext(ClientContext);\r\n    const[check, setCheck] = useState([]);\r\n    \r\n   \r\n\r\n    useEffect(() => {\r\n        // references\r\n        if(image.length){\r\n\r\n            for( let img of image){\r\n              useStorage(img);\r\n             }                                                   \r\n        }\r\n      }, [image]); \r\n\r\n    \r\n  url !== undefined ?(\r\n\r\n   setCheck([...check, {url}]) ): ''\r\n     console.log(check);\r\n \r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}