{"ast":null,"code":"import _regeneratorRuntime from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\pages\\\\SingleRequest.js\",\n    _this = this;\n\nimport axios from '../helpers/axios';\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport SideButton from '../components/AdminRequest/sideButton';\nimport RequestHandler from '../components/usersRequest/requestHandler';\nvar SingleRequest = withRouter(_c = function _c(_ref) {\n  var data = _ref.data;\n  var singleRequest = data.singleRequest;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SideButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-request\",\n      children: /*#__PURE__*/_jsxDEV(RequestHandler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, _this);\n});\n_c2 = SingleRequest;\n\nSingleRequest.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var id, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = ctx.query.id;\n            _context.next = 3;\n            return axios.get('/request/' + id);\n\n          case 3:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default SingleRequest;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleRequest$withRouter\");\n$RefreshReg$(_c2, \"SingleRequest\");","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/pages/SingleRequest.js"],"names":["axios","React","useEffect","withRouter","SideButton","RequestHandler","SingleRequest","data","singleRequest","getInitialProps","ctx","id","query","get","res"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAUC,UAAV,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AAGA,IAAMC,aAAa,GAAGH,UAAU,MAAC,kBAAY;AAAA,MAAVI,IAAU,QAAVA,IAAU;AAAA,MAElCC,aAFkC,GAEjBD,IAFiB,CAElCC,aAFkC;AAGzC,sBAAQ;AAAA,4BACJ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aADI,eAEJ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,aAFI;AAAA;AAAA;AAAA;AAAA;AAAA,WAAR;AAOH,CAV+B,CAAhC;MAAMF,a;;AAaNA,aAAa,CAACG,eAAd;AAAA,uEAAgC,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,EADa,GACJD,GADI,CACtBE,KADsB,CACbD,EADa;AAAA;AAAA,mBAEZX,KAAK,CAACa,GAAN,CAAU,cAAcF,EAAxB,CAFY;;AAAA;AAExBG,YAAAA,GAFwB;AAAA,6CAGrBA,GAHqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeR,aAAf","sourcesContent":["import axios from '../helpers/axios';\r\nimport React, { useEffect} from 'react';\r\nimport {  withRouter } from 'next/router';\r\nimport SideButton from '../components/AdminRequest/sideButton';\r\nimport RequestHandler from '../components/usersRequest/requestHandler';\r\n\r\n\r\nconst SingleRequest = withRouter(({data}) => {\r\n    \r\n    const {singleRequest} = data\r\n    return (<div>\r\n        <SideButton />\r\n        <div className=\"single-request\">\r\n        <RequestHandler />\r\n        </div>\r\n    </div>\r\n    )\r\n});\r\n\r\n\r\nSingleRequest.getInitialProps = async (ctx) => {\r\n    let { query: { id } } = ctx; \r\n    let res = await axios.get('/request/' + id);\r\n    return res\r\n}\r\n\r\nexport default SingleRequest;"]},"metadata":{},"sourceType":"module"}