{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\RequestContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useEffect, useState } from 'react';\nexport const RequestContext = /*#__PURE__*/createContext();\nimport axios from '../../helpers/axios';\nimport { generatePublicUrl } from '../../urlConfig';\nimport { gallery, message, offBack, contact } from \"../../svg\";\n\nconst RequestContextProvider = props => {\n  const initialState = {\n    sender: {\n      firstName: '',\n      phoneNumber1: '',\n      phoneNumber2: ''\n    },\n    receiver: {\n      firstName: '',\n      phoneNumber1: '',\n      phoneNumber2: ''\n    },\n    cartons: '',\n    createdAt: '',\n    deliveryLocations: '',\n    descriptions: '',\n    itemsWorth: '',\n    otherItems: true,\n    requestImages: [{\n      img: '',\n      _id: ''\n    }],\n    slug: '',\n    status: '',\n    tagName: ''\n  };\n  const {\n    0: input,\n    1: setInput\n  } = useState(initialState);\n  const {\n    0: contacts,\n    1: setContacts\n  } = useState([]);\n  const {\n    0: extractedRequest,\n    1: setExtractedRequest\n  } = useState();\n  useEffect(async () => {\n    if (input.tagName !== undefined) {\n      const {\n        requestImages\n      } = input;\n      setPermanentImages(requestImages);\n    }\n\n    let res = await axios.get('/profile/get');\n\n    if (res.status == 201) {\n      const {\n        profile\n      } = res.data;\n      return setContacts(profile);\n    }\n  }, []); // const initialState =\n  //     {cartons: \"55\",\n  //     deliveryLocations: \"lagos\",\n  //     descriptions: \"thank you\",\n  //     itemsWorth: \"5000\",\n  //     otherItems: \"true\",\n  //     receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\n  //     sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\n  //     tagName: \"chisom\", cartons: \"55\"\n  //     };\n\n  const {\n    0: permanentImages,\n    1: setPermanentImages\n  } = useState();\n  const {\n    0: requestImages,\n    1: setRequestImage\n  } = useState();\n  const {\n    0: count,\n    1: setCount\n  } = useState();\n  const {\n    0: form,\n    1: setForm\n  } = useState();\n\n  const handleChange = e => {\n    let form = new FormData();\n\n    if (requestImages !== undefined) {\n      for (let img of requestImages) {\n        form.append('requestImages', img);\n      }\n    }\n\n    const {\n      cartons,\n      deliveryLocations,\n      descriptions,\n      itemsWorth,\n      otherItems,\n      tagName,\n      receiver,\n      sender\n    } = _objectSpread({}, input);\n\n    form.append('cartons', cartons);\n    form.append('deliveryLocations', deliveryLocations);\n    form.append('descriptions', descriptions);\n    form.append('itemsWorth', itemsWorth);\n    form.append('otherItems', otherItems);\n    form.append('tagName', tagName);\n    form.append('receiver[firstName]', receiver.firstName);\n    form.append('receiver[phoneNumber1]', receiver.phoneNumber1);\n    form.append('receiver[phoneNumber2]', receiver.phoneNumber2);\n    form.append('sender[firstName]', sender.firstName);\n    form.append('sender[phoneNumber1]', sender.phoneNumber1);\n    form.append('sender[phoneNumber2]', sender.phoneNumber1);\n    setForm(form);\n\n    if (e) {\n      const {\n        sender\n      } = _objectSpread({}, input);\n\n      const {\n        name,\n        value\n      } = e.target;\n      sender[name] = e.target.value;\n\n      const newInput = _objectSpread(_objectSpread({}, input), {}, {\n        sender,\n        [name]: value\n      });\n\n      return setInput(newInput);\n    }\n  };\n\n  const photoChange = e => {\n    e.preventDefault();\n\n    if (e.target.files) {\n      setRequestImage(e.target.files);\n      let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\n      let filterUrl = Array.from(e.target.files).filter(x => (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]));\n      let sourceUrl = filterUrl && filterUrl.map(file => URL.createObjectURL(file));\n\n      if (permanentImages !== undefined) {\n        let updatedPermanentImage = [...permanentImages, ...sourceUrl];\n        setPermanentImages(updatedPermanentImage);\n      } else {\n        setPermanentImages(sourceUrl);\n      }\n\n      URL.revokeObjectURL(e.target.files);\n    }\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const res = await axios.post('/request/create', form);\n\n    if (res.status == 201) {\n      const {\n        request\n      } = res.data;\n      const {\n        requestImages\n      } = request;\n      let requestFile = requestImages.length > 0 && requestImages.map(file => generatePublicUrl(file.img));\n      setPermanentImages(requestFile);\n    }\n\n    return setCount('action');\n  };\n\n  const handleReceiver = e => {\n    if (e) {\n      const {\n        receiver\n      } = _objectSpread({}, input);\n\n      const {\n        name\n      } = e.target;\n      receiver[name] = e.target.value;\n\n      const newInp = _objectSpread(_objectSpread({}, input), {}, {\n        receiver\n      });\n\n      return setInput(newInp);\n    }\n  };\n\n  const selector = [{\n    content: \"contact\",\n    icon: contact(),\n    title: \"Contact\",\n    id: 1\n  }, {\n    content: \"gallery\",\n    icon: gallery(),\n    title: \"Gallery\",\n    id: 2\n  }, {\n    content: \"ShippingRequest\",\n    icon: offBack(),\n    title: \"Request\",\n    id: 3\n  }, {\n    content: \"\",\n    icon: message(),\n    title: \"Message\",\n    id: 4\n  }];\n  return /*#__PURE__*/_jsxDEV(RequestContext.Provider, {\n    value: {\n      input,\n      setCount,\n      count,\n      setInput,\n      handleChange,\n      handleReceiver,\n      permanentImages,\n      setPermanentImages,\n      handleFormSubmit,\n      photoChange,\n      selector,\n      setExtractedRequest,\n      extractedRequest,\n      contacts,\n      setContacts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RequestContextProvider;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/RequestContext.js"],"names":["React","createContext","useEffect","useState","RequestContext","axios","generatePublicUrl","gallery","message","offBack","contact","RequestContextProvider","props","initialState","sender","firstName","phoneNumber1","phoneNumber2","receiver","cartons","createdAt","deliveryLocations","descriptions","itemsWorth","otherItems","requestImages","img","_id","slug","status","tagName","input","setInput","contacts","setContacts","extractedRequest","setExtractedRequest","undefined","setPermanentImages","res","get","profile","data","permanentImages","setRequestImage","count","setCount","form","setForm","handleChange","e","FormData","append","name","value","target","newInput","photoChange","preventDefault","files","Format","filterUrl","Array","from","filter","x","type","size","sourceUrl","map","file","URL","createObjectURL","updatedPermanentImage","revokeObjectURL","handleFormSubmit","post","request","requestFile","length","handleReceiver","newInp","selector","content","icon","title","id","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nexport const RequestContext = createContext();\r\nimport axios from '../../helpers/axios';\r\nimport {generatePublicUrl} from '../../urlConfig';\r\nimport {gallery, message, offBack, contact} from \"../../svg\";\r\n\r\nconst RequestContextProvider = (props) =>{\r\n    const initialState =\r\n        {sender: {\r\n            firstName: '',\r\n            phoneNumber1: '',\r\n            phoneNumber2: '' },\r\n       receiver: {\r\n               firstName: '',\r\n               phoneNumber1: '',\r\n               phoneNumber2: '' },\r\n       cartons: '',\r\n       createdAt: '',\r\n       deliveryLocations: '',\r\n       descriptions: '',\r\n       itemsWorth: '',\r\n       otherItems: true,\r\n       requestImages: [{img: '',\r\n                        _id: ''}],\r\n        slug: '',\r\n        status: '',\r\n        tagName: ''\r\n           \r\n       };\r\n    const[input, setInput] = useState(initialState);\r\n    const [contacts, setContacts] = useState([]);\r\n    const [extractedRequest, setExtractedRequest] = useState();\r\n    useEffect (async () => {\r\n            if(input.tagName !== undefined){\r\n                const{requestImages} = input;\r\n                setPermanentImages(requestImages);\r\n                    }\r\n        \r\n            let res = await axios.get('/profile/get');\r\n            if(res.status == 201){\r\n                const {profile} = res.data;\r\n               return setContacts(profile);\r\n            }\r\n\r\n    }, []);\r\n\r\n    // const initialState =\r\n    //     {cartons: \"55\",\r\n    //     deliveryLocations: \"lagos\",\r\n    //     descriptions: \"thank you\",\r\n    //     itemsWorth: \"5000\",\r\n    //     otherItems: \"true\",\r\n    //     receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\r\n    //     sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\r\n    //     tagName: \"chisom\", cartons: \"55\"\r\n    //     };\r\n\r\n    \r\n    const[permanentImages, setPermanentImages] = useState();\r\n    const [requestImages, setRequestImage] = useState();\r\n    const [count, setCount] = useState();\r\n    const [form, setForm] = useState();\r\n   \r\n    \r\n\r\n    const handleChange = (e) => {\r\n        let form = new FormData();\r\n\r\n        if(requestImages !== undefined){\r\n\r\n            for( let img of requestImages){\r\n                form.append('requestImages', img)\r\n            }                                                   \r\n       }\r\n            const {cartons, deliveryLocations, descriptions, itemsWorth, otherItems, tagName, receiver, sender } = {...input}\r\n\r\n                form.append('cartons', cartons);\r\n                form.append('deliveryLocations', deliveryLocations);\r\n                form.append('descriptions', descriptions);\r\n                form.append('itemsWorth', itemsWorth);\r\n                form.append('otherItems',  otherItems);\r\n                form.append('tagName',  tagName); \r\n                form.append('receiver[firstName]',  receiver.firstName);\r\n                form.append('receiver[phoneNumber1]',  receiver.phoneNumber1);\r\n                form.append('receiver[phoneNumber2]',  receiver.phoneNumber2);\r\n                form.append('sender[firstName]',  sender.firstName);\r\n                form.append('sender[phoneNumber1]',  sender.phoneNumber1);\r\n                form.append('sender[phoneNumber2]',  sender.phoneNumber1);\r\n\r\n                setForm(form);\r\n\r\n                \r\n         \r\n        if(e){\r\n           const {sender} = {...input};\r\n           const {name, value} = e.target;\r\n           sender[name] = e.target.value;\r\n           const newInput = { ...input, sender, [name]: value };\r\n           return setInput(newInput);\r\n        }\r\n    }; \r\n\r\n    const photoChange = (e) => {\r\n        e.preventDefault();\r\n          if(e.target.files){\r\n              setRequestImage(e.target.files);\r\n               let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\r\n              let filterUrl = Array.from(e.target.files).filter(x=> (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]) );\r\n              \r\n                 let sourceUrl = filterUrl && filterUrl.map((file)=>URL.createObjectURL(file));\r\n                 \r\n                 if(permanentImages !== undefined){\r\n                    let updatedPermanentImage = [...permanentImages, ...sourceUrl ]\r\n                    setPermanentImages(updatedPermanentImage);\r\n                }else{\r\n                    setPermanentImages(sourceUrl);\r\n                }\r\n            \r\n              \r\n              URL.revokeObjectURL(e.target.files); \r\n      } \r\n    }\r\n\r\n    const handleFormSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const res = await axios.post('/request/create', form);\r\n        if(res.status == 201){\r\n            const {request} = res.data;\r\n            const {requestImages} = request;\r\n            let requestFile =  requestImages.length > 0 && requestImages.map((file) => \r\n            generatePublicUrl(file.img)\r\n            );\r\n           setPermanentImages(requestFile);\r\n          }\r\n      return  setCount('action');\r\n    }\r\n\r\n    const handleReceiver = (e) => {\r\n            \r\n        if(e){\r\n            const {receiver} = {...input};\r\n            const {name} = e.target;\r\n            receiver[name] = e.target.value;\r\n            const newInp = { ...input, receiver };\r\n            return setInput(newInp);\r\n        }\r\n    }; \r\n\r\n    \r\n\r\n\r\n\r\n    const selector = [\r\n        {content: \"contact\" , icon: contact(), title: \"Contact\", id: 1 },\r\n        {content: \"gallery\", icon: gallery(), title: \"Gallery\", id: 2},\r\n        {content: \"ShippingRequest\", icon: offBack(), title: \"Request\", id: 3},\r\n        {content: \"\", icon: message(), title: \"Message\", id: 4}\r\n    ]\r\n\r\n\r\n    return (\r\n        <RequestContext.Provider value={{input, setCount, count, setInput, handleChange, handleReceiver, permanentImages, setPermanentImages, handleFormSubmit, photoChange, selector, setExtractedRequest, extractedRequest, contacts, setContacts}}>\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RequestContextProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}