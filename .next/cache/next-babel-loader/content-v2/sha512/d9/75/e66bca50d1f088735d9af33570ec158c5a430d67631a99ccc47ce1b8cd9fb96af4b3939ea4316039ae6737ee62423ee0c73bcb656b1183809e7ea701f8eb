{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\RequestContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from '../../helpers/axios';\nimport { gallery, message, offBack, contact } from \"../../svg\";\nimport { requestValidate } from '../validator/validate';\nimport { useRouter } from 'next/router';\nimport { store, database } from '../firebase';\nexport const RequestContext = /*#__PURE__*/createContext();\n\nconst RequestContextProvider = props => {\n  // const initialState =\n  //     {sender: {\n  //         firstName: '',\n  //         phoneNumber1: '',\n  //         phoneNumber2: '' },\n  //    receiver: {\n  //            firstName: '',\n  //            phoneNumber1: '',\n  //            phoneNumber2: '' },\n  //    cartons: '',\n  //    createdAt: '',\n  //    deliveryLocations: '',\n  //    descriptions: '',\n  //    itemsWorth: '',\n  //    otherItems: true,\n  //    requestImages: [{img: '',\n  //                     _id: ''}],\n  //     status: '',\n  //     tagName: '',\n  //     amount: '',\n  //     _id: '',\n  //     formErrors: {\n  //                 sender: {\n  //                         firstName: '',\n  //                         phoneNumber1: '',\n  //                         phoneNumber2: '' },\n  //                 receiver: {\n  //                         firstName: '',\n  //                         phoneNumber1: '',\n  //                         phoneNumber2: '' },\n  //                 cartons: '',\n  //                 createdAt: '',\n  //                 deliveryLocations: '',\n  //                 descriptions: '',\n  //                 itemsWorth: '',\n  //                 otherItems: true,\n  //                 requestImages: '',\n  //                 status: '',\n  //                 tagName: '',\n  //                 amount: ''\n  //                 }\n  //    };\n  const initialState = {\n    cartons: \"55\",\n    deliveryLocations: \"lagos\",\n    descriptions: \"thank you\",\n    itemsWorth: \"5000\",\n    receiverFirstName: 'mayowa',\n    receiverPhoneNumber1: '08087536643',\n    receiverPhoneNumber2: '08130614615',\n    requestImages: [],\n    senderFirstName: 'jony',\n    senderPhoneNumber1: '08130614615',\n    senderPhoneNumber2: '08130614615',\n    tagName: \"chisom\",\n    otherItems: false,\n    formErrors: {\n      senderFirstName: '',\n      senderPhoneNumber1: '',\n      senderPhoneNumber2: '',\n      receiverFirstName: '',\n      receiverPhoneNumber1: '',\n      receiverPhoneNumber2: '',\n      cartons: '',\n      createdAt: '',\n      deliveryLocations: '',\n      descriptions: '',\n      itemsWorth: '',\n      otherItems: true,\n      status: '',\n      tagName: '',\n      amount: ''\n    }\n  }; // const initialState =\n  // {cartons: \"55\",\n  // deliveryLocations: \"lagos\",\n  // descriptions: \"thank you\",\n  // itemsWorth: \"5000\",\n  // receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\n  // sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\n  // tagName: \"chisom\",\n  // otherItems: false,\n  // _id: undefined,\n  // formErrors: {\n  //     sender: {\n  //             firstName: '',\n  //             phoneNumber1: '',\n  //             phoneNumber2: '' },\n  //     receiver: {\n  //             firstName: '',\n  //             phoneNumber1: '',\n  //             phoneNumber2: '' },\n  //     cartons: '',\n  //     createdAt: '',\n  //     deliveryLocations: '',\n  //     descriptions: '',\n  //     itemsWorth: '',\n  //     otherItems: true,\n  //     requestImages: '',\n  //     status: '',\n  //     tagName: '',\n  //     amount: '',\n  //     requestImages: [{img: ''}],\n  //     }\n  // };\n\n  const {\n    0: input,\n    1: setInput\n  } = useState(initialState);\n  const {\n    0: contacts,\n    1: setContacts\n  } = useState([]);\n  const {\n    0: extractedRequest,\n    1: setExtractedRequest\n  } = useState();\n  const {\n    0: sessionToken,\n    1: setSessionToken\n  } = useState();\n  const {\n    0: isLogin,\n    1: setisLogin\n  } = useState(false);\n  const {\n    0: temporaryImage,\n    1: setTemporaryImage\n  } = useState([]);\n  const {\n    0: requestImages,\n    1: setRequestImages\n  } = useState([]);\n  const {\n    0: count,\n    1: setCount\n  } = useState();\n  const {\n    0: form,\n    1: setForm\n  } = useState();\n  const {\n    0: requestSuccess,\n    1: setRequestSuccess\n  } = useState(false);\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const handleChange = e => {\n    if (e) {\n      e.preventDefault();\n      const {\n        name,\n        value,\n        id\n      } = e.target;\n\n      const {\n        formErrors\n      } = _objectSpread({}, input);\n\n      requestValidate(id, value, formErrors);\n\n      const newInput = _objectSpread(_objectSpread({}, input), {}, {\n        [name]: value\n      });\n\n      return setInput(newInput);\n    }\n  };\n\n  const handleCheck = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n\n    const newInput = _objectSpread(_objectSpread({}, input), {}, {\n      [name]: checked\n    });\n\n    return setInput(newInput);\n  };\n\n  const photoChange = e => {\n    e.preventDefault();\n    progress !== 100 ? setLoading(true) : setLoading(false);\n\n    if (e.target.files) {\n      let selected = e.target.files[0];\n      let types = ['image/jpeg', 'image/png'];\n      let fileType = selected !== undefined ? types.includes(selected.type) : setError(\"unsupported image type* accepted image jpg/png\");\n      let FileSize = \"5000000\";\n      let filteredImageSize = fileType == true ? selected.size < FileSize : setError(\"file too large *5mb minimum\");\n      let perfectSize = filteredImageSize == true && URL.createObjectURL(selected);\n      let restructureUrl = {\n        imageSource: perfectSize\n      };\n      perfectSize !== undefined && setTemporaryImage([...temporaryImage, restructureUrl]);\n\n      if (filteredImageSize == true) {\n        const storageRef = store.ref(`requestImages/${selected.name}`);\n        storageRef.put(selected).on('state_changed', async snap => {\n          const newPercentage = (await (snap.bytesTransferred / snap.totalBytes)) * 100;\n          await setProgress(newPercentage);\n        }, async err => {\n          await setError(err);\n        }, async () => {\n          const cloudUrl = await storageRef.getDownloadURL();\n          setRequestImages([...requestImages, {\n            cloudUrl\n          }]);\n        });\n      }\n\n      URL.revokeObjectURL(selected);\n    }\n  };\n\n  console.log(requestImages);\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const {\n      cartons,\n      deliveryLocations,\n      descriptions,\n      itemsWorth,\n      receiverFirstName,\n      receiverPhoneNumber1,\n      receiverPhoneNumber2,\n      requestImages,\n      senderFirstName,\n      senderPhoneNumber1,\n      senderPhoneNumber2,\n      tagName,\n      otherItems\n    } = input;\n    database.collection('Requests').add({\n      cartons,\n      deliveryLocations,\n      descriptions,\n      itemsWorth,\n      receiverFirstName,\n      receiverPhoneNumber1,\n      receiverPhoneNumber2,\n      requestImages,\n      senderFirstName,\n      senderPhoneNumber1,\n      senderPhoneNumber2,\n      tagName,\n      otherItems,\n      date: new Date()\n    }).then(data => {\n      data && setRequestSuccess(true);\n    }).catch(error => {\n      setError(error);\n    }); // const token = localStorage && localStorage.getItem('token');\n    // const res = await axios.post('/request/create', input, {\n    //     headers : {'authorization': token ? `Bearer ${token}` : ''}\n    // }).catch(function (error) {\n    //     if (error.response) {\n    //       // The request was made and the server responded with a status code\n    //       // that falls out of the range of 2xx\n    //       console.log(error.response.data);\n    //       console.log(error.response.status);\n    //       console.log(error.response.headers);\n    //       error.response.status && (\n    //         error.response.status == '500' || '400' && (\n    //           axios.post('/signout'),\n    //           localStorage.clear(),\n    //           router.replace('/login')\n    //         )\n    //       )\n    //     } else if (error.request) {\n    //       // The request was made but no response was received\n    //       // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n    //       // http.ClientRequest in node.js\n    //       console.log(error.request);\n    //     } else {\n    //       // Something happened in setting up the request that triggered an Error\n    //       console.log('Error', error.message);\n    //     }\n    //     console.log(error.config);\n    //   });\n    //   console.log(res)\n    //   res && (\n    //       res.status == 201 && (\n    //           console.log(res),\n    //           setRequestSuccess(true)\n    //       )\n    //   )\n  };\n\n  const handleRequestUpdate = async (e, id) => {\n    e.preventDefault();\n    setInput(...input, requestImages);\n    const res = await axios.put('/request/' + id, input);\n  };\n\n  const handleFormPreview = e => {\n    e.preventDefault();\n    setInput(_objectSpread(_objectSpread({}, input), {}, {\n      requestImages\n    }));\n    setCount(\"active\");\n  };\n\n  const selector = [{\n    content: \"contact\",\n    icon: contact(),\n    title: \"Contact\",\n    id: 1\n  }, {\n    content: \"gallery\",\n    icon: gallery(),\n    title: \"Gallery\",\n    id: 2\n  }, {\n    content: \"ShippingRequest\",\n    icon: offBack(),\n    title: \"Request\",\n    id: 3\n  }, {\n    content: \"\",\n    icon: message(),\n    title: \"Message\",\n    id: 4\n  }];\n  return /*#__PURE__*/_jsxDEV(RequestContext.Provider, {\n    value: {\n      input,\n      error,\n      loading,\n      setRequestImages,\n      requestImages,\n      requestSuccess,\n      setRequestSuccess,\n      initialState,\n      setCount,\n      count,\n      setInput,\n      handleChange,\n      handleCheck,\n      temporaryImage,\n      handleFormSubmit,\n      handleFormPreview,\n      photoChange,\n      selector,\n      setExtractedRequest,\n      extractedRequest,\n      contacts,\n      setContacts,\n      handleRequestUpdate,\n      sessionToken,\n      isLogin,\n      setisLogin\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RequestContextProvider;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/RequestContext.js"],"names":["React","createContext","useEffect","useState","axios","gallery","message","offBack","contact","requestValidate","useRouter","store","database","RequestContext","RequestContextProvider","props","initialState","cartons","deliveryLocations","descriptions","itemsWorth","receiverFirstName","receiverPhoneNumber1","receiverPhoneNumber2","requestImages","senderFirstName","senderPhoneNumber1","senderPhoneNumber2","tagName","otherItems","formErrors","createdAt","status","amount","input","setInput","contacts","setContacts","extractedRequest","setExtractedRequest","sessionToken","setSessionToken","isLogin","setisLogin","temporaryImage","setTemporaryImage","setRequestImages","count","setCount","form","setForm","requestSuccess","setRequestSuccess","progress","setProgress","error","setError","router","loading","setLoading","handleChange","e","preventDefault","name","value","id","target","newInput","handleCheck","checked","photoChange","files","selected","types","fileType","undefined","includes","type","FileSize","filteredImageSize","size","perfectSize","URL","createObjectURL","restructureUrl","imageSource","storageRef","ref","put","on","snap","newPercentage","bytesTransferred","totalBytes","err","cloudUrl","getDownloadURL","revokeObjectURL","console","log","handleFormSubmit","collection","add","date","Date","then","data","catch","handleRequestUpdate","res","handleFormPreview","selector","content","icon","title","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from '../../helpers/axios';\r\nimport {gallery, message, offBack, contact} from \"../../svg\";\r\nimport { requestValidate } from '../validator/validate';\r\nimport {useRouter} from 'next/router';\r\nimport {store, database} from '../firebase';\r\n\r\nexport const RequestContext = createContext();\r\n\r\nconst RequestContextProvider = (props) =>{\r\n    // const initialState =\r\n    //     {sender: {\r\n    //         firstName: '',\r\n    //         phoneNumber1: '',\r\n    //         phoneNumber2: '' },\r\n    //    receiver: {\r\n    //            firstName: '',\r\n    //            phoneNumber1: '',\r\n    //            phoneNumber2: '' },\r\n    //    cartons: '',\r\n    //    createdAt: '',\r\n    //    deliveryLocations: '',\r\n    //    descriptions: '',\r\n    //    itemsWorth: '',\r\n    //    otherItems: true,\r\n    //    requestImages: [{img: '',\r\n    //                     _id: ''}],\r\n    //     status: '',\r\n    //     tagName: '',\r\n    //     amount: '',\r\n    //     _id: '',\r\n    //     formErrors: {\r\n    //                 sender: {\r\n    //                         firstName: '',\r\n    //                         phoneNumber1: '',\r\n    //                         phoneNumber2: '' },\r\n    //                 receiver: {\r\n    //                         firstName: '',\r\n    //                         phoneNumber1: '',\r\n    //                         phoneNumber2: '' },\r\n    //                 cartons: '',\r\n    //                 createdAt: '',\r\n    //                 deliveryLocations: '',\r\n    //                 descriptions: '',\r\n    //                 itemsWorth: '',\r\n    //                 otherItems: true,\r\n    //                 requestImages: '',\r\n    //                 status: '',\r\n    //                 tagName: '',\r\n    //                 amount: ''\r\n    //                 }\r\n           \r\n    //    };\r\n\r\n    const initialState =\r\n        {cartons: \"55\",\r\n        deliveryLocations: \"lagos\",\r\n        descriptions: \"thank you\",\r\n        itemsWorth: \"5000\",\r\n        receiverFirstName: 'mayowa',\r\n        receiverPhoneNumber1: '08087536643',\r\n        receiverPhoneNumber2: '08130614615',\r\n        requestImages: [],\r\n        senderFirstName: 'jony',\r\n        senderPhoneNumber1: '08130614615',\r\n        senderPhoneNumber2: '08130614615',\r\n        tagName: \"chisom\",\r\n        otherItems: false,\r\n        formErrors: {\r\n            senderFirstName: '',\r\n            senderPhoneNumber1: '',\r\n            senderPhoneNumber2: '',\r\n            receiverFirstName: '',\r\n            receiverPhoneNumber1: '',\r\n            receiverPhoneNumber2: '',\r\n            cartons: '',\r\n            createdAt: '',\r\n            deliveryLocations: '',\r\n            descriptions: '',\r\n            itemsWorth: '',\r\n            otherItems: true,\r\n            status: '',\r\n            tagName: '',\r\n            amount: ''\r\n            }\r\n        };\r\n        \r\n        // const initialState =\r\n        // {cartons: \"55\",\r\n        // deliveryLocations: \"lagos\",\r\n        // descriptions: \"thank you\",\r\n        // itemsWorth: \"5000\",\r\n        // receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\r\n        // sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\r\n        // tagName: \"chisom\",\r\n        // otherItems: false,\r\n        // _id: undefined,\r\n        // formErrors: {\r\n        //     sender: {\r\n        //             firstName: '',\r\n        //             phoneNumber1: '',\r\n        //             phoneNumber2: '' },\r\n        //     receiver: {\r\n        //             firstName: '',\r\n        //             phoneNumber1: '',\r\n        //             phoneNumber2: '' },\r\n        //     cartons: '',\r\n        //     createdAt: '',\r\n        //     deliveryLocations: '',\r\n        //     descriptions: '',\r\n        //     itemsWorth: '',\r\n        //     otherItems: true,\r\n        //     requestImages: '',\r\n        //     status: '',\r\n        //     tagName: '',\r\n        //     amount: '',\r\n        //     requestImages: [{img: ''}],\r\n        //     }\r\n        // };\r\n\r\n    const[input, setInput] = useState(initialState);\r\n    const [contacts, setContacts] = useState([]);\r\n    const [extractedRequest, setExtractedRequest] = useState();\r\n    const [sessionToken, setSessionToken] = useState();\r\n    const [isLogin, setisLogin] = useState(false);\r\n    const[temporaryImage, setTemporaryImage] = useState([]);\r\n    const [requestImages, setRequestImages] = useState([]);\r\n    const [count, setCount] = useState();\r\n    const [form, setForm] = useState();\r\n    const [requestSuccess, setRequestSuccess] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const router = useRouter();\r\n    const [loading, setLoading] = useState(false)\r\n    \r\n    \r\n\r\n\r\n    const handleChange = (e) => {\r\n        if(e){\r\n           e.preventDefault();\r\n           const {name, value, id} = e.target;\r\n           const {formErrors} = {...input};\r\n           requestValidate(id, value, formErrors);\r\n           const newInput = { ...input, [name]: value };\r\n           return setInput(newInput);\r\n        }\r\n    }; \r\n   const handleCheck = (e)=>{\r\n    const {name, checked} = e.target;\r\n    const newInput = {...input, [name]: checked};\r\n    return setInput(newInput);\r\n   } \r\n\r\n\r\nconst photoChange = (e) => {\r\n    e.preventDefault(); \r\n    progress !== 100 ? setLoading(true): setLoading(false); \r\n   if(e.target.files){\r\n     let selected = e.target.files[0];\r\n    let types = ['image/jpeg', 'image/png'];\r\n   let fileType = selected !== undefined ? types.includes(selected.type): setError(\"unsupported image type* accepted image jpg/png\");\r\n      let FileSize = \"5000000\";\r\n     let filteredImageSize= fileType == true ? selected.size < FileSize : setError(\"file too large *5mb minimum\"); \r\n     let perfectSize = filteredImageSize == true && (URL.createObjectURL(selected)); \r\n    let restructureUrl = {imageSource: perfectSize}\r\n    perfectSize !== undefined && setTemporaryImage([...temporaryImage, restructureUrl]);\r\n      if(filteredImageSize == true ){\r\n      const storageRef = store.ref(`requestImages/${selected.name}`);\r\n        storageRef.put(selected).on('state_changed', \r\n        async (snap) => {\r\n          const newPercentage = await (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        await setProgress(newPercentage);\r\n        },  async (err) => {\r\n        await setError(err);\r\n        }, async () => {\r\n          const cloudUrl = await storageRef.getDownloadURL();\r\n          setRequestImages([...requestImages, {cloudUrl}]);\r\n        });\r\n      }\r\n     URL.revokeObjectURL(selected);   \r\n    }\r\n};\r\n    console.log(requestImages);\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { cartons,\r\n        deliveryLocations,\r\n        descriptions,\r\n        itemsWorth,\r\n        receiverFirstName,\r\n        receiverPhoneNumber1,\r\n        receiverPhoneNumber2,\r\n        requestImages,\r\n        senderFirstName,\r\n        senderPhoneNumber1,\r\n        senderPhoneNumber2,\r\n        tagName,\r\n        otherItems} = input;\r\n\r\n        database.collection('Requests').add({ cartons, deliveryLocations, descriptions, itemsWorth, receiverFirstName, receiverPhoneNumber1,\r\n          receiverPhoneNumber2, requestImages, senderFirstName, senderPhoneNumber1, senderPhoneNumber2, tagName, otherItems, date: new Date()})\r\n          .then(\r\n            (data) => {\r\n              data && (setRequestSuccess(true));\r\n          })\r\n          .catch(\r\n            (error) => {\r\n              setError(error)\r\n            }\r\n          )\r\n        // const token = localStorage && localStorage.getItem('token');\r\n        // const res = await axios.post('/request/create', input, {\r\n        //     headers : {'authorization': token ? `Bearer ${token}` : ''}\r\n        // }).catch(function (error) {\r\n        //     if (error.response) {\r\n        //       // The request was made and the server responded with a status code\r\n        //       // that falls out of the range of 2xx\r\n        //       console.log(error.response.data);\r\n        //       console.log(error.response.status);\r\n        //       console.log(error.response.headers);\r\n        //       error.response.status && (\r\n        //         error.response.status == '500' || '400' && (\r\n        //           axios.post('/signout'),\r\n        //           localStorage.clear(),\r\n        //           router.replace('/login')\r\n        //         )\r\n        //       )\r\n        //     } else if (error.request) {\r\n        //       // The request was made but no response was received\r\n        //       // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        //       // http.ClientRequest in node.js\r\n        //       console.log(error.request);\r\n        //     } else {\r\n        //       // Something happened in setting up the request that triggered an Error\r\n        //       console.log('Error', error.message);\r\n        //     }\r\n        //     console.log(error.config);\r\n        //   });\r\n        //   console.log(res)\r\n        //   res && (\r\n        //       res.status == 201 && (\r\n        //           console.log(res),\r\n        //           setRequestSuccess(true)\r\n        //       )\r\n        //   )\r\n    };\r\n\r\n\r\n    const handleRequestUpdate = async(e, id) => {\r\n        e.preventDefault();\r\n       setInput(...input, requestImages);\r\n        const res = await axios.put('/request/' + id, input);\r\n    }\r\n\r\n    const handleFormPreview = (e) => {\r\n        e.preventDefault();\r\n       setInput({...input, requestImages});\r\n        setCount(\"active\");\r\n    }\r\n\r\n\r\n\r\n\r\n    const selector = [\r\n        {content: \"contact\" , icon: contact(), title: \"Contact\", id: 1 },\r\n        {content: \"gallery\", icon: gallery(), title: \"Gallery\", id: 2},\r\n        {content: \"ShippingRequest\", icon: offBack(), title: \"Request\", id: 3},\r\n        {content: \"\", icon: message(), title: \"Message\", id: 4}\r\n    ]\r\n\r\n\r\n    return (\r\n        <RequestContext.Provider value={{input, error, loading, setRequestImages, requestImages, requestSuccess, setRequestSuccess, initialState, setCount, count, setInput, handleChange, handleCheck, temporaryImage, handleFormSubmit, handleFormPreview, photoChange, selector, setExtractedRequest, extractedRequest, contacts, setContacts, handleRequestUpdate, sessionToken, isLogin, setisLogin}}>\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RequestContextProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}