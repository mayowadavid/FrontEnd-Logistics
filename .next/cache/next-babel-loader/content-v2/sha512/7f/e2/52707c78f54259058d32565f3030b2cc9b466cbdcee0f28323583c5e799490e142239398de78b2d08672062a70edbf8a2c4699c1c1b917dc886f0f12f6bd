{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\fireBase\\\\ProgressBar.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { motion } from 'framer-motion';\nimport { store } from './firebase';\n\nvar ProgressBar = function ProgressBar(_ref) {\n  _s();\n\n  var image = _ref.image,\n      setImage = _ref.setImage;\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState([]),\n      url = _useState3[0],\n      setUrl = _useState3[1];\n\n  useEffect(function () {\n    // references\n    var storageRef = store.ref(\"profileimages/\".concat(image.name));\n    storageRef.put(image).on('state_changed', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(snap) {\n        var newPercentage;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return snap.bytesTransferred / snap.totalBytes;\n\n              case 2:\n                _context.t0 = _context.sent;\n                newPercentage = _context.t0 * 100;\n                _context.next = 6;\n                return setProgress(snap);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(), /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return setError(err);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(), /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var newUrl;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return storageRef.getDownloadURL();\n\n            case 2:\n              newUrl = _context3.sent;\n              _context3.next = 5;\n              return setUrl([].concat(_toConsumableArray(url), [{\n                newUrl: newUrl\n              }]));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n  }, [image]);\n  image && (console.log(url), console.log(progress));\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"progress-bar\",\n    initial: {\n      width: 0\n    },\n    animate: {\n      width: progress + '%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProgressBar, \"PtRF75/NaYmDoBxPAuoWE+xt/JQ=\");\n\n_c = ProgressBar;\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/ProgressBar.js"],"names":["React","useState","useEffect","useContext","motion","store","ProgressBar","image","setImage","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","put","on","snap","bytesTransferred","totalBytes","newPercentage","err","getDownloadURL","newUrl","console","log","width"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAAQC,KAAR,QAAoB,YAApB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAyB;AAAA;;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACXP,QAAQ,CAAC,CAAD,CADG;AAAA,MACpCQ,QADoC;AAAA,MAC1BC,WAD0B;;AAAA,mBAEjBT,QAAQ,CAAC,IAAD,CAFS;AAAA,MAEpCU,KAFoC;AAAA,MAE7BC,QAF6B;;AAAA,mBAGrBX,QAAQ,CAAC,EAAD,CAHa;AAAA,MAGpCY,GAHoC;AAAA,MAG/BC,MAH+B;;AAQ3CZ,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMa,UAAU,GAAGV,KAAK,CAACW,GAAN,yBAA2BT,KAAK,CAACU,IAAjC,EAAnB;AACAF,IAAAA,UAAU,CAACG,GAAX,CAAeX,KAAf,EAAsBY,EAAtB,CAAyB,eAAzB;AAAA,2EACC,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC8BA,IAAI,CAACC,gBAAL,GAAwBD,IAAI,CAACE,UAD3D;;AAAA;AAAA;AACOC,gBAAAA,aADP,iBACyE,GADzE;AAAA;AAAA,uBAEMb,WAAW,CAAEU,IAAF,CAFjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD;;AAAA;AAAA;AAAA;AAAA;AAAA,2EAII,kBAAOI,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACGZ,QAAQ,CAACY,GAAD,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;;AAAA;AAAA;AAAA;AAAA,+EAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBT,UAAU,CAACU,cAAX,EADpB;;AAAA;AACKC,cAAAA,MADL;AAAA;AAAA,qBAEIZ,MAAM,8BAAKD,GAAL,IAAU;AAACa,gBAAAA,MAAM,EAANA;AAAD,eAAV,GAFV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANH;AAUD,GAbQ,EAaN,CAACnB,KAAD,CAbM,CAAT;AAkBIA,EAAAA,KAAK,KAAKoB,OAAO,CAACC,GAAR,CAAYf,GAAZ,GACVc,OAAO,CAACC,GAAR,CAAYnB,QAAZ,CADK,CAAL;AAWJ,sBACE,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,cAAtB;AACE,IAAA,OAAO,EAAE;AAAEoB,MAAAA,KAAK,EAAE;AAAT,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,KAAK,EAAEpB,QAAQ,GAAG;AAApB;AAFX;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CA3CD;;GAAMH,W;;KAAAA,W;AA6CN,eAAeA,WAAf","sourcesContent":["import React, {  useState, useEffect, useContext } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {store} from './firebase';\r\n\r\n\r\nconst ProgressBar = ({ image, setImage }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState([]);\r\n  \r\n    \r\n   \r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = store.ref(`profileimages/${image.name}`);\r\n    storageRef.put(image).on('state_changed', \r\n     async (snap) => {\r\n      const newPercentage = await (snap.bytesTransferred / snap.totalBytes) * 100;\r\n     await setProgress( snap);\r\n    },  async (err) => {\r\n     await setError(err);\r\n    }, async () => {\r\n      const newUrl = await storageRef.getDownloadURL();\r\n     await setUrl([...url, {newUrl}]);\r\n    });\r\n  }, [image]);\r\n\r\n\r\n    \r\n\r\n      image && (console.log(url),\r\n      console.log(progress));\r\n      \r\n    \r\n\r\n  \r\n   \r\n \r\n     \r\n \r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}