{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\ClientContext.js\";\nimport { object } from 'prop-types';\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from '../../helpers/axios';\nimport { generatePublicUrl } from '../../urlConfig';\nexport const ClientContext = /*#__PURE__*/createContext();\n\nconst ClientContextProvider = props => {\n  const initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phoneNumber: '',\n    address: '',\n    formErrors: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '',\n      address: ''\n    }\n  };\n  const {\n    0: count,\n    1: setCount\n  } = useState();\n  const {\n    0: profile,\n    1: setProfile\n  } = useState(initialState);\n  const {\n    0: temporaryImage,\n    1: setTemporaryImage\n  } = useState(initialState); // .type !== Format[0] || Format[1] || Format[2]) && (profileImage.size <= Format[2] || profileImage.size <= Format[3])\n\n  const formValid = formErrors => {\n    let valid = true;\n    object.values(formErrors).forEach(val => {\n      val.length > 0 && (valid = false);\n    });\n  }; // const profileDetails = (e) => {\n  //   e.preventDefault();\n  //   const {name, value} = e.target;\n  //   let {formErrors} = {...profile}\n  //   profileValidate(name, value, formErrors);\n  //   const {firstName, lastName, email, phoneNumber, address} = {... profile}\n  //   let form = new FormData();\n  //   form.append('profileImage', profileImage)\n  //   form.append('firstName', firstName);\n  //   form.append('email', email);\n  //   form.append('lastName', lastName);\n  //   form.append('phoneNumber',  phoneNumber);\n  //   form.append('address',  address);\n  //        for(let pair of form.entries()){\n  //         console.log([pair[0]+ ',' + pair[1]])\n  //   }\n  //   setForm(form);\n  //     return setProfile({...profile,  [name]: value})  \n  // }\n\n\n  const handleProfileSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage && localStorage.getItem('token');\n    setCount('');\n    let res = await axios.post('/profile/update', form, {\n      headers: {\n        'authorization': token ? `Bearer ${token}` : ''\n      }\n    }).catch(function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n    console.log(res);\n\n    if (res.status == 201) {\n      const {\n        updatedProfile\n      } = res.data;\n      const {\n        profileImage\n      } = updatedProfile;\n      let newProfile = generatePublicUrl(profileImage);\n      setTemporaryImage(newProfile);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      profile,\n      setProfile,\n      handleProfileSubmit,\n      temporaryImage,\n      count,\n      setCount\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ClientContextProvider;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/ClientContext.js"],"names":["object","React","createContext","useState","useEffect","axios","generatePublicUrl","ClientContext","ClientContextProvider","props","initialState","firstName","lastName","email","phoneNumber","address","formErrors","count","setCount","profile","setProfile","temporaryImage","setTemporaryImage","formValid","valid","values","forEach","val","length","handleProfileSubmit","e","preventDefault","token","localStorage","getItem","res","post","form","headers","catch","error","response","console","log","data","status","request","message","config","updatedProfile","profileImage","newProfile","children"],"mappings":"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","sourcesContent":["import { object } from 'prop-types';\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from '../../helpers/axios';\r\nimport {generatePublicUrl} from '../../urlConfig';\r\n\r\n\r\nexport const ClientContext = createContext();\r\n\r\nconst ClientContextProvider = (props) => {\r\n\r\n    const initialState = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '', \r\n      address: '',\r\n      formErrors: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: '', \r\n        address: ''\r\n      }\r\n    }\r\n\r\n    const [count, setCount] = useState(); \r\n    const [profile, setProfile] = useState(initialState); \r\n    const [temporaryImage, setTemporaryImage] = useState(initialState);\r\n    \r\n\r\n    // .type !== Format[0] || Format[1] || Format[2]) && (profileImage.size <= Format[2] || profileImage.size <= Format[3])\r\n\r\n    \r\n\r\n    \r\n    \r\n\r\n    \r\n\r\n  const formValid = formErrors => {\r\n    let valid = true;\r\n\r\n    object.values(formErrors).forEach(val => {\r\n      val.length > 0 && (valid = false)\r\n    })\r\n  }\r\n\r\n  // const profileDetails = (e) => {\r\n  //   e.preventDefault();\r\n   \r\n  //   const {name, value} = e.target;\r\n  //   let {formErrors} = {...profile}\r\n\r\n  //   profileValidate(name, value, formErrors);\r\n\r\n  //   const {firstName, lastName, email, phoneNumber, address} = {... profile}\r\n  //   let form = new FormData();\r\n  //   form.append('profileImage', profileImage)\r\n  //   form.append('firstName', firstName);\r\n  //   form.append('email', email);\r\n  //   form.append('lastName', lastName);\r\n  //   form.append('phoneNumber',  phoneNumber);\r\n  //   form.append('address',  address);\r\n  //        for(let pair of form.entries()){\r\n  //         console.log([pair[0]+ ',' + pair[1]])\r\n  //   }\r\n  //   setForm(form);\r\n  \r\n  //     return setProfile({...profile,  [name]: value})  \r\n  // }\r\n\r\n  const handleProfileSubmit = async(e) => {\r\n    e.preventDefault();\r\n    const token = localStorage && localStorage.getItem('token');\r\n    setCount('');\r\n   \r\n    let res = await axios.post('/profile/update', form, {\r\n      headers : {'authorization': token ? `Bearer ${token}` : ''}\r\n  }).catch(function (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n      }\r\n      console.log(error.config);\r\n    });\r\n    console.log(res);\r\n    if(res.status == 201){\r\n      const {updatedProfile} = res.data;\r\n      const {profileImage} = updatedProfile;\r\n      let newProfile = generatePublicUrl(profileImage);\r\n     setTemporaryImage(newProfile);\r\n    }\r\n  }; \r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n    return (\r\n        <ClientContext.Provider value={{ profile, setProfile, handleProfileSubmit, temporaryImage, count, setCount}}>\r\n            {props.children}\r\n        </ClientContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ClientContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}