{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"G:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"G:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"G:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"G:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\AuthContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { loginValidate, singupValidate } from '../validator/validate';\nimport { useRouter } from 'next/router';\nimport { auth, database, provider, functions } from '../firebase';\nimport axios from 'axios';\nexport var AuthContext = /*#__PURE__*/createContext();\n\nvar AuthContextProvider = function AuthContextProvider(props) {\n  _s();\n\n  var _useState = useState(false),\n      isLogin = _useState[0],\n      setisLogin = _useState[1];\n\n  var _useState2 = useState(),\n      sessionToken = _useState2[0],\n      setSessionToken = _useState2[1];\n\n  var _useState3 = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phoneNumber: '',\n    password: '',\n    formErrors: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '',\n      password: ''\n    }\n  }),\n      signup = _useState3[0],\n      setSignup = _useState3[1];\n\n  var _useState4 = useState({\n    email: '',\n    formErrors: {\n      email: ''\n    }\n  }),\n      resetPassword = _useState4[0],\n      setResetPassword = _useState4[1];\n\n  var _useState5 = useState({\n    email: '',\n    password: '',\n    formErrors: {\n      email: '',\n      password: ''\n    }\n  }),\n      login = _useState5[0],\n      setLogin = _useState5[1];\n\n  var _useState6 = useState(false),\n      authenticate = _useState6[0],\n      setAuthenticate = _useState6[1];\n\n  var _useState7 = useState(false),\n      authenticating = _useState7[0],\n      setAuthenticating = _useState7[1];\n\n  var _useState8 = useState(''),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var router = useRouter();\n\n  var _useState9 = useState({\n    message: '',\n    token: '',\n    user: {\n      email: '',\n      firstName: '',\n      fullName: '',\n      lastName: '',\n      role: '',\n      _id: ''\n    }\n  }),\n      success = _useState9[0],\n      setSuccess = _useState9[1];\n\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      user == null ? setisLogin(false) : setisLogin(true);\n    });\n  }, []);\n\n  var handleLoginChange = function handleLoginChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    var formErrors = login.formErrors;\n    loginValidate(name, value, formErrors);\n\n    var newLogin = _objectSpread(_objectSpread({}, login), {}, _defineProperty({}, name, value));\n\n    return setLogin(newLogin);\n  };\n\n  var handleSignupChange = function handleSignupChange(e) {\n    var _signup = _objectSpread({}, signup),\n        formErrors = _signup.formErrors;\n\n    var _e$target2 = e.target,\n        name = _e$target2.name,\n        value = _e$target2.value;\n    singupValidate(name, value, formErrors);\n\n    var newSignup = _objectSpread(_objectSpread({}, signup), {}, _defineProperty({}, name, value));\n\n    return setSignup(newSignup);\n  };\n\n  var handleSignupSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var firstName, lastName, email, phoneNumber, password;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              firstName = signup.firstName, lastName = signup.lastName, email = signup.email, phoneNumber = signup.phoneNumber, password = signup.password;\n              auth.createUserWithEmailAndPassword(email, password).then(function (cred) {\n                return database.collection('Profile').doc(cred.user.uid).set({\n                  phoneNumber: phoneNumber,\n                  email: email,\n                  firstName: firstName,\n                  lastName: lastName\n                });\n              }).then(function () {\n                setisLogin(true);\n                router.replace('dashboard');\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSignupSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleAdminSignUp = function handleAdminSignUp(e) {\n    e.preventDefault();\n    var firstName = signup.firstName,\n        lastName = signup.lastName,\n        email = signup.email,\n        phoneNumber = signup.phoneNumber,\n        password = signup.password;\n    var body = {\n      email: email\n    };\n\n    var headers = _defineProperty({\n      'content-type': \"application/json\",\n      'Access-Control-Allow-Origin': 'http://localhost:3000',\n      'Access-Control-Allow-Methods': 'post'\n    }, \"Access-Control-Allow-Origin\", 'http://localhost:3000');\n\n    fetch(\"https://us-central1-managerbran-2a699.cloudfunctions.net/addAdminRole\", {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(body)\n    })[\"catch\"](function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    }); // const addAdminRole = functions.httpsCallable('addAdminRole')\n    // addAdminRole({email}).then(result => {\n    //   console.log(result)\n    // });\n    // auth.createUserWithEmailAndPassword(email, password).then(cred =>{\n    //   return database.collection('Profile').doc(cred.user.uid).set({\n    //     phoneNumber, email, firstName, lastName\n    //   })}\n    // ).then(()=>{\n    //   setisLogin(true);\n    //   router.replace('dashboard');\n    // } )\n  };\n\n  var handleSignout = function handleSignout(e) {\n    e.preventDefault();\n    auth.signOut().then(function () {// Sign-out successful.\n    })[\"catch\"](function (error) {// An error happened.\n    });\n  };\n\n  var passwordReset = function passwordReset(e) {\n    e.preventDefault();\n    var email = resetPassword.email;\n    auth.sendPasswordResetEmail(email).then(function () {})[\"catch\"](function (error) {\n      setError(error.message);\n    });\n  };\n\n  var handlePasswordChange = function handlePasswordChange(e) {\n    e.preventDefault();\n    var _e$target3 = e.target,\n        name = _e$target3.name,\n        value = _e$target3.value;\n    var formErrors = resetPassword.formErrors;\n    var emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n    formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : '*input a valid email address*';\n    setResetPassword(_objectSpread(_objectSpread({}, resetPassword), {}, _defineProperty({}, name, value)));\n  };\n\n  var handleSocialLogin = function handleSocialLogin(e) {\n    e.preventDefault();\n    auth.signInWithPopup(provider).then(function (result) {\n      /** @type {firebase.auth.OAuthCredential} */\n      var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n      var token = credential.accessToken; // The signed-in user info.\n\n      var user = result.user;\n      var data = user.displayName.split(\" \");\n      var firstName = data[0];\n      var lastName = data[1];\n      var email = result.user.email;\n      user && user.uid && setLogin(true);\n      return database.collection('Profile').doc(result.user.uid).set({\n        firstName: firstName,\n        lastName: lastName,\n        email: email\n      }); // ...\n    })[\"catch\"](function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    });\n  };\n\n  var handleLoginSubmit = function handleLoginSubmit(e) {\n    e.preventDefault();\n    setAuthenticating(true);\n    var email = login.email,\n        password = login.password;\n    auth.signInWithEmailAndPassword(email, password).then(function () {\n      setisLogin(true);\n      router.replace('dashboard');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      sessionToken: sessionToken,\n      setSessionToken: setSessionToken,\n      passwordReset: passwordReset,\n      resetPassword: resetPassword,\n      handlePasswordChange: handlePasswordChange,\n      login: login,\n      signup: signup,\n      isLogin: isLogin,\n      setisLogin: setisLogin,\n      handleLoginChange: handleLoginChange,\n      handleSocialLogin: handleSocialLogin,\n      handleSignupChange: handleSignupChange,\n      handleAdminSignUp: handleAdminSignUp,\n      handleSignout: handleSignout,\n      handleSignupSubmit: handleSignupSubmit,\n      handleLoginSubmit: handleLoginSubmit\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AuthContextProvider, \"ry8gBksQ9+nNxgAw+eeLv/PQ0ss=\", false, function () {\n  return [useRouter];\n});\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["G:/G4 Logistics/FrontEnd/components/context/AuthContext.js"],"names":["React","createContext","useState","useEffect","loginValidate","singupValidate","useRouter","auth","database","provider","functions","axios","AuthContext","AuthContextProvider","props","isLogin","setisLogin","sessionToken","setSessionToken","firstName","lastName","email","phoneNumber","password","formErrors","signup","setSignup","resetPassword","setResetPassword","login","setLogin","authenticate","setAuthenticate","authenticating","setAuthenticating","error","setError","router","message","token","user","fullName","role","_id","success","setSuccess","onAuthStateChanged","handleLoginChange","e","target","name","value","newLogin","handleSignupChange","newSignup","handleSignupSubmit","preventDefault","createUserWithEmailAndPassword","then","cred","collection","doc","uid","set","replace","handleAdminSignUp","body","headers","fetch","method","JSON","stringify","response","console","log","data","status","request","config","handleSignout","signOut","passwordReset","sendPasswordResetEmail","handlePasswordChange","emailRegex","RegExp","test","length","handleSocialLogin","signInWithPopup","result","credential","accessToken","displayName","split","errorCode","code","errorMessage","handleLoginSubmit","signInWithEmailAndPassword","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { loginValidate, singupValidate } from '../validator/validate';\r\nimport { useRouter } from 'next/router';\r\nimport { auth, database, provider, functions } from '../firebase';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = (props) => {\r\n\r\n    const [isLogin, setisLogin] = useState(false);\r\n    const [sessionToken, setSessionToken] = useState();\r\n    const [signup, setSignup] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        password: '',\r\n        formErrors: {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            password: '',\r\n        }\r\n    });\r\n\r\n    const [resetPassword, setResetPassword] = useState({\r\n        email: '',\r\n        formErrors: {\r\n            email: ''\r\n        }\r\n    });\r\n\r\n    const [login, setLogin] = useState({\r\n        email: '',\r\n        password: '',\r\n        formErrors: {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    });\r\n\r\n    const [authenticate, setAuthenticate] = useState(false);\r\n    const [authenticating, setAuthenticating] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const router = useRouter();\r\n    const [success, setSuccess] = useState({\r\n        message: '',\r\n        token: '',\r\n        user: {\r\n            email: '',\r\n            firstName: '',\r\n            fullName: '',\r\n            lastName: '',\r\n            role: '',\r\n            _id: ''\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            user == null ? setisLogin(false) : setisLogin(true);\r\n        })\r\n    }, [])\r\n\r\n    const handleLoginChange = (e) => {\r\n        const { name, value } = e.target;\r\n        const { formErrors } = login;\r\n        loginValidate(name, value, formErrors);\r\n        let newLogin = {...login, [name]: value }\r\n        return setLogin(newLogin)\r\n    }\r\n\r\n    const handleSignupChange = (e) => {\r\n        const { formErrors } = {...signup }\r\n        const { name, value } = e.target;\r\n        singupValidate(name, value, formErrors)\r\n        let newSignup = {...signup, [name]: value }\r\n        return setSignup(newSignup)\r\n    }\r\n\r\n    const handleSignupSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const { firstName, lastName, email, phoneNumber, password } = signup;\r\n        auth.createUserWithEmailAndPassword(email, password).then(cred => {\r\n            return database.collection('Profile').doc(cred.user.uid).set({\r\n                phoneNumber,\r\n                email,\r\n                firstName,\r\n                lastName\r\n            })\r\n        }).then(() => {\r\n            setisLogin(true);\r\n            router.replace('dashboard');\r\n        })\r\n    }\r\n\r\n    const handleAdminSignUp = (e) => {\r\n        e.preventDefault();\r\n        const { firstName, lastName, email, phoneNumber, password } = signup;\r\n\r\n        const body = {\r\n            email\r\n        }\r\n\r\n        const headers = {\r\n            'content-type': \"application/json\",\r\n            'Access-Control-Allow-Origin': 'http://localhost:3000',\r\n            'Access-Control-Allow-Methods': 'post',\r\n            'Access-Control-Allow-Origin': 'http://localhost:3000'\r\n        }\r\n\r\n        fetch(`https://us-central1-managerbran-2a699.cloudfunctions.net/addAdminRole`, {\r\n            method: \"POST\",\r\n            headers,\r\n            body: JSON.stringify(body)\r\n        }).catch(function(error) {\r\n            if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            } else if (error.request) {\r\n                // The request was made but no response was received\r\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                // http.ClientRequest in node.js\r\n                console.log(error.request);\r\n            } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                console.log('Error', error.message);\r\n            }\r\n            console.log(error.config);\r\n        });\r\n        // const addAdminRole = functions.httpsCallable('addAdminRole')\r\n        // addAdminRole({email}).then(result => {\r\n        //   console.log(result)\r\n        // });\r\n        // auth.createUserWithEmailAndPassword(email, password).then(cred =>{\r\n        //   return database.collection('Profile').doc(cred.user.uid).set({\r\n        //     phoneNumber, email, firstName, lastName\r\n        //   })}\r\n        // ).then(()=>{\r\n        //   setisLogin(true);\r\n        //   router.replace('dashboard');\r\n        // } )\r\n    }\r\n\r\n    const handleSignout = (e) => {\r\n        e.preventDefault();\r\n        auth.signOut().then(() => {\r\n            // Sign-out successful.\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n    }\r\n    const passwordReset = (e) => {\r\n        e.preventDefault();\r\n        const { email } = resetPassword;\r\n        auth.sendPasswordResetEmail(email).then(() => {})\r\n            .catch((error) => {\r\n                setError(error.message);\r\n            })\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        const { formErrors } = resetPassword;\r\n        const emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\n        formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : '*input a valid email address*';\r\n        setResetPassword({...resetPassword, [name]: value });\r\n    }\r\n\r\n    const handleSocialLogin = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithPopup(provider).then((result) => {\r\n            /** @type {firebase.auth.OAuthCredential} */\r\n            var credential = result.credential;\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            let data = user.displayName.split(\" \");\r\n            let firstName = data[0];\r\n            let lastName = data[1];\r\n            let email = result.user.email;\r\n            user && (user.uid && setLogin(true));\r\n            return database.collection('Profile').doc(result.user.uid).set({\r\n                    firstName,\r\n                    lastName,\r\n                    email\r\n                })\r\n                // ...\r\n        }).catch((error) => {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n        });\r\n    }\r\n\r\n    const handleLoginSubmit = (e) => {\r\n        e.preventDefault();\r\n        setAuthenticating(true);\r\n        const { email, password } = login;\r\n        auth.signInWithEmailAndPassword(email, password).then(() => {\r\n            setisLogin(true);\r\n            router.replace('dashboard');\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{sessionToken, setSessionToken, passwordReset, resetPassword, handlePasswordChange, login, signup, isLogin, setisLogin, handleLoginChange, handleSocialLogin, handleSignupChange, handleAdminSignUp, handleSignout, handleSignupSubmit, handleLoginSubmit}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider;"]},"metadata":{},"sourceType":"module"}