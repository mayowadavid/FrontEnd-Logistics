{"ast":null,"code":"export const emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nexport const profileValidate = (name, value, formErrors) => {\n  switch (name) {\n    case \"firstName\":\n      formErrors.firstName = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n\n    case \"lastName\":\n      formErrors.lastName = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n\n    case \"email\":\n      formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : '*input a valid email address*';\n      break;\n\n    case \"phoneNumber\":\n      formErrors.phoneNumber = value.length < 11 && value.length > 0 ? '*input a valid phone number*' : '';\n      break;\n\n    case \"address\":\n      formErrors.address = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n  }\n};\nexport const requestValidate = (id, value, formErrors) => {\n  switch (id) {\n    case \"senderFirstName\":\n      formErrors.senderFirstName = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n\n    case \"senderphoneNumber1\":\n      formErrors.senderPhoneNumber1 = value.length < 11 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n\n    case \"senderphoneNumber2\":\n      formErrors.senderPhoneNumber2 = value.length < 11 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n\n    case \"receiverFirstname\":\n      formErrors.receiverFirstName = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n\n    case \"receiverphoneNumber1\":\n      formErrors.receiverPhoneNumber1 = value.length < 11 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n\n    case \"receiverphoneNumber2\":\n      formErrors.receiverPhoneNumber2 = value.length < 11 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n\n    case \"tagName\":\n      formErrors.tagName = value.length < 2 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n\n    case \"Cartons\":\n      formErrors.cartons = value.length <= 0 ? '*input number of items*' : '';\n      break;\n\n    case \"itemsWorth\":\n      formErrors.itemsWorth = value.length <= 0 ? '*input items worth*' : '';\n      break;\n\n    case \"deliveryLocation\":\n      formErrors.deliveryLocations = value.length < 3 && value.length > 0 ? '*input a proper state*' : '';\n      break;\n\n    case \"descriptions\":\n      formErrors.descriptions = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*' : '';\n      break;\n  }\n};\nexport const singupValidate = (name, value, formErrors) => {\n  switch (name) {\n    case \"firstName\":\n      formErrors.firstName = value.length > 3 && value.length > 0 ? '' : '*minimum 3 characters required*';\n      break;\n\n    case \"lastName\":\n      formErrors.lastName = value.length > 3 && value.length > 0 ? '' : '*minimum 3 characters required*';\n      break;\n\n    case \"phoneNumber\":\n      formErrors.phoneNumber = value.length > 10 && value.length > 0 ? '' : '*input a valid number*';\n      break;\n\n    case \"email\":\n      formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : '*input a valid email address*';\n      break;\n\n    case \"password\":\n      formErrors.password = value.length < 6 && value.length > 0 ? '*password is too short*' : '';\n      break;\n  }\n};","map":{"version":3,"sources":["G:/G4 Logistics/FrontEnd/components/validator/validate.js"],"names":["emailRegex","RegExp","profileValidate","name","value","formErrors","firstName","length","lastName","email","test","phoneNumber","address","requestValidate","id","senderFirstName","senderPhoneNumber1","senderPhoneNumber2","receiverFirstName","receiverPhoneNumber1","receiverPhoneNumber2","tagName","cartons","itemsWorth","deliveryLocations","descriptions","singupValidate","password"],"mappings":"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","sourcesContent":["export const emailRegex = RegExp( /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\n\r\nexport const profileValidate = ( name, value, formErrors ) => {\r\n\t\r\n\tswitch (name) {\r\n\t\tcase \"firstName\":\r\n\t\t\tformErrors.firstName = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"lastName\":\r\n\t\t\tformErrors.lastName = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"email\":\r\n\t\t\tformErrors.email = emailRegex.test(value) && value.length > 0 ? '': '*input a valid email address*';\r\n\t\t\tbreak;\r\n\t\tcase \"phoneNumber\":\r\n\t\t\tformErrors.phoneNumber = value.length < 11  && value.length > 0 ? '*input a valid phone number*' : '';\r\n\t\t\tbreak;\r\n\t\tcase \"address\":\r\n\t\t\tformErrors.address = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t  }\r\n};\r\n\r\nexport const requestValidate = ( id, value, formErrors ) => {\r\n\r\n\tswitch (id) {\r\n\t\tcase \"senderFirstName\":\r\n\t\t\tformErrors.senderFirstName = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"senderphoneNumber1\":\r\n\t\t\tformErrors.senderPhoneNumber1 = value.length < 11 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"senderphoneNumber2\":\r\n\t\t\tformErrors.senderPhoneNumber2 = value.length < 11 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"receiverFirstname\":\r\n\t\t\tformErrors.receiverFirstName = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"receiverphoneNumber1\":\r\n\t\t\tformErrors.receiverPhoneNumber1 = value.length < 11 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"receiverphoneNumber2\":\r\n\t\t\tformErrors.receiverPhoneNumber2 = value.length < 11 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"tagName\":\r\n\t\t\tformErrors.tagName = value.length < 2 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"Cartons\":\r\n\t\t\tformErrors.cartons = value.length <= 0  ? '*input number of items*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"itemsWorth\":\r\n\t\t\tformErrors.itemsWorth = value.length <= 0 ? '*input items worth*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"deliveryLocation\":\r\n\t\t\tformErrors.deliveryLocations = value.length < 3 && value.length > 0 ? '*input a proper state*': '';\r\n\t\t\tbreak;\r\n\t\tcase \"descriptions\":\r\n\t\t\tformErrors.descriptions = value.length < 3 && value.length > 0 ? '*minimum 3 characters required*': '';\r\n\t\t\tbreak;\r\n\t  }\r\n};\r\n\r\n\r\nexport const singupValidate = ( name, value, formErrors ) => {\r\n\t\r\n\tswitch (name) {\r\n\t\tcase \"firstName\":\r\n\t\t\tformErrors.firstName = value.length > 3 && value.length > 0 ? '': '*minimum 3 characters required*';\r\n\t\t\tbreak;\r\n\t\tcase \"lastName\":\r\n\t\t\tformErrors.lastName = value.length > 3 && value.length > 0 ? '': '*minimum 3 characters required*';\r\n\t\t\tbreak;\r\n\t\tcase \"phoneNumber\":\r\n\t\t\tformErrors.phoneNumber = value.length > 10 && value.length > 0 ? '': '*input a valid number*';\r\n\t\t\tbreak;\r\n\t\tcase \"email\":\r\n\t\t\tformErrors.email = emailRegex.test(value) && value.length > 0 ? '': '*input a valid email address*';\r\n\t\t\tbreak;\r\n\t\tcase \"password\":\r\n\t\t\tformErrors.password = value.length < 6  && value.length > 0 ? '*password is too short*' : '';\r\n\t\t\tbreak;\r\n\t  }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}