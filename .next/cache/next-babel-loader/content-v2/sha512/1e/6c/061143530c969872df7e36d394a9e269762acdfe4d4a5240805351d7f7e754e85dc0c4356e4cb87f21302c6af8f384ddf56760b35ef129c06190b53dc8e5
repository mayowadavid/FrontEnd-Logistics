{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\fireBase\\\\ProgressBar.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { motion } from 'framer-motion';\nimport { ClientContext } from '../context/ClientContext';\nimport storageHook from './storageHook';\n\nconst ProgressBar = ({\n  image,\n  setImage\n}) => {\n  const {\n    url,\n    progress,\n    setUrl\n  } = useContext(ClientContext);\n  const {\n    0: check,\n    1: setCheck\n  } = useState([]);\n  useEffect(() => {\n    // references\n    image.map(img => storageHook(img));\n  }, []);\n  let compile = [...url, url];\n  image.length !== check.length && console.log(compile);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"progress-bar\",\n    initial: {\n      width: 0\n    },\n    animate: {\n      width: progress + '%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/ProgressBar.js"],"names":["React","useState","useEffect","useContext","motion","ClientContext","storageHook","ProgressBar","image","setImage","url","progress","setUrl","check","setCheck","map","img","compile","length","console","log","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AACzC,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA;AAAhB,MAA0BT,UAAU,CAACE,aAAD,CAA1C;AACA,QAAK;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAC,EAAD,CAAjC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAM,IAAAA,KAAK,CAACO,GAAN,CAAUC,GAAG,IAAIV,WAAW,CAACU,GAAD,CAA5B;AAED,GAJM,EAIJ,EAJI,CAAT;AAKE,MAAIC,OAAO,GAAG,CAAC,GAAGP,GAAJ,EAASA,GAAT,CAAd;AAEAF,EAAAA,KAAK,CAACU,MAAN,KAAiBL,KAAK,CAACK,MAAvB,IAAkCC,OAAO,CAACC,GAAR,CAAYH,OAAZ,CAAlC;AAUJ,sBACE,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,cAAtB;AACE,IAAA,OAAO,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,KAAK,EAAEV,QAAQ,GAAG;AAApB;AAFX;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7BD;;AA+BA,eAAeJ,WAAf","sourcesContent":["import React, {  useState, useEffect, useContext } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { ClientContext } from '../context/ClientContext';\r\nimport storageHook from './storageHook';\r\n\r\nconst ProgressBar = ({ image, setImage }) => {\r\n    const {url, progress, setUrl} = useContext(ClientContext);\r\n    const[check, setCheck] = useState([]);\r\n    \r\n   \r\n\r\n    useEffect(() => {\r\n        // references\r\n        image.map(img => storageHook(img) )\r\n        \r\n      }, []); \r\n      let compile = [...url, url];\r\n\r\n      image.length !== check.length && (console.log(compile));\r\n      \r\n    \r\n\r\n  \r\n   \r\n \r\n     \r\n \r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}