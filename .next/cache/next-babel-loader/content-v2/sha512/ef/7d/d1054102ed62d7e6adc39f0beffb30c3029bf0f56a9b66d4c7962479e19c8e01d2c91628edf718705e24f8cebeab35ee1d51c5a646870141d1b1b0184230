{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\ClientContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { object } from 'prop-types';\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from '../../helpers/axios';\nimport { generatePublicUrl } from '../../urlConfig';\nimport { profileValidate } from '../validator/validate';\nexport const ClientContext = /*#__PURE__*/createContext();\n\nconst ClientContextProvider = props => {\n  const initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phoneNumber: '',\n    address: '',\n    formErrors: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '',\n      address: ''\n    }\n  };\n  const {\n    0: profile,\n    1: setProfile\n  } = useState(initialState);\n  useEffect(() => {}, []); // .type !== Format[0] || Format[1] || Format[2]) && (profileImage.size <= Format[2] || profileImage.size <= Format[3])\n\n  const {\n    0: profileImage,\n    1: setProfileImage\n  } = useState();\n  const {\n    0: temporaryImage,\n    1: setTemporaryImage\n  } = useState();\n  const {\n    0: form,\n    1: setForm\n  } = useState();\n  const {\n    0: count,\n    1: setCount\n  } = useState();\n\n  const handleProfileChange = e => {\n    e.preventDefault();\n\n    if (e.target.files) {\n      setProfileImage(e.target.files[0]);\n      let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\n      let hold = URL.createObjectURL(e.target.files[0]);\n      setTemporaryImage(hold);\n      URL.revokeObjectURL(e.target.files[0]);\n    }\n  };\n\n  const formValid = formErrors => {\n    let valid = true;\n    object.values(formErrors).forEach(val => {\n      val.length > 0 && (valid = false);\n    });\n  };\n\n  const profileDetails = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n\n    let {\n      formErrors\n    } = _objectSpread({}, profile);\n\n    profileValidate(name, value, formErrors);\n\n    const {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      address\n    } = _objectSpread({}, profile);\n\n    let form = new FormData();\n    form.append('profileImage', profileImage);\n    form.append('firstName', firstName);\n    form.append('email', email);\n    form.append('lastName', lastName);\n    form.append('phoneNumber', phoneNumber);\n    form.append('address', address);\n\n    for (let pair of form.entries()) {\n      console.log([pair[0] + ',' + pair[1]]);\n    }\n\n    setForm(form);\n    return setProfile(_objectSpread(_objectSpread({}, profile), {}, {\n      [name]: value\n    }));\n  };\n\n  const handleProfileSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage && localStorage.getItem('token');\n    setCount('');\n    let res = await axios.post('/profile/update', form, {\n      headers: {\n        'authorization': token ? `Bearer ${token}` : ''\n      }\n    }).catch(function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n    console.log(res);\n\n    if (res.status == 201) {\n      const {\n        updatedProfile\n      } = res.data;\n      const {\n        profileImage\n      } = updatedProfile;\n      let newProfile = generatePublicUrl(profileImage);\n      setTemporaryImage(newProfile);\n    }\n  };\n\n  const handleProfilePreview = e => {\n    e.preventDefault();\n    setCount('active');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      handleProfileChange,\n      handleProfilePreview,\n      handleProfileSubmit,\n      profile,\n      setProfile,\n      temporaryImage,\n      profileDetails,\n      setProfileImage,\n      count,\n      setCount\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ClientContextProvider;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/ClientContext.js"],"names":["object","React","createContext","useState","useEffect","axios","generatePublicUrl","profileValidate","ClientContext","ClientContextProvider","props","initialState","firstName","lastName","email","phoneNumber","address","formErrors","profile","setProfile","profileImage","setProfileImage","temporaryImage","setTemporaryImage","form","setForm","count","setCount","handleProfileChange","e","preventDefault","target","files","Format","hold","URL","createObjectURL","revokeObjectURL","formValid","valid","values","forEach","val","length","profileDetails","name","value","FormData","append","pair","entries","console","log","handleProfileSubmit","token","localStorage","getItem","res","post","headers","catch","error","response","data","status","request","message","config","updatedProfile","newProfile","handleProfilePreview","children"],"mappings":"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","sourcesContent":["import { object } from 'prop-types';\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from '../../helpers/axios';\r\nimport {generatePublicUrl} from '../../urlConfig';\r\nimport { profileValidate } from '../validator/validate';\r\n\r\nexport const ClientContext = createContext();\r\n\r\nconst ClientContextProvider = (props) => {\r\n\r\n    const initialState = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '', \r\n      address: '',\r\n      formErrors: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: '', \r\n        address: ''\r\n      }\r\n    }\r\n\r\n    const [profile, setProfile] = useState(initialState);\r\n\r\n    useEffect(()=> {\r\n      \r\n    }, [])\r\n\r\n\r\n    // .type !== Format[0] || Format[1] || Format[2]) && (profileImage.size <= Format[2] || profileImage.size <= Format[3])\r\n\r\n    const [profileImage, setProfileImage] = useState()\r\n\r\n    const[temporaryImage, setTemporaryImage]= useState();\r\n    const[form, setForm] = useState();\r\n    const [count, setCount] = useState();\r\n    \r\n\r\n    const handleProfileChange = (e) => {\r\n        e.preventDefault();  \r\n        \r\n        if(e.target.files){\r\n         setProfileImage(e.target.files[0])\r\n          let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\r\n         let hold = URL.createObjectURL(e.target.files[0]);\r\n         setTemporaryImage(hold);\r\n         URL.revokeObjectURL(e.target.files[0]);   \r\n      }\r\n  };\r\n\r\n  const formValid = formErrors => {\r\n    let valid = true;\r\n\r\n    object.values(formErrors).forEach(val => {\r\n      val.length > 0 && (valid = false)\r\n    })\r\n  }\r\n\r\n  const profileDetails = (e) => {\r\n    e.preventDefault();\r\n   \r\n    const {name, value} = e.target;\r\n    let {formErrors} = {...profile}\r\n\r\n    profileValidate(name, value, formErrors);\r\n\r\n    const {firstName, lastName, email, phoneNumber, address} = {... profile}\r\n    let form = new FormData();\r\n    form.append('profileImage', profileImage)\r\n    form.append('firstName', firstName);\r\n    form.append('email', email);\r\n    form.append('lastName', lastName);\r\n    form.append('phoneNumber',  phoneNumber);\r\n    form.append('address',  address);\r\n         for(let pair of form.entries()){\r\n          console.log([pair[0]+ ',' + pair[1]])\r\n    }\r\n    setForm(form);\r\n  \r\n      return setProfile({...profile,  [name]: value})  \r\n  }\r\n\r\n  const handleProfileSubmit = async(e) => {\r\n    e.preventDefault();\r\n    const token = localStorage && localStorage.getItem('token');\r\n    setCount('');\r\n   \r\n    let res = await axios.post('/profile/update', form, {\r\n      headers : {'authorization': token ? `Bearer ${token}` : ''}\r\n  }).catch(function (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n      }\r\n      console.log(error.config);\r\n    });\r\n    console.log(res);\r\n    if(res.status == 201){\r\n      const {updatedProfile} = res.data;\r\n      const {profileImage} = updatedProfile;\r\n      let newProfile = generatePublicUrl(profileImage);\r\n     setTemporaryImage(newProfile);\r\n    }\r\n  }; \r\n\r\n  const handleProfilePreview = (e) => {\r\n    e.preventDefault();\r\n    setCount('active');\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n    return (\r\n        <ClientContext.Provider value={{handleProfileChange, handleProfilePreview, handleProfileSubmit, profile, setProfile, temporaryImage, profileDetails, setProfileImage, count, setCount}}>\r\n            {props.children}\r\n        </ClientContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ClientContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}