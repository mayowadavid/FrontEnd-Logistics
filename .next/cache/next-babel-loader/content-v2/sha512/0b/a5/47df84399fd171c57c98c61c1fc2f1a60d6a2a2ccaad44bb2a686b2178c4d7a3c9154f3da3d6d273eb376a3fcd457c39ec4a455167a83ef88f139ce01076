{"ast":null,"code":"import { useState, useEffect, useContext } from 'react';\nimport { ClientContext } from '../context/ClientContext';\nimport { store } from '../firebase';\n\nconst useStorage = image => {\n  const {\n    setError,\n    setUrl,\n    setProgress,\n    progress,\n    url\n  } = useContext(ClientContext);\n  useEffect(() => {\n    // references\n    const storageRef = store.ref(`profileimages/${image.name}`);\n    storageRef.put(image).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n    });\n  }, [image]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/storageHook.js"],"names":["useState","useEffect","useContext","ClientContext","store","useStorage","image","setError","setUrl","setProgress","progress","url","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","error"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAAQC,KAAR,QAAoB,aAApB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA;AAA1C,MAAiDT,UAAU,CAACC,aAAD,CAAjE;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMW,UAAU,GAAGR,KAAK,CAACS,GAAN,CAAW,iBAAgBP,KAAK,CAACQ,IAAK,EAAtC,CAAnB;AAGAF,IAAAA,UAAU,CAACG,GAAX,CAAeT,KAAf,EAAsBU,EAAtB,CAAyB,eAAzB,EAA2CC,IAAD,IAAU;AAClD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAX,MAAAA,WAAW,CAACS,UAAD,CAAX;AACD,KAHD,EAGIG,GAAD,IAAS;AACVd,MAAAA,QAAQ,CAACc,GAAD,CAAR;AACD,KALD,EAKG,YAAY;AACb,YAAMV,GAAG,GAAG,MAAMC,UAAU,CAACU,cAAX,EAAlB;AACAd,MAAAA,MAAM,CAACG,GAAD,CAAN;AAED,KATD;AAUD,GAfQ,EAeN,CAACL,KAAD,CAfM,CAAT;AAmBA,SAAO;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,GAAZ;AAAiBY,IAAAA;AAAjB,GAAP;AACD,CAvBD;;AAyBA,eAAelB,UAAf","sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport { ClientContext } from '../context/ClientContext';\r\nimport {store} from '../firebase';\r\n\r\nconst useStorage = (image) => {\r\n  const {setError, setUrl, setProgress, progress, url} = useContext(ClientContext);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = store.ref(`profileimages/${image.name}`);\r\n   \r\n    \r\n    storageRef.put(image).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storageRef.getDownloadURL();\r\n      setUrl(url);\r\n     \r\n    });\r\n  }, [image]);\r\n\r\n  \r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}