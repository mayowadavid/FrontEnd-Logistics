{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { storage } from '../firebase';\n\nconst useStorage = image => {\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: url,\n    1: setUrl\n  } = useState(null);\n  useEffect(() => {\n    // references\n    const storageRef = storage.ref(`profileimages/${image.name}`);\n    storageRef.put(image).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n      console.log(url);\n    });\n  }, [image]);\n  return {\n    progress,\n    url,\n    error,\n    setProgress,\n    setUrl\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/storageHook.js"],"names":["useState","useEffect","storage","useStorage","image","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACS,GAAD;AAAA,OAAMC;AAAN,MAAgBV,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMU,UAAU,GAAGT,OAAO,CAACU,GAAR,CAAa,iBAAgBR,KAAK,CAACS,IAAK,EAAxC,CAAnB;AAGAF,IAAAA,UAAU,CAACG,GAAX,CAAeV,KAAf,EAAsBW,EAAtB,CAAyB,eAAzB,EAA2CC,IAAD,IAAU;AAClD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAb,MAAAA,WAAW,CAACW,UAAD,CAAX;AACD,KAHD,EAGIG,GAAD,IAAS;AACVZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AACD,KALD,EAKG,YAAY;AACb,YAAMX,GAAG,GAAG,MAAME,UAAU,CAACU,cAAX,EAAlB;AACAX,MAAAA,MAAM,CAACD,GAAD,CAAN;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACD,KATD;AAUD,GAfQ,EAeN,CAACL,KAAD,CAfM,CAAT;AAiBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA,KAAjB;AAAwBD,IAAAA,WAAxB;AAAqCI,IAAAA;AAArC,GAAP;AACD,CAvBD;;AAyBA,eAAeP,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {storage} from '../firebase';\r\n\r\nconst useStorage = (image) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = storage.ref(`profileimages/${image.name}`);\r\n   \r\n    \r\n    storageRef.put(image).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storageRef.getDownloadURL();\r\n      setUrl(url);\r\n      console.log(url);\r\n    });\r\n  }, [image]);\r\n\r\n  return { progress, url, error, setProgress, setUrl };\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}