{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\ClientContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { object } from 'prop-types';\nimport React, { createContext, useState } from 'react';\nimport axios from '../../helpers/axios';\nimport { generatePublicUrl } from '../../urlConfig';\nimport { profileValidate } from '../validator/validate';\nimport { store } from '../firebase';\nexport var ClientContext = /*#__PURE__*/createContext();\n\nvar ClientContextProvider = function ClientContextProvider(props) {\n  _s();\n\n  var initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phoneNumber: '',\n    address: '',\n    formErrors: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '',\n      address: ''\n    }\n  };\n\n  var _useState = useState(initialState),\n      profile = _useState[0],\n      setProfile = _useState[1]; // .type !== Format[0] || Format[1] || Format[2]) && (profileImage.size <= Format[2] || profileImage.size <= Format[3])\n\n\n  var _useState2 = useState(),\n      profileImage = _useState2[0],\n      setProfileImage = _useState2[1];\n\n  var _useState3 = useState(),\n      temporaryImage = _useState3[0],\n      setTemporaryImage = _useState3[1];\n\n  var _useState4 = useState(),\n      form = _useState4[0],\n      setForm = _useState4[1];\n\n  var _useState5 = useState(),\n      count = _useState5[0],\n      setCount = _useState5[1];\n\n  var _useState6 = useState([]),\n      transaction = _useState6[0],\n      setTransaction = _useState6[1];\n\n  var _useState7 = useState(null),\n      error = _useState7[0],\n      setError = _useState7[1];\n\n  var _useState8 = useState(0),\n      progress = _useState8[0],\n      setProgress = _useState8[1];\n\n  var handleProfileChange = function handleProfileChange(e) {\n    e.preventDefault();\n\n    if (e.target.files) {\n      var selected = e.target.files[0];\n      var types = ['image/jpeg', 'image/png'];\n      var fileType = selected !== undefined ? types.includes(selected.type) : setError(\"unsupported image type* accepted image jpg/png\");\n      var FileSize = \"5000000\";\n      var filteredImageSize = fileType == true ? selected.size < FileSize : setError(\"file too large *5mb minimum\");\n      var hold = filteredImageSize == true && URL.createObjectURL(selected);\n      hold !== undefined && setTemporaryImage(hold);\n\n      if (filteredImageSize == true) {\n        var storageRef = store.ref(\"profileimages/\".concat(selected.name));\n        storageRef.put(selected).on('state_changed', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(snap) {\n            var newPercentage;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return snap.bytesTransferred / snap.totalBytes;\n\n                  case 2:\n                    _context.t0 = _context.sent;\n                    newPercentage = _context.t0 * 100;\n                    _context.next = 6;\n                    return setProgress(newPercentage);\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }(), /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err) {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return setError(err);\n\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }(), /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          var newUrl;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return storageRef.getDownloadURL();\n\n                case 2:\n                  newUrl = _context3.sent;\n                  _context3.next = 5;\n                  return setProfileImage(newUrl);\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        })));\n      }\n\n      URL.revokeObjectURL(selected);\n    }\n  };\n\n  var profileDetails = function profileDetails(e) {\n    e.preventDefault();\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    var _profile = _objectSpread({}, profile),\n        formErrors = _profile.formErrors;\n\n    profileValidate(name, value, formErrors);\n    return setProfile(_objectSpread(_objectSpread({}, profile), {}, _defineProperty({}, name, value)));\n  };\n\n  var handleProfileSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e) {\n      var token, id, res, updatedProfile, _profileImage, newProfile;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              e.preventDefault();\n              token = localStorage && localStorage.getItem('token');\n              id = profile.id;\n              _context4.next = 5;\n              return axios.post('/profile/update', form, {\n                headers: {\n                  'Authorization': token ? \"Bearer \".concat(token) : ''\n                }\n              });\n\n            case 5:\n              res = _context4.sent;\n              console.log(res);\n\n              if (res.status == 201) {\n                updatedProfile = res.data.updatedProfile;\n                _profileImage = updatedProfile.profileImage;\n                newProfile = generatePublicUrl(_profileImage);\n                setTemporaryImage(newProfile);\n              }\n\n              ;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleProfileSubmit(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleProfilePreview = function handleProfilePreview(e) {\n    e.preventDefault();\n\n    var _profile2 = _objectSpread({}, profile),\n        firstName = _profile2.firstName,\n        lastName = _profile2.lastName,\n        email = _profile2.email,\n        phoneNumber = _profile2.phoneNumber,\n        address = _profile2.address;\n\n    var form = new FormData();\n    profileImage !== undefined && form.append('profileImage', profileImage);\n    form.append('firstName', firstName);\n    form.append('email', email);\n    form.append('lastName', lastName);\n    form.append('phoneNumber', phoneNumber);\n    form.append('address', address);\n    setForm(form);\n    setCount('active');\n\n    var _iterator = _createForOfIteratorHelper(form.entries()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var pair = _step.value;\n        console.log([pair[0] + ',' + pair[1]]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      transaction: transaction,\n      setTransaction: setTransaction,\n      handleProfileChange: handleProfileChange,\n      handleProfilePreview: handleProfilePreview,\n      handleProfileSubmit: handleProfileSubmit,\n      profile: profile,\n      setProfile: setProfile,\n      setTemporaryImage: setTemporaryImage,\n      temporaryImage: temporaryImage,\n      profileDetails: profileDetails,\n      profileImage: profileImage,\n      setProfileImage: setProfileImage,\n      count: count,\n      setCount: setCount\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ClientContextProvider, \"w431zp33vOnHFVevWrNf0YSjA7g=\");\n\n_c = ClientContextProvider;\nexport default ClientContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientContextProvider\");","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/ClientContext.js"],"names":["object","React","createContext","useState","axios","generatePublicUrl","profileValidate","store","ClientContext","ClientContextProvider","props","initialState","firstName","lastName","email","phoneNumber","address","formErrors","profile","setProfile","profileImage","setProfileImage","temporaryImage","setTemporaryImage","form","setForm","count","setCount","transaction","setTransaction","error","setError","progress","setProgress","handleProfileChange","e","preventDefault","target","files","selected","types","fileType","undefined","includes","type","FileSize","filteredImageSize","size","hold","URL","createObjectURL","storageRef","ref","name","put","on","snap","bytesTransferred","totalBytes","newPercentage","err","getDownloadURL","newUrl","revokeObjectURL","profileDetails","value","handleProfileSubmit","token","localStorage","getItem","id","post","headers","res","console","log","status","updatedProfile","data","newProfile","handleProfilePreview","FormData","append","entries","pair","children"],"mappings":"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","sourcesContent":["import { object } from 'prop-types';\r\nimport React, { createContext, useState } from 'react';\r\nimport axios from '../../helpers/axios';\r\nimport {generatePublicUrl} from '../../urlConfig';\r\nimport { profileValidate } from '../validator/validate';\r\nimport {store} from '../firebase';\r\n\r\nexport const ClientContext = createContext();\r\n\r\nconst ClientContextProvider = (props) => {\r\n\r\n    const initialState = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '', \r\n      address: '',\r\n      formErrors: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: '', \r\n        address: ''\r\n      }\r\n    }\r\n\r\n    const [profile, setProfile] = useState(initialState);\r\n\r\n\r\n    // .type !== Format[0] || Format[1] || Format[2]) && (profileImage.size <= Format[2] || profileImage.size <= Format[3])\r\n\r\n    const [profileImage, setProfileImage] = useState()\r\n\r\n    const[temporaryImage, setTemporaryImage]= useState();\r\n    const[form, setForm] = useState();\r\n    const [count, setCount] = useState();\r\n    const [transaction, setTransaction] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const handleProfileChange = (e) => {\r\n        e.preventDefault();  \r\n       if(e.target.files){\r\n         let selected = e.target.files[0];\r\n        let types = ['image/jpeg', 'image/png'];\r\n       let fileType = selected !== undefined ? types.includes(selected.type): setError(\"unsupported image type* accepted image jpg/png\");\r\n          let FileSize = \"5000000\";\r\n         let filteredImageSize= fileType == true ? selected.size < FileSize : setError(\"file too large *5mb minimum\"); \r\n         let hold = filteredImageSize == true && (URL.createObjectURL(selected)); \r\n         hold !== undefined && setTemporaryImage(hold);\r\n          if(filteredImageSize == true ){\r\n          const storageRef = store.ref(`profileimages/${selected.name}`);\r\n            storageRef.put(selected).on('state_changed', \r\n            async (snap) => {\r\n              const newPercentage = await (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            await setProgress(newPercentage);\r\n            },  async (err) => {\r\n            await setError(err);\r\n            }, async () => {\r\n              const newUrl = await storageRef.getDownloadURL();\r\n            await setProfileImage(newUrl);\r\n            });\r\n          }\r\n         URL.revokeObjectURL(selected);   \r\n        }\r\n  };\r\n\r\n  const profileDetails = (e) => {\r\n    e.preventDefault();\r\n   \r\n    const {name, value} = e.target;\r\n    let {formErrors} = {...profile}\r\n\r\n    profileValidate(name, value, formErrors);\r\n      return setProfile({...profile,  [name]: value})  \r\n  }\r\n\r\n  const handleProfileSubmit = async(e) => {\r\n    e.preventDefault();\r\n    const token = localStorage && localStorage.getItem('token');\r\n    let id = profile.id;\r\n    let res = await axios.post('/profile/update', form, { headers: {\r\n      'Authorization': token ? `Bearer ${token}`: ''\r\n  }});\r\n    console.log(res);\r\n    if(res.status == 201){\r\n      const {updatedProfile} = res.data;\r\n      const {profileImage} = updatedProfile;\r\n      let newProfile = generatePublicUrl(profileImage);\r\n     setTemporaryImage(newProfile);\r\n    }\r\n    ;\r\n  }; \r\n\r\n  const handleProfilePreview = (e) => {\r\n    e.preventDefault();\r\n    const {firstName, lastName, email, phoneNumber, address} = {... profile}\r\n    let form = new FormData();\r\n    profileImage !== undefined && (form.append('profileImage', profileImage));\r\n    form.append('firstName', firstName);\r\n    form.append('email', email);\r\n    form.append('lastName', lastName);\r\n    form.append('phoneNumber',  phoneNumber);\r\n    form.append('address',  address);\r\n    setForm(form);\r\n    setCount('active');\r\n         for(let pair of form.entries()){\r\n          console.log([pair[0]+ ',' + pair[1]])\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n    return (\r\n        <ClientContext.Provider value={{ transaction, setTransaction, handleProfileChange, handleProfilePreview, handleProfileSubmit, profile, setProfile, setTemporaryImage, temporaryImage, profileDetails, profileImage, setProfileImage, count, setCount}}>\r\n            {props.children}\r\n        </ClientContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ClientContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}