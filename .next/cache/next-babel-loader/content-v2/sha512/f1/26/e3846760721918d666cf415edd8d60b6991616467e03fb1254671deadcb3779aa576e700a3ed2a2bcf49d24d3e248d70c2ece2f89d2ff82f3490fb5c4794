{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\fireBase\\\\ProgressBar.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { motion } from 'framer-motion';\nimport { store } from './firebase';\n\nconst ProgressBar = ({\n  image,\n  setImage\n}) => {\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: url,\n    1: setUrl\n  } = useState([]);\n  useEffect(() => {\n    // references\n    const storageRef = store.ref(`profileimages/${image.name}`);\n    storageRef.put(image).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const newUrl = await storageRef.getDownloadURL();\n      await setUrl([...url, newUrl]);\n    });\n  }, [image]);\n  let compile = [url];\n  image && console.log(compile);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"progress-bar\",\n    initial: {\n      width: 0\n    },\n    animate: {\n      width: progress + '%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/ProgressBar.js"],"names":["React","useState","useEffect","useContext","motion","store","ProgressBar","image","setImage","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","newUrl","getDownloadURL","compile","console","log","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAAQC,KAAR,QAAoB,YAApB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAC3C,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACY,GAAD;AAAA,OAAMC;AAAN,MAAgBb,QAAQ,CAAC,EAAD,CAA9B;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMa,UAAU,GAAGV,KAAK,CAACW,GAAN,CAAW,iBAAgBT,KAAK,CAACU,IAAK,EAAtC,CAAnB;AACAF,IAAAA,UAAU,CAACG,GAAX,CAAeX,KAAf,EAAsBY,EAAtB,CAAyB,eAAzB,EAA2CC,IAAD,IAAU;AAClD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAb,MAAAA,WAAW,CAACW,UAAD,CAAX;AACD,KAHD,EAGIG,GAAD,IAAS;AACVZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AACD,KALD,EAKG,YAAY;AACb,YAAMC,MAAM,GAAG,MAAMV,UAAU,CAACW,cAAX,EAArB;AACD,YAAMZ,MAAM,CAAC,CAAC,GAAGD,GAAJ,EAASY,MAAT,CAAD,CAAZ;AACA,KARD;AASD,GAZQ,EAYN,CAAClB,KAAD,CAZM,CAAT;AAeI,MAAIoB,OAAO,GAAG,CAAEd,GAAF,CAAd;AAEAN,EAAAA,KAAK,IAAKqB,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAAV;AAUJ,sBACE,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,cAAtB;AACE,IAAA,OAAO,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,KAAK,EAAErB,QAAQ,GAAG;AAApB;AAFX;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzCD;;AA2CA,eAAeH,WAAf","sourcesContent":["import React, {  useState, useEffect, useContext } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {store} from './firebase';\r\n\r\n\r\nconst ProgressBar = ({ image, setImage }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState([]);\r\n  \r\n    \r\n   \r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = store.ref(`profileimages/${image.name}`);\r\n    storageRef.put(image).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const newUrl = await storageRef.getDownloadURL();\r\n     await setUrl([...url, newUrl]);\r\n    });\r\n  }, [image]);\r\n\r\n\r\n      let compile = [ url];\r\n\r\n      image && (console.log(compile));\r\n      \r\n    \r\n\r\n  \r\n   \r\n \r\n     \r\n \r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}