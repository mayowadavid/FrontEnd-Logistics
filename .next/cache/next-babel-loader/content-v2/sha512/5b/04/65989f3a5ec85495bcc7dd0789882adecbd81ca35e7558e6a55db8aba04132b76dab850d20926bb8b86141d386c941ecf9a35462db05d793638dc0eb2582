{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\fireBase\\\\ProgressBar.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { motion } from 'framer-motion';\nimport { ClientContext } from '../context/ClientContext';\n\nconst ProgressBar = ({\n  image,\n  setImage\n}) => {\n  const {\n    url,\n    progress,\n    setUrl\n  } = useContext(ClientContext);\n  const {\n    0: check,\n    1: setCheck\n  } = useState([]);\n  useEffect(() => {\n    // references\n    if (image.length == check.length) {\n      setImage(null);\n    } else {\n      for (let img of image) {\n        checkMate(img);\n      }\n    }\n  }, []);\n\n  const checkMate = img => {\n    setUrl(img);\n  };\n\n  image.length !== check.length ? setCheck([...check, {\n    url\n  }]) : '';\n  console.log(check);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"progress-bar\",\n    initial: {\n      width: 0\n    },\n    animate: {\n      width: progress + '%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/ProgressBar.js"],"names":["React","useState","useEffect","useContext","motion","ClientContext","ProgressBar","image","setImage","url","progress","setUrl","check","setCheck","length","img","checkMate","console","log","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AACzC,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA;AAAhB,MAA0BR,UAAU,CAACE,aAAD,CAA1C;AACA,QAAK;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,EAAD,CAAjC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AAEA,QAAGK,KAAK,CAACO,MAAN,IAAgBF,KAAK,CAACE,MAAzB,EAAgC;AAC5BN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAEK;AACH,WAAK,IAAIO,GAAT,IAAgBR,KAAhB,EAAsB;AACpBS,QAAAA,SAAS,CAACD,GAAD,CAAT;AACF;AACD;AACF,GAVM,EAUJ,EAVI,CAAT;;AAYF,QAAMC,SAAS,GAAID,GAAD,IAAS;AACvBJ,IAAAA,MAAM,CAACI,GAAD,CAAN;AACH,GAFD;;AAIAR,EAAAA,KAAK,CAACO,MAAN,KAAiBF,KAAK,CAACE,MAAvB,GAAgCD,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAACH,IAAAA;AAAD,GAAX,CAAD,CAAxC,GAA+D,EAA/D;AACGQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAGH,sBACE,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,cAAtB;AACE,IAAA,OAAO,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,KAAK,EAAET,QAAQ,GAAG;AAApB;AAFX;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhCD;;AAkCA,eAAeJ,WAAf","sourcesContent":["import React, {  useState, useEffect, useContext } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { ClientContext } from '../context/ClientContext';\r\n\r\nconst ProgressBar = ({ image, setImage }) => {\r\n    const {url, progress, setUrl} = useContext(ClientContext);\r\n    const[check, setCheck] = useState([]);\r\n    \r\n   \r\n\r\n    useEffect(() => {\r\n        // references\r\n        \r\n        if(image.length == check.length){\r\n            setImage(null);                                                \r\n        }else{\r\n          for( let img of image){\r\n            checkMate(img); \r\n         }\r\n        }\r\n      }, []); \r\n\r\n  const checkMate = (img) => {\r\n      setUrl(img);\r\n  }\r\n    \r\n  image.length !== check.length ?(setCheck([...check, {url}]) ): ''\r\n     console.log(check);\r\n \r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}