{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\ClientContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { object } from 'prop-types';\nimport React, { createContext, useState } from 'react';\nimport axios from '../../helpers/axios';\nimport { generatePublicUrl } from '../../urlConfig';\nimport { profileValidate } from '../validator/validate';\nexport const ClientContext = /*#__PURE__*/createContext();\n\nconst ClientContextProvider = props => {\n  const initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phoneNumber: '',\n    address: '',\n    formErrors: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '',\n      address: ''\n    }\n  };\n  const {\n    0: profile,\n    1: setProfile\n  } = useState(initialState); // .type !== Format[0] || Format[1] || Format[2]) && (profileImage.size <= Format[2] || profileImage.size <= Format[3])\n\n  const {\n    0: profileImage,\n    1: setProfileImage\n  } = useState();\n  const {\n    0: temporaryImage,\n    1: setTemporaryImage\n  } = useState();\n  const {\n    0: form,\n    1: setForm\n  } = useState();\n  const {\n    0: count,\n    1: setCount\n  } = useState();\n  const {\n    0: transaction,\n    1: setTransaction\n  } = useState();\n\n  const handleProfileChange = e => {\n    e.preventDefault();\n\n    if (e.target.files) {\n      setProfileImage(e.target.files[0]);\n      let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\n      let hold = URL.createObjectURL(e.target.files[0]);\n      setTemporaryImage(hold);\n      URL.revokeObjectURL(e.target.files[0]);\n    }\n  };\n\n  const formValid = formErrors => {\n    let valid = true;\n    object.values(formErrors).forEach(val => {\n      val.length > 0 && (valid = false);\n    });\n  };\n\n  const profileDetails = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n\n    let {\n      formErrors\n    } = _objectSpread({}, profile);\n\n    profileValidate(name, value, formErrors);\n    return setProfile(_objectSpread(_objectSpread({}, profile), {}, {\n      [name]: value\n    }));\n  };\n\n  const handleProfileSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage && localStorage.getItem('token');\n    let id = profile.id;\n    let res = await axios.post('/profile/' + id, form, {\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : ''\n      }\n    });\n    console.log(res);\n\n    if (res.status == 201) {\n      const {\n        updatedProfile\n      } = res.data;\n      const {\n        profileImage\n      } = updatedProfile;\n      let newProfile = generatePublicUrl(profileImage);\n      setTemporaryImage(newProfile);\n    }\n\n    ;\n  };\n\n  const handleProfilePreview = e => {\n    e.preventDefault();\n\n    const {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      address\n    } = _objectSpread({}, profile);\n\n    let form = new FormData();\n    form.append('profileImage', profileImage);\n    form.append('firstName', firstName);\n    form.append('email', email);\n    form.append('lastName', lastName);\n    form.append('phoneNumber', phoneNumber);\n    form.append('address', address);\n    setForm(form);\n    setCount('active');\n\n    for (let pair of form.entries()) {\n      console.log([pair[0] + ',' + pair[1]]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      transaction,\n      setTransaction,\n      handleProfileChange,\n      handleProfilePreview,\n      handleProfileSubmit,\n      profile,\n      setProfile,\n      setTemporaryImage,\n      temporaryImage,\n      profileDetails,\n      setProfileImage,\n      count,\n      setCount\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ClientContextProvider;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/ClientContext.js"],"names":["object","React","createContext","useState","axios","generatePublicUrl","profileValidate","ClientContext","ClientContextProvider","props","initialState","firstName","lastName","email","phoneNumber","address","formErrors","profile","setProfile","profileImage","setProfileImage","temporaryImage","setTemporaryImage","form","setForm","count","setCount","transaction","setTransaction","handleProfileChange","e","preventDefault","target","files","Format","hold","URL","createObjectURL","revokeObjectURL","formValid","valid","values","forEach","val","length","profileDetails","name","value","handleProfileSubmit","token","localStorage","getItem","id","res","post","headers","console","log","status","updatedProfile","data","newProfile","handleProfilePreview","FormData","append","pair","entries","children"],"mappings":"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","sourcesContent":["import { object } from 'prop-types';\r\nimport React, { createContext, useState } from 'react';\r\nimport axios from '../../helpers/axios';\r\nimport {generatePublicUrl} from '../../urlConfig';\r\nimport { profileValidate } from '../validator/validate';\r\n\r\nexport const ClientContext = createContext();\r\n\r\nconst ClientContextProvider = (props) => {\r\n\r\n    const initialState = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '', \r\n      address: '',\r\n      formErrors: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: '', \r\n        address: ''\r\n      }\r\n    }\r\n\r\n    const [profile, setProfile] = useState(initialState);\r\n\r\n\r\n    // .type !== Format[0] || Format[1] || Format[2]) && (profileImage.size <= Format[2] || profileImage.size <= Format[3])\r\n\r\n    const [profileImage, setProfileImage] = useState()\r\n\r\n    const[temporaryImage, setTemporaryImage]= useState();\r\n    const[form, setForm] = useState();\r\n    const [count, setCount] = useState();\r\n    const [transaction, setTransaction] = useState();\r\n    \r\n\r\n    const handleProfileChange = (e) => {\r\n        e.preventDefault();  \r\n        \r\n        if(e.target.files){\r\n         setProfileImage(e.target.files[0])\r\n          let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\r\n         let hold = URL.createObjectURL(e.target.files[0]);\r\n         setTemporaryImage(hold);\r\n         URL.revokeObjectURL(e.target.files[0]);   \r\n      }\r\n  };\r\n\r\n  const formValid = formErrors => {\r\n    let valid = true;\r\n\r\n    object.values(formErrors).forEach(val => {\r\n      val.length > 0 && (valid = false)\r\n    })\r\n  }\r\n\r\n  const profileDetails = (e) => {\r\n    e.preventDefault();\r\n   \r\n    const {name, value} = e.target;\r\n    let {formErrors} = {...profile}\r\n\r\n    profileValidate(name, value, formErrors);\r\n      return setProfile({...profile,  [name]: value})  \r\n  }\r\n\r\n  const handleProfileSubmit = async(e) => {\r\n    e.preventDefault();\r\n    const token = localStorage && localStorage.getItem('token');\r\n    let id = profile.id;\r\n    let res = await axios.post('/profile/' + id, form, { headers: {\r\n      'Authorization': token ? `Bearer ${token}`: ''\r\n  }});\r\n    console.log(res);\r\n    if(res.status == 201){\r\n      const {updatedProfile} = res.data;\r\n      const {profileImage} = updatedProfile;\r\n      let newProfile = generatePublicUrl(profileImage);\r\n     setTemporaryImage(newProfile);\r\n    }\r\n    ;\r\n  }; \r\n\r\n  const handleProfilePreview = (e) => {\r\n    e.preventDefault();\r\n    const {firstName, lastName, email, phoneNumber, address} = {... profile}\r\n    let form = new FormData();\r\n    form.append('profileImage', profileImage)\r\n    form.append('firstName', firstName);\r\n    form.append('email', email);\r\n    form.append('lastName', lastName);\r\n    form.append('phoneNumber',  phoneNumber);\r\n    form.append('address',  address);\r\n    setForm(form);\r\n    setCount('active');\r\n         for(let pair of form.entries()){\r\n          console.log([pair[0]+ ',' + pair[1]])\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n    return (\r\n        <ClientContext.Provider value={{transaction, setTransaction, handleProfileChange, handleProfilePreview, handleProfileSubmit, profile, setProfile, setTemporaryImage, temporaryImage, profileDetails, setProfileImage, count, setCount}}>\r\n            {props.children}\r\n        </ClientContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ClientContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}