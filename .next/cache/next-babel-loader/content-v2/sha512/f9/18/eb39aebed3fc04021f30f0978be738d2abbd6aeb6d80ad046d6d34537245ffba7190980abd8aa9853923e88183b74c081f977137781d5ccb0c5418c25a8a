{"ast":null,"code":"import _regeneratorRuntime from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { storage } from '../firebase';\n\nvar useStorage = function useStorage(file) {\n  _s();\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(null),\n      url = _useState3[0],\n      setUrl = _useState3[1];\n\n  useEffect(function () {\n    // references\n    var storageRef = storage.ref(\"profileimages/\".concat(image.name));\n    storageRef.put(image).on('state_changed', function (snap) {\n      var percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, function (err) {\n      setError(err);\n    }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return storageRef.getDownloadURL();\n\n            case 2:\n              url = _context.sent;\n              setUrl(url);\n              console.log(url);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n  }, [image]);\n  return {\n    progress: progress,\n    url: url,\n    error: error\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/storageHook.js"],"names":["useState","useEffect","storage","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","image","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","console","log"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAAA;;AAAA,kBACKJ,QAAQ,CAAC,CAAD,CADb;AAAA,MACpBK,QADoB;AAAA,MACVC,WADU;;AAAA,mBAEDN,QAAQ,CAAC,IAAD,CAFP;AAAA,MAEpBO,KAFoB;AAAA,MAEbC,QAFa;;AAAA,mBAGLR,QAAQ,CAAC,IAAD,CAHH;AAAA,MAGpBS,GAHoB;AAAA,MAGfC,MAHe;;AAK3BT,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMU,UAAU,GAAGT,OAAO,CAACU,GAAR,yBAA6BC,KAAK,CAACC,IAAnC,EAAnB;AAGAH,IAAAA,UAAU,CAACI,GAAX,CAAeF,KAAf,EAAsBG,EAAtB,CAAyB,eAAzB,EAA0C,UAACC,IAAD,EAAU;AAClD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAd,MAAAA,WAAW,CAACY,UAAD,CAAX;AACD,KAHD,EAGG,UAACG,GAAD,EAAS;AACVb,MAAAA,QAAQ,CAACa,GAAD,CAAR;AACD,KALD,wEAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBV,UAAU,CAACW,cAAX,EADjB;;AAAA;AACKb,cAAAA,GADL;AAEDC,cAAAA,MAAM,CAACD,GAAD,CAAN;AACAc,cAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;;AAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALH;AAUD,GAfQ,EAeN,CAACI,KAAD,CAfM,CAAT;AAiBA,SAAO;AAAER,IAAAA,QAAQ,EAARA,QAAF;AAAYI,IAAAA,GAAG,EAAHA,GAAZ;AAAiBF,IAAAA,KAAK,EAALA;AAAjB,GAAP;AACD,CAvBD;;GAAMJ,U;;AAyBN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {storage} from '../firebase';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = storage.ref(`profileimages/${image.name}`);\r\n   \r\n    \r\n    storageRef.put(image).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storageRef.getDownloadURL();\r\n      setUrl(url);\r\n      console.log(url);\r\n    });\r\n  }, [image]);\r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}