{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\addRequest.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { upload } from \"../svg\";\n\nconst AddRequest = () => {\n  const {\n    0: photo,\n    1: setPhoto\n  } = useState();\n  const initialState = [{\n    sender: {\n      firstName: '',\n      phoneNumber1: '',\n      phoneNumber2: ''\n    }\n  }, {\n    receiver: {\n      firstName: '',\n      phoneNumber1: '',\n      phoneNumber2: ''\n    }\n  }, {\n    tagName: ''\n  }, {\n    cartons: ''\n  }, {\n    otherItems: true\n  }, {\n    itemsWorth: ''\n  }, {\n    deliveryLocations: ''\n  }, {\n    descriptions: ''\n  }];\n  const [input, setInput] = initialState;\n\n  const handleChange = e => {\n    if (e) {\n      const newInput = _objectSpread(_objectSpread({}, input), {}, {\n        [e.target.name]: e.target.value\n      });\n\n      return setInput(newInput);\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n  };\n\n  const photoChange = e => {\n    let photoFile = e.target.files;\n    let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\n    console.log(photoFile);\n    let index = Array.from(photoFile).filter(x => (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]));\n\n    if (index) {\n      console.log(input.sender.firstName);\n      const photoUrl = Array.from(index).map(file => URL.createObjectURL(file));\n      let prev = [];\n      setPhoto(prev.concat(photoUrl));\n      Array.from(photoFile).map(file => URL.revokeObjectURL(file));\n    }\n  };\n\n  const photoSource = source => {\n    return source.map(file => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: file\n    }, uuidv4(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: photo == undefined ? /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: photoChange,\n          id: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: [upload(), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Upload avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 45\n      }, this) : photoSource(photo)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n};\n\nexport default AddRequest;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/addRequest.js"],"names":["React","useState","v4","uuidv4","upload","AddRequest","photo","setPhoto","initialState","sender","firstName","phoneNumber1","phoneNumber2","receiver","tagName","cartons","otherItems","itemsWorth","deliveryLocations","descriptions","input","setInput","handleChange","e","newInput","target","name","value","handleFormSubmit","preventDefault","photoChange","photoFile","files","Format","console","log","index","Array","from","filter","x","type","size","photoUrl","map","file","URL","createObjectURL","prev","concat","revokeObjectURL","photoSource","source","undefined"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { v4 as uuidv4} from 'uuid';\r\nimport {upload} from \"../svg\";\r\nconst AddRequest = () => {\r\n    const [photo, setPhoto] = useState();\r\n\r\n    const initialState =[\r\n        {sender: {\r\n             firstName: '',\r\n             phoneNumber1: '',\r\n             phoneNumber2: '' }},\r\n        {receiver: {\r\n             firstName: '',\r\n             phoneNumber1: '',\r\n             phoneNumber2: '' }},\r\n        {tagName: ''},\r\n        {cartons: ''},\r\n        {otherItems: true},\r\n        {itemsWorth: ''},\r\n        {deliveryLocations: ''},\r\n        {descriptions: ''}\r\n     ];\r\n\r\n     const[input, setInput] = (initialState);\r\n\r\n     const handleChange = (e) => {\r\n         if(e){\r\n         const newInput = { ...input, [e.target.name]: e.target.value };\r\n         return setInput(newInput);\r\n         }\r\n         \r\n     };\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n    const photoChange = (e) => {\r\n\r\n        let photoFile = e.target.files;\r\n\r\n         let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\r\n         console.log(photoFile);\r\n\r\n         let index = Array.from(photoFile).filter(x=> (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]) )\r\n\r\n         if(index){\r\n            console.log(input.sender.firstName);\r\n                const photoUrl = Array.from(index).map((file)=> URL.createObjectURL(file));\r\n                let prev = [];\r\n                setPhoto( prev.concat(photoUrl));\r\n                 Array.from(photoFile).map((file)=> URL.revokeObjectURL(file));                                                 \r\n      }\r\n    }\r\n\r\n    \r\n\r\n    const photoSource = (source) => {\r\n        return source.map((file) =>\r\n            <img src={file} key={uuidv4()}/>)\r\n    } \r\n    \r\n   \r\n    \r\n    return (\r\n          <>\r\n              <div className=\"photo\">\r\n              \r\n                    { photo == undefined ? (<form> \r\n                            <input type=\"file\" multiple onChange={photoChange} id=\"file\" />\r\n                            <label htmlFor=\"file\">\r\n                                {upload()}<h4>Upload avatar</h4>\r\n                            </label>\r\n                </form>) : (photoSource(photo))\r\n                         \r\n                    }\r\n              </div>\r\n              \r\n          {/* <form onSubmit={handleFormSubmit} >\r\n              <div className=\"sender-container\" >\r\n              <h3>Sender Information</h3>\r\n                  <div className=\"sender\">\r\n                  <p>\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" onChange={ handleChange } id=\"firstName\"  name=\"firstname\" value={input.sender.firstName} placeholder=\"Your name..\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"PhoneNumber1\">Phone Number1</label>\r\n                    <input type=\"number\" id=\"phoneNumber1\" onChange={handleChange} name=\"phoneNumber1\" value={input.sender.phoneNumber1}  placeholder=\"Your PhoneNumber..\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"phoneNumber2\">Phone Number 2</label>\r\n                    <input type=\"number\" id=\"phoneNumber2\" onChange={handleChange} name=\"phoneNumber2\" value={input.sender.phoneNumber2}  placeholder=\"Your phoneNumber2..\"/>\r\n                    </p>\r\n                  </div>\r\n              </div>\r\n              <div className=\"receiver-container\">\r\n                 <h3>Receiver Information</h3>\r\n                  <div  className=\"receiver\">\r\n                    <p>\r\n                    <label htmlFor=\"firstname\">First Name</label>\r\n                    <input type=\"text\" id=\"firstname\" onChange={handleChange} name=\"firstname\" value={input[1].receiver.firstName} placeholder=\"Your name..\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"PhoneNumber1\">Phone Number1</label>\r\n                    <input type=\"number\" id=\"phoneNumber1\" onChange={handleChange} name=\"phoneNumber1\" value={input[1].receiver.phoneNumber1} placeholder=\"Your PhoneNumber..\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"phoneNumber2\">Phone Number 2</label>\r\n                    <input type=\"number\" id=\"phoneNumber2\" onChange={handleChange} name=\"phoneNumber2\" value={input[1].receiver.phoneNumber2} placeholder=\"Your phoneNumber2..\"/>\r\n                    </p>\r\n                  </div>\r\n              </div>\r\n              <div className=\"others\">\r\n                    <p>\r\n                    <label htmlFor=\"tagName\">Tag Name</label>\r\n                    <input type=\"text\" id=\"tagName\" onChange={handleChange} name=\"tagName\" value={input[2].tagName} placeholder=\"Tag name..\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"Cartons\">Number of cartons</label>\r\n                    <input type=\"number\" id=\"Cartons\" onChange={handleChange} name=\"cartons\" value={input[3].cartons} placeholder=\"Cartons\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"otherItems\">Other Items</label>\r\n                    <input type=\"checkbox\" id=\"otherItems\" onChange={handleChange} name=\"otherItems\" value={input[4].otherItems} placeholder=\"otherItems\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"itemsWorth\">Items Worth</label>\r\n                    <input type=\"text\" id=\"itemsWorth\" onChange={handleChange} name=\"itemsWorth\" value={input[5].itemsWorth} placeholder=\"itemsWorth\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"deliveryLocation\">Delivery Locations</label>\r\n                    <input type=\"text\" id=\"deliveryLocation\" onChange={handleChange} name=\"deliveryLocations\" value={input[6].deliveryLocations}  placeholder=\"deliveryLocation\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"description\">Descriptions</label>\r\n                    <input type=\"text\" id=\"descriptions\" onChange={handleChange} name=\"descriptions\" value={input.descriptions}  placeholder=\"descriptions\"/>\r\n                    </p>\r\n              </div>  \r\n              <div className=\"submit\">\r\n                 <input className=\"submit\" type=\"submit\" value=\"preview\"/>\r\n              </div>\r\n          </form> */}\r\n          \r\n        </>\r\n    )}\r\n    \r\nexport default AddRequest;"]},"metadata":{},"sourceType":"module"}