{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\fireBase\\\\ProgressBar.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport useStorage from './storageHook';\nimport { motion } from 'framer-motion';\nimport { ClientContext } from '../context/ClientContext';\n\nvar ProgressBar = function ProgressBar(_ref) {\n  _s();\n\n  var image = _ref.image,\n      setImage = _ref.setImage;\n\n  var _useContext = useContext(ClientContext),\n      url = _useContext.url,\n      progress = _useContext.progress;\n\n  console.log(url);\n\n  if (image.length) {\n    var _iterator = _createForOfIteratorHelper(image),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var img = _step.value;\n        useStorage(img);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"progress-bar\",\n    initial: {\n      width: 0\n    },\n    animate: {\n      width: progress + '%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProgressBar, \"gEBhJqa6ECXam+fAP40hxsCvVJY=\", false, function () {\n  return [useStorage];\n});\n\n_c = ProgressBar;\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/fireBase/ProgressBar.js"],"names":["React","useState","useEffect","useContext","useStorage","motion","ClientContext","ProgressBar","image","setImage","url","progress","console","log","length","img","width"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAyB;AAAA;;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACjBN,UAAU,CAACG,aAAD,CADO;AAAA,MAClCI,GADkC,eAClCA,GADkC;AAAA,MAC7BC,QAD6B,eAC7BA,QAD6B;;AAGzCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AAIA,MAAGF,KAAK,CAACM,MAAT,EAAgB;AAAA,+CAEGN,KAFH;AAAA;;AAAA;AAEb,0DAAsB;AAAA,YAAbO,GAAa;AACpBX,QAAAA,UAAU,CAACW,GAAD,CAAV;AACA;AAJW;AAAA;AAAA;AAAA;AAAA;AAKhB;;AAKF,sBACE,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,cAAtB;AACE,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,KAAK,EAAEL,QAAQ,GAAG;AAApB;AAFX;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAvBD;;GAAMJ,W;UAUGH,U;;;KAVHG,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React, {  useState, useEffect, useContext } from 'react';\r\nimport useStorage from './storageHook';\r\nimport { motion } from 'framer-motion';\r\nimport { ClientContext } from '../context/ClientContext';\r\n\r\nconst ProgressBar = ({ image, setImage }) => {\r\n    const {url, progress} = useContext(ClientContext);\r\n    \r\n    console.log(url);\r\n\r\n      \r\n\r\n    if(image.length){\r\n\r\n       for( let img of image){\r\n         useStorage(img);\r\n        }                                                   \r\n   }\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}