{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"H:/G4 Logistics/FrontEnd/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\addRequest.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { upload } from \"../svg\";\n\nvar AddRequest = function AddRequest() {\n  _s();\n\n  var initialState = {\n    sender: {\n      firstName: '',\n      phoneNumber1: '',\n      phoneNumber2: ''\n    },\n    receiver: {\n      firstName: '',\n      phoneNumber1: '',\n      phoneNumber2: ''\n    },\n    tagName: '',\n    cartons: '',\n    otherItems: true,\n    itemsWorth: '',\n    deliveryLocations: '',\n    descriptions: ''\n  };\n\n  var _useState = useState(initialState),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    if (e) {\n      var newInput = _objectSpread(_objectSpread({}, input), {}, _defineProperty({}, e.target.name, e.target.value));\n\n      return setInput(newInput);\n    }\n  };\n\n  var handleFormSubmit = function handleFormSubmit(e) {\n    e.preventDefault();\n  };\n\n  var _useState2 = useState(),\n      photo = _useState2[0],\n      setPhoto = _useState2[1];\n\n  var photoChange = function photoChange(e) {\n    var photoFile = e.target.files;\n    var Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\n    var index = Array.from(photoFile).filter(function (x) {\n      return (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]);\n    });\n\n    if (index) {\n      console.log(input.sender);\n      var photoUrl = Array.from(index).map(function (file) {\n        return URL.createObjectURL(file);\n      });\n      var prev = [];\n      setPhoto(prev.concat(photoUrl));\n      Array.from(photoFile).map(function (file) {\n        return URL.revokeObjectURL(file);\n      });\n    }\n  };\n\n  var photoSource = function photoSource(source) {\n    return source.map(function (file) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: photo == undefined ? /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: photoChange,\n          id: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: [upload(), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Upload avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 43\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 45\n      }, _this) : photoSource(photo)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, _this)\n  }, void 0, false);\n};\n\n_s(AddRequest, \"rpmPVeaodpjgD01728ybXY+DJpg=\");\n\n_c = AddRequest;\nexport default AddRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRequest\");","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/addRequest.js"],"names":["React","useState","v4","uuidv4","upload","AddRequest","initialState","sender","firstName","phoneNumber1","phoneNumber2","receiver","tagName","cartons","otherItems","itemsWorth","deliveryLocations","descriptions","input","setInput","handleChange","e","newInput","target","name","value","handleFormSubmit","preventDefault","photo","setPhoto","photoChange","photoFile","files","Format","index","Array","from","filter","x","type","size","console","log","photoUrl","map","file","URL","createObjectURL","prev","concat","revokeObjectURL","photoSource","source","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { v4 as uuidv4} from 'uuid';\r\nimport {upload} from \"../svg\";\r\n\r\nconst AddRequest = () => {\r\n\r\n    const initialState =\r\n        {sender: {\r\n            firstName: '',\r\n            phoneNumber1: '',\r\n            phoneNumber2: '' },\r\n       receiver: {\r\n               firstName: '',\r\n               phoneNumber1: '',\r\n               phoneNumber2: '' },\r\n       tagName: '',\r\n       cartons: '',\r\n       otherItems: true,\r\n       itemsWorth: '',\r\n       deliveryLocations: '',\r\n       descriptions: ''\r\n        };\r\n     \r\n    const [input, setInput] = useState(initialState);\r\n\r\n    \r\n    \r\n     const handleChange = (e) => {\r\n         if(e){\r\n         const newInput = { ...input, [e.target.name]: e.target.value };\r\n         return setInput(newInput);\r\n         }\r\n     }; \r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    const [photo, setPhoto] = useState();\r\n\r\n    const photoChange = (e) => {\r\n        \r\n        let photoFile = e.target.files;\r\n\r\n         let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\r\n\r\n         let index = Array.from(photoFile).filter(x=> (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]) )\r\n\r\n         if(index){\r\n            console.log(input.sender);\r\n                const photoUrl = Array.from(index).map((file)=> URL.createObjectURL(file));\r\n                let prev = [];\r\n                setPhoto( prev.concat(photoUrl));\r\n                 Array.from(photoFile).map((file)=> URL.revokeObjectURL(file));                                                 \r\n      }\r\n    }\r\n\r\n    const photoSource = (source) => {\r\n        return source.map((file) =>\r\n            <img src={file} key={uuidv4()}/>)\r\n    } \r\n    \r\n   \r\n    \r\n    return (\r\n          <>\r\n              <div className=\"photo\">\r\n              \r\n                    { photo == undefined ? (<form> \r\n                            <input type=\"file\" multiple onChange={photoChange} id=\"file\" />\r\n                            <label htmlFor=\"file\">\r\n                                {upload()}<h4>Upload avatar</h4>\r\n                            </label>\r\n                </form>) : (photoSource(photo))\r\n                         \r\n                    }\r\n              </div>\r\n              \r\n          {/* <form onSubmit={handleFormSubmit} >\r\n              <div className=\"sender-container\" >\r\n              <h3>Sender Information</h3>\r\n                  <div className=\"sender\">\r\n                  <p>\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" onChange={ handleChange } id=\"firstName\"  name=\"firstname\" value={input.sender.firstName} placeholder=\"Your name..\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"PhoneNumber1\">Phone Number1</label>\r\n                    <input type=\"number\" id=\"phoneNumber1\" onChange={handleChange} name=\"phoneNumber1\" value={input.sender.phoneNumber1}  placeholder=\"Your PhoneNumber..\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"phoneNumber2\">Phone Number 2</label>\r\n                    <input type=\"number\" id=\"phoneNumber2\" onChange={handleChange} name=\"phoneNumber2\" value={input.sender.phoneNumber2}  placeholder=\"Your phoneNumber2..\"/>\r\n                    </p>\r\n                  </div>\r\n              </div>\r\n              <div className=\"receiver-container\">\r\n                 <h3>Receiver Information</h3>\r\n                  <div  className=\"receiver\">\r\n                    <p>\r\n                    <label htmlFor=\"firstname\">First Name</label>\r\n                    <input type=\"text\" id=\"firstname\" onChange={handleChange} name=\"firstname\" value={input.receiver.firstName} placeholder=\"Your name..\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"PhoneNumber1\">Phone Number1</label>\r\n                    <input type=\"number\" id=\"phoneNumber1\" onChange={handleChange} name=\"phoneNumber1\" value={input.receiver.phoneNumber1} placeholder=\"Your PhoneNumber..\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"phoneNumber2\">Phone Number 2</label>\r\n                    <input type=\"number\" id=\"phoneNumber2\" onChange={handleChange} name=\"phoneNumber2\" value={input.receiver.phoneNumber2} placeholder=\"Your phoneNumber2..\"/>\r\n                    </p>\r\n                  </div>\r\n              </div>\r\n              <div className=\"others\">\r\n                    <p>\r\n                    <label htmlFor=\"tagName\">Tag Name</label>\r\n                    <input type=\"text\" id=\"tagName\" onChange={handleChange} name=\"tagName\" value={input.tagName} placeholder=\"Tag name..\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"Cartons\">Number of cartons</label>\r\n                    <input type=\"number\" id=\"Cartons\" onChange={handleChange} name=\"cartons\" value={input.cartons} placeholder=\"Cartons\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"otherItems\">Other Items</label>\r\n                    <input type=\"checkbox\" id=\"otherItems\" onChange={handleChange} name=\"otherItems\" value={input.otherItems} placeholder=\"otherItems\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"itemsWorth\">Items Worth</label>\r\n                    <input type=\"text\" id=\"itemsWorth\" onChange={handleChange} name=\"itemsWorth\" value={input.itemsWorth} placeholder=\"itemsWorth\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"deliveryLocation\">Delivery Locations</label>\r\n                    <input type=\"text\" id=\"deliveryLocation\" onChange={handleChange} name=\"deliveryLocations\" value={input.deliveryLocations}  placeholder=\"deliveryLocation\"/>\r\n                    </p>\r\n                    <p>\r\n                    <label htmlFor=\"description\">Descriptions</label>\r\n                    <input type=\"text\" id=\"descriptions\" onChange={handleChange} name=\"descriptions\" value={input.descriptions}  placeholder=\"descriptions\"/>\r\n                    </p>\r\n              </div>  \r\n              <div className=\"submit\">\r\n                 <input className=\"submit\" type=\"submit\" value=\"preview\"/>\r\n              </div>\r\n          </form> */}\r\n          \r\n        </>\r\n    )}\r\n    \r\nexport default AddRequest;"]},"metadata":{},"sourceType":"module"}