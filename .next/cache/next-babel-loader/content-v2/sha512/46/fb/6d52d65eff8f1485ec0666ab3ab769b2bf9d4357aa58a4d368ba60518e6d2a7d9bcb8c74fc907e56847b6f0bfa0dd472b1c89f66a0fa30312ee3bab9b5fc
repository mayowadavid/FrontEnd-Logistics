{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\RequestContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from '../../helpers/axios';\nimport { generatePublicUrl } from '../../urlConfig';\nimport { gallery, message, offBack, contact } from \"../../svg\";\nimport { requestValidate } from '../validator/validate';\nexport const RequestContext = /*#__PURE__*/createContext();\n\nconst RequestContextProvider = props => {\n  const initialState = {\n    sender: {\n      firstName: '',\n      phoneNumber1: '',\n      phoneNumber2: ''\n    },\n    receiver: {\n      firstName: '',\n      phoneNumber1: '',\n      phoneNumber2: ''\n    },\n    cartons: '',\n    createdAt: '',\n    deliveryLocations: '',\n    descriptions: '',\n    itemsWorth: '',\n    otherItems: true,\n    requestImages: [{\n      img: '',\n      _id: ''\n    }],\n    status: '',\n    tagName: '',\n    amount: '',\n    _id: '',\n    formErrors: {\n      sender: {\n        firstName: '',\n        phoneNumber1: '',\n        phoneNumber2: ''\n      },\n      receiver: {\n        firstName: '',\n        phoneNumber1: '',\n        phoneNumber2: ''\n      },\n      cartons: '',\n      createdAt: '',\n      deliveryLocations: '',\n      descriptions: '',\n      itemsWorth: '',\n      otherItems: true,\n      requestImages: '',\n      status: '',\n      tagName: '',\n      amount: ''\n    }\n  }; // const initialState =\n  //     {cartons: \"55\",\n  //     deliveryLocations: \"lagos\",\n  //     descriptions: \"thank you\",\n  //     itemsWorth: \"5000\",\n  //     receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\n  //     sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\n  //     tagName: \"chisom\",\n  //     otherItems: false,\n  //     formErrors: {\n  //         sender: {\n  //                 firstName: '',\n  //                 phoneNumber1: '',\n  //                 phoneNumber2: '' },\n  //         receiver: {\n  //                 firstName: '',\n  //                 phoneNumber1: '',\n  //                 phoneNumber2: '' },\n  //         cartons: '',\n  //         createdAt: '',\n  //         deliveryLocations: '',\n  //         descriptions: '',\n  //         itemsWorth: '',\n  //         otherItems: true,\n  //         requestImages: '',\n  //         status: '',\n  //         tagName: '',\n  //         amount: ''\n  //         }\n  //     };\n\n  const {\n    0: input,\n    1: setInput\n  } = useState(initialState);\n  const {\n    0: contacts,\n    1: setContacts\n  } = useState([]);\n  const {\n    0: extractedRequest,\n    1: setExtractedRequest\n  } = useState();\n  const {\n    0: sessionToken,\n    1: setSessionToken\n  } = useState();\n  const {\n    0: isLogin,\n    1: setisLogin\n  } = useState(false);\n  const {\n    0: permanentImages,\n    1: setPermanentImages\n  } = useState([]);\n  const {\n    0: requestImages,\n    1: setRequestImage\n  } = useState();\n  const {\n    0: count,\n    1: setCount\n  } = useState();\n  const {\n    0: form,\n    1: setForm\n  } = useState();\n  console.log(permanentImages);\n\n  const handleChange = e => {\n    let form = new FormData();\n\n    if (requestImages !== undefined) {\n      for (let img of requestImages) {\n        form.append('requestImages', img);\n      }\n    }\n\n    const {\n      cartons,\n      deliveryLocations,\n      descriptions,\n      itemsWorth,\n      otherItems,\n      tagName,\n      receiver,\n      sender,\n      status,\n      amount\n    } = _objectSpread({}, input);\n\n    form.append('cartons', cartons);\n    form.append('deliveryLocations', deliveryLocations);\n    form.append('descriptions', descriptions);\n    form.append('itemsWorth', itemsWorth);\n    form.append('otherItems', otherItems);\n    form.append('tagName', tagName);\n    form.append('receiver[firstName]', receiver.firstName);\n    form.append('receiver[phoneNumber1]', receiver.phoneNumber1);\n    form.append('receiver[phoneNumber2]', receiver.phoneNumber2);\n    form.append('sender[firstName]', sender.firstName);\n    form.append('sender[phoneNumber1]', sender.phoneNumber1);\n    form.append('sender[phoneNumber2]', sender.phoneNumber1);\n    input._id && form.append('status', status);\n    input._id && form.append('amount', amount);\n    setForm(form);\n\n    for (let pair of form.entries()) {\n      console.log([pair[0] + ',' + pair[1]]);\n    }\n\n    if (e) {\n      const {\n        sender\n      } = _objectSpread({}, input);\n\n      const {\n        name,\n        value,\n        id\n      } = e.target;\n\n      const {\n        formErrors\n      } = _objectSpread({}, input);\n\n      requestValidate(id, value, formErrors);\n      sender[name] = e.target.value;\n\n      const newInput = _objectSpread(_objectSpread({}, input), {}, {\n        sender,\n        [name]: value\n      });\n\n      return setInput(newInput);\n    }\n  };\n\n  const handleCheck = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n\n    const newInput = _objectSpread(_objectSpread({}, input), {}, {\n      [name]: checked\n    });\n\n    return setInput(newInput);\n  };\n\n  const photoChange = e => {\n    e.preventDefault();\n\n    if (e.target.files) {\n      setRequestImage(e.target.files);\n      let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\n      let filterUrl = Array.from(e.target.files).filter(x => (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]));\n      let sourceUrl = filterUrl && filterUrl.map(file => URL.createObjectURL(file));\n      let mapUrl = sourceUrl.map(url => {\n        // let generate = generatePublicUrl(url);\n        let img = url;\n        return {\n          img\n        };\n      });\n\n      if (mapUrl !== []) {\n        let updatedPermanentImage = [...permanentImages, ...mapUrl];\n        setPermanentImages(updatedPermanentImage);\n      } else {\n        setPermanentImages(sourceUrl);\n      }\n\n      URL.revokeObjectURL(e.target.files);\n    }\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage && localStorage.getItem('token');\n    const res = await axios.post('/request/create', form, {\n      headers: {\n        'authorization': token ? `Bearer ${token}` : ''\n      }\n    }).catch(function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n    console.log(res);\n  };\n\n  const handleReceiver = e => {\n    if (e) {\n      const {\n        receiver\n      } = _objectSpread({}, input);\n\n      const {\n        name,\n        id,\n        value\n      } = e.target;\n\n      const {\n        formErrors\n      } = _objectSpread({}, input);\n\n      requestValidate(id, value, formErrors);\n      receiver[name] = e.target.value;\n\n      const newInp = _objectSpread(_objectSpread({}, input), {}, {\n        receiver\n      });\n\n      return setInput(newInp);\n    }\n  };\n\n  const handleRequestUpdate = async (e, id) => {\n    e.preventDefault();\n    const res = await axios.put('/request/' + id, form);\n  };\n\n  const selector = [{\n    content: \"contact\",\n    icon: contact(),\n    title: \"Contact\",\n    id: 1\n  }, {\n    content: \"gallery\",\n    icon: gallery(),\n    title: \"Gallery\",\n    id: 2\n  }, {\n    content: \"ShippingRequest\",\n    icon: offBack(),\n    title: \"Request\",\n    id: 3\n  }, {\n    content: \"\",\n    icon: message(),\n    title: \"Message\",\n    id: 4\n  }];\n  return /*#__PURE__*/_jsxDEV(RequestContext.Provider, {\n    value: {\n      input,\n      initialState,\n      setCount,\n      count,\n      setInput,\n      handleChange,\n      handleReceiver,\n      handleCheck,\n      permanentImages,\n      setPermanentImages,\n      handleFormSubmit,\n      photoChange,\n      selector,\n      setExtractedRequest,\n      extractedRequest,\n      contacts,\n      setContacts,\n      handleRequestUpdate,\n      sessionToken,\n      isLogin,\n      setisLogin\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RequestContextProvider;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/RequestContext.js"],"names":["React","createContext","useEffect","useState","axios","generatePublicUrl","gallery","message","offBack","contact","requestValidate","RequestContext","RequestContextProvider","props","initialState","sender","firstName","phoneNumber1","phoneNumber2","receiver","cartons","createdAt","deliveryLocations","descriptions","itemsWorth","otherItems","requestImages","img","_id","status","tagName","amount","formErrors","input","setInput","contacts","setContacts","extractedRequest","setExtractedRequest","sessionToken","setSessionToken","isLogin","setisLogin","permanentImages","setPermanentImages","setRequestImage","count","setCount","form","setForm","console","log","handleChange","e","FormData","undefined","append","pair","entries","name","value","id","target","newInput","handleCheck","checked","photoChange","preventDefault","files","Format","filterUrl","Array","from","filter","x","type","size","sourceUrl","map","file","URL","createObjectURL","mapUrl","url","updatedPermanentImage","revokeObjectURL","handleFormSubmit","token","localStorage","getItem","res","post","headers","catch","error","response","data","request","config","handleReceiver","newInp","handleRequestUpdate","put","selector","content","icon","title","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from '../../helpers/axios';\r\nimport {generatePublicUrl} from '../../urlConfig';\r\nimport {gallery, message, offBack, contact} from \"../../svg\";\r\nimport { requestValidate } from '../validator/validate';\r\n\r\nexport const RequestContext = createContext();\r\n\r\nconst RequestContextProvider = (props) =>{\r\n    const initialState =\r\n        {sender: {\r\n            firstName: '',\r\n            phoneNumber1: '',\r\n            phoneNumber2: '' },\r\n       receiver: {\r\n               firstName: '',\r\n               phoneNumber1: '',\r\n               phoneNumber2: '' },\r\n       cartons: '',\r\n       createdAt: '',\r\n       deliveryLocations: '',\r\n       descriptions: '',\r\n       itemsWorth: '',\r\n       otherItems: true,\r\n       requestImages: [{img: '',\r\n                        _id: ''}],\r\n        status: '',\r\n        tagName: '',\r\n        amount: '',\r\n        _id: '',\r\n        formErrors: {\r\n                    sender: {\r\n                            firstName: '',\r\n                            phoneNumber1: '',\r\n                            phoneNumber2: '' },\r\n                    receiver: {\r\n                            firstName: '',\r\n                            phoneNumber1: '',\r\n                            phoneNumber2: '' },\r\n                    cartons: '',\r\n                    createdAt: '',\r\n                    deliveryLocations: '',\r\n                    descriptions: '',\r\n                    itemsWorth: '',\r\n                    otherItems: true,\r\n                    requestImages: '',\r\n                    status: '',\r\n                    tagName: '',\r\n                    amount: ''\r\n                    }\r\n           \r\n       };\r\n\r\n    // const initialState =\r\n    //     {cartons: \"55\",\r\n    //     deliveryLocations: \"lagos\",\r\n    //     descriptions: \"thank you\",\r\n    //     itemsWorth: \"5000\",\r\n    //     receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\r\n    //     sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\r\n    //     tagName: \"chisom\",\r\n    //     otherItems: false,\r\n    //     formErrors: {\r\n    //         sender: {\r\n    //                 firstName: '',\r\n    //                 phoneNumber1: '',\r\n    //                 phoneNumber2: '' },\r\n    //         receiver: {\r\n    //                 firstName: '',\r\n    //                 phoneNumber1: '',\r\n    //                 phoneNumber2: '' },\r\n    //         cartons: '',\r\n    //         createdAt: '',\r\n    //         deliveryLocations: '',\r\n    //         descriptions: '',\r\n    //         itemsWorth: '',\r\n    //         otherItems: true,\r\n    //         requestImages: '',\r\n    //         status: '',\r\n    //         tagName: '',\r\n    //         amount: ''\r\n    //         }\r\n    //     };\r\n    const[input, setInput] = useState(initialState);\r\n    const [contacts, setContacts] = useState([]);\r\n    const [extractedRequest, setExtractedRequest] = useState();\r\n    const [sessionToken, setSessionToken] = useState();\r\n    const [isLogin, setisLogin] = useState(false);\r\n    const[permanentImages, setPermanentImages] = useState([]);\r\n    const [requestImages, setRequestImage] = useState();\r\n    const [count, setCount] = useState();\r\n    const [form, setForm] = useState();\r\n   \r\n    console.log(permanentImages);\r\n\r\n    const handleChange = (e) => {\r\n        let form = new FormData();\r\n        if(requestImages !== undefined){\r\n\r\n            for( let img of requestImages){\r\n                form.append('requestImages', img)\r\n            }                                                   \r\n       }\r\n\r\n            const {cartons, deliveryLocations, descriptions, itemsWorth, otherItems, tagName, receiver, sender, status, amount } = {...input}\r\n\r\n                form.append('cartons', cartons);\r\n                form.append('deliveryLocations', deliveryLocations);\r\n                form.append('descriptions', descriptions);\r\n                form.append('itemsWorth', itemsWorth);\r\n                form.append('otherItems',  otherItems); \r\n                form.append('tagName',  tagName); \r\n                form.append('receiver[firstName]',  receiver.firstName);\r\n                form.append('receiver[phoneNumber1]',  receiver.phoneNumber1);\r\n                form.append('receiver[phoneNumber2]',  receiver.phoneNumber2);\r\n                form.append('sender[firstName]',  sender.firstName);\r\n                form.append('sender[phoneNumber1]',  sender.phoneNumber1);\r\n                form.append('sender[phoneNumber2]',  sender.phoneNumber1); \r\n               \r\n                 input._id && form.append('status', status);\r\n                 input._id && form.append('amount', amount);\r\n\r\n\r\n                setForm(form);\r\n\r\n                for(let pair of form.entries()){\r\n                    console.log([pair[0]+ ',' + pair[1]])\r\n              }\r\n\r\n         \r\n        if(e){\r\n           const {sender} = {...input};\r\n           const {name, value, id} = e.target;\r\n           const {formErrors} = {...input};\r\n           requestValidate(id, value, formErrors);\r\n           sender[name] = e.target.value;\r\n           const newInput = { ...input, sender, [name]: value };\r\n           return setInput(newInput);\r\n        }\r\n    }; \r\n   const handleCheck = (e)=>{\r\n    const {name, checked} = e.target;\r\n    const newInput = {...input, [name]: checked};\r\n    return setInput(newInput);\r\n   } \r\n\r\n    const photoChange = (e) => {\r\n        e.preventDefault();\r\n          if(e.target.files){\r\n              setRequestImage(e.target.files);\r\n               let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\r\n              let filterUrl = Array.from(e.target.files).filter(x=> (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]) );\r\n              \r\n                let sourceUrl = filterUrl && filterUrl.map((file)=> URL.createObjectURL(file));\r\n                let mapUrl = sourceUrl.map(url => {\r\n                    // let generate = generatePublicUrl(url);\r\n                    let img = url\r\n                    return {img }}\r\n                    )\r\n            if(mapUrl !== []){\r\n                let updatedPermanentImage = [...permanentImages, ...mapUrl ]\r\n                setPermanentImages(updatedPermanentImage);\r\n            }else{\r\n                setPermanentImages(sourceUrl);\r\n            }\r\n            \r\n            URL.revokeObjectURL(e.target.files); \r\n      } \r\n    }\r\n    \r\n    const handleFormSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const token = localStorage && localStorage.getItem('token');\r\n        const res = await axios.post('/request/create', form, {\r\n            headers : {'authorization': token ? `Bearer ${token}` : ''}\r\n        }).catch(function (error) {\r\n            if (error.response) {\r\n              // The request was made and the server responded with a status code\r\n              // that falls out of the range of 2xx\r\n              console.log(error.response.data);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n            } else if (error.request) {\r\n              // The request was made but no response was received\r\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n              // http.ClientRequest in node.js\r\n              console.log(error.request);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              console.log('Error', error.message);\r\n            }\r\n            console.log(error.config);\r\n          });\r\n          console.log(res);\r\n    }\r\n\r\n    const handleReceiver = (e) => {\r\n            \r\n        if(e){\r\n            const {receiver} = {...input};\r\n            const {name, id, value} = e.target;\r\n            const {formErrors} = {...input};\r\n            requestValidate(id, value, formErrors)\r\n            receiver[name] = e.target.value;\r\n            const newInp = { ...input, receiver };\r\n            return setInput(newInp);\r\n        }\r\n    }; \r\n\r\n    const handleRequestUpdate = async(e, id) => {\r\n        e.preventDefault();\r\n        const res = await axios.put('/request/' + id, form);\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    const selector = [\r\n        {content: \"contact\" , icon: contact(), title: \"Contact\", id: 1 },\r\n        {content: \"gallery\", icon: gallery(), title: \"Gallery\", id: 2},\r\n        {content: \"ShippingRequest\", icon: offBack(), title: \"Request\", id: 3},\r\n        {content: \"\", icon: message(), title: \"Message\", id: 4}\r\n    ]\r\n\r\n\r\n    return (\r\n        <RequestContext.Provider value={{input, initialState, setCount, count, setInput, handleChange, handleReceiver, handleCheck, permanentImages, setPermanentImages, handleFormSubmit, photoChange, selector, setExtractedRequest, extractedRequest, contacts, setContacts, handleRequestUpdate, sessionToken, isLogin, setisLogin}}>\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RequestContextProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}