{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\G4 Logistics\\\\FrontEnd\\\\components\\\\context\\\\RequestContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useState } from 'react';\nexport const RequestContext = /*#__PURE__*/createContext();\nimport axios from '../../helpers/axios';\nimport { generatePublicUrl } from '../../urlConfig';\nimport Contact from '../contact';\nimport Gallery from '../gallery';\nimport ShippingRequest from '../AdminRequest/shippingRequest';\nimport { gallery, message, offBack, contact } from \"../../svg\";\n\nconst RequestContextProvider = props => {\n  // const initialState =[\n  //     {sender: {\n  //         firstName: '',\n  //         phoneNumber1: '',\n  //         phoneNumber2: '' },\n  //    receiver: {\n  //            firstName: '',\n  //            phoneNumber1: '',\n  //            phoneNumber2: '' },\n  //    tagName: '',\n  //    cartons: '',\n  //    otherItems: true,\n  //    itemsWorth: '',\n  //    deliveryLocations: '',\n  //    descriptions: '',\n  //    galleryImages: {sourceUrl: [] },\n  //    }\n  // ];\n  const initialState = {\n    cartons: \"55\",\n    deliveryLocations: \"lagos\",\n    descriptions: \"thank you\",\n    itemsWorth: \"5000\",\n    otherItems: \"true\",\n    receiver: {\n      firstName: \"David\",\n      phoneNumber1: \"07130614615\",\n      phoneNumber2: \"08130614915\"\n    },\n    sender: {\n      firstName: \"mayowa\",\n      phoneNumber1: \"08130614615\",\n      phoneNumber2: \"08140614615\"\n    },\n    tagName: \"chisom\",\n    cartons: \"55\"\n  };\n  const {\n    0: input,\n    1: setInput\n  } = useState(initialState);\n  const {\n    0: permanentImages,\n    1: setPermanentImages\n  } = useState();\n  const {\n    0: requestImages,\n    1: setRequestImage\n  } = useState();\n  const {\n    0: count,\n    1: setCount\n  } = useState();\n  const {\n    0: form,\n    1: setForm\n  } = useState();\n  const {\n    0: extractedRequest,\n    1: setExtractedRequest\n  } = useState();\n  const {\n    0: contacts,\n    1: setContacts\n  } = useState([]);\n\n  const handleChange = e => {\n    let form = new FormData();\n\n    if (requestImages.length > 0) {\n      for (let img of requestImages) {\n        form.append('requestImages', img);\n      }\n    }\n\n    const {\n      cartons,\n      deliveryLocations,\n      descriptions,\n      itemsWorth,\n      otherItems,\n      tagName,\n      receiver,\n      sender\n    } = _objectSpread({}, input);\n\n    form.append('cartons', cartons);\n    form.append('deliveryLocations', deliveryLocations);\n    form.append('descriptions', descriptions);\n    form.append('itemsWorth', itemsWorth);\n    form.append('otherItems', otherItems);\n    form.append('tagName', tagName);\n    form.append('receiver[firstName]', receiver.firstName);\n    form.append('receiver[phoneNumber1]', receiver.phoneNumber1);\n    form.append('receiver[phoneNumber2]', receiver.phoneNumber2);\n    form.append('sender[firstName]', sender.firstName);\n    form.append('sender[phoneNumber1]', sender.phoneNumber1);\n    form.append('sender[phoneNumber2]', sender.phoneNumber1);\n    setForm(form);\n\n    for (let pair of form.entries()) {\n      console.log([pair[0] + ',' + pair[1]]);\n    }\n\n    if (e) {\n      const {\n        sender\n      } = _objectSpread({}, input);\n\n      const {\n        name,\n        value\n      } = e.target;\n      sender[name] = e.target.value;\n\n      const newInput = _objectSpread(_objectSpread({}, input), {}, {\n        sender,\n        [name]: value\n      });\n\n      return setInput(newInput);\n    }\n  };\n\n  const photoChange = e => {\n    e.preventDefault();\n\n    if (e.target.files) {\n      setRequestImage(e.target.files);\n      let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\n      let filterUrl = Array.from(e.target.files).filter(x => (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]));\n      let sourceUrl = filterUrl && filterUrl.map(file => URL.createObjectURL(file));\n      setPermanentImages(sourceUrl);\n      URL.revokeObjectURL(e.target.files);\n    }\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const res = await axios.post('/request/create', form);\n\n    if (res.status == 201) {\n      const {\n        request\n      } = res.data;\n      const {\n        requestImages\n      } = request;\n      console.log(requestImages);\n      let requestFile = requestImages.length > 0 && requestImages.map(file => generatePublicUrl(file.img));\n      setPermanentImages(requestFile);\n    }\n\n    return setCount(1);\n  };\n\n  const handleReceiver = e => {\n    if (e) {\n      const {\n        receiver\n      } = _objectSpread({}, input);\n\n      const {\n        name\n      } = e.target;\n      receiver[name] = e.target.value;\n\n      const newInp = _objectSpread(_objectSpread({}, input), {}, {\n        receiver\n      });\n\n      return setInput(newInp);\n    }\n  };\n\n  const adminHandler = async (title, content) => {\n    setTab(content);\n\n    if (title == 'Request') {\n      let res = await axios.get('/request/get');\n\n      if (res.status == 201) {\n        const {\n          request\n        } = res.data;\n        return setExtractedRequest(request);\n      }\n    }\n\n    if (title == 'Contact') {\n      let res = await axios.get('/profile/get');\n\n      if (res.status == 201) {\n        const {\n          profile\n        } = res.data;\n        return setExtractedRequest(profile);\n      }\n    }\n  };\n\n  const selector = [{\n    content: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }, this),\n    icon: contact(),\n    title: \"Contact\",\n    id: 1\n  }, {\n    content: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }, this),\n    icon: gallery(),\n    title: \"Gallery\",\n    id: 2\n  }, {\n    content: /*#__PURE__*/_jsxDEV(ShippingRequest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }, this),\n    icon: offBack(),\n    title: \"Request\",\n    id: 3\n  }, {\n    content: \"\",\n    icon: message(),\n    title: \"Message\",\n    id: 4\n  }];\n  const {\n    0: tab,\n    1: setTab\n  } = useState(selector[0].content);\n  return /*#__PURE__*/_jsxDEV(RequestContext.Provider, {\n    value: {\n      input,\n      setCount,\n      count,\n      setInput,\n      handleChange,\n      handleReceiver,\n      permanentImages,\n      setPermanentImages,\n      handleFormSubmit,\n      photoChange,\n      adminHandler,\n      tab,\n      selector,\n      setExtractedRequest,\n      extractedRequest,\n      contacts,\n      setContacts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RequestContextProvider;","map":{"version":3,"sources":["H:/G4 Logistics/FrontEnd/components/context/RequestContext.js"],"names":["React","createContext","useState","RequestContext","axios","generatePublicUrl","Contact","Gallery","ShippingRequest","gallery","message","offBack","contact","RequestContextProvider","props","initialState","cartons","deliveryLocations","descriptions","itemsWorth","otherItems","receiver","firstName","phoneNumber1","phoneNumber2","sender","tagName","input","setInput","permanentImages","setPermanentImages","requestImages","setRequestImage","count","setCount","form","setForm","extractedRequest","setExtractedRequest","contacts","setContacts","handleChange","e","FormData","length","img","append","pair","entries","console","log","name","value","target","newInput","photoChange","preventDefault","files","Format","filterUrl","Array","from","filter","x","type","size","sourceUrl","map","file","URL","createObjectURL","revokeObjectURL","handleFormSubmit","res","post","status","request","data","requestFile","handleReceiver","newInp","adminHandler","title","content","setTab","get","profile","selector","icon","id","tab","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from 'react';\r\nexport const RequestContext = createContext();\r\nimport axios from '../../helpers/axios';\r\nimport {generatePublicUrl} from '../../urlConfig';\r\nimport Contact from '../contact';\r\nimport Gallery from '../gallery';\r\nimport ShippingRequest from '../AdminRequest/shippingRequest';\r\nimport {gallery, message, offBack, contact} from \"../../svg\";\r\n\r\nconst RequestContextProvider = (props) =>{\r\n    // const initialState =[\r\n    //     {sender: {\r\n    //         firstName: '',\r\n    //         phoneNumber1: '',\r\n    //         phoneNumber2: '' },\r\n    //    receiver: {\r\n    //            firstName: '',\r\n    //            phoneNumber1: '',\r\n    //            phoneNumber2: '' },\r\n    //    tagName: '',\r\n    //    cartons: '',\r\n    //    otherItems: true,\r\n    //    itemsWorth: '',\r\n    //    deliveryLocations: '',\r\n    //    descriptions: '',\r\n    //    galleryImages: {sourceUrl: [] },\r\n           \r\n    //    }\r\n    // ];\r\n\r\n    const initialState =\r\n        {cartons: \"55\",\r\n        deliveryLocations: \"lagos\",\r\n        descriptions: \"thank you\",\r\n        itemsWorth: \"5000\",\r\n        otherItems: \"true\",\r\n        receiver: {firstName: \"David\", phoneNumber1: \"07130614615\", phoneNumber2: \"08130614915\"},\r\n        sender: {firstName: \"mayowa\", phoneNumber1: \"08130614615\", phoneNumber2: \"08140614615\"},\r\n        tagName: \"chisom\", cartons: \"55\"\r\n        };\r\n\r\n    const[input, setInput] = useState(initialState);\r\n    const[permanentImages, setPermanentImages] = useState();\r\n    const [requestImages, setRequestImage] = useState();\r\n    const [count, setCount] = useState();\r\n    const [form, setForm] = useState();\r\n    const [extractedRequest, setExtractedRequest] = useState();\r\n    const [contacts, setContacts] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        let form = new FormData();\r\n\r\n        if(requestImages.length > 0){\r\n\r\n            for( let img of requestImages){\r\n                form.append('requestImages', img)\r\n            }                                                   \r\n       }\r\n            const {cartons, deliveryLocations, descriptions, itemsWorth, otherItems, tagName, receiver, sender } = {...input}\r\n\r\n                form.append('cartons', cartons);\r\n                form.append('deliveryLocations', deliveryLocations);\r\n                form.append('descriptions', descriptions);\r\n                form.append('itemsWorth', itemsWorth);\r\n                form.append('otherItems',  otherItems);\r\n                form.append('tagName',  tagName); \r\n                form.append('receiver[firstName]',  receiver.firstName);\r\n                form.append('receiver[phoneNumber1]',  receiver.phoneNumber1);\r\n                form.append('receiver[phoneNumber2]',  receiver.phoneNumber2);\r\n                form.append('sender[firstName]',  sender.firstName);\r\n                form.append('sender[phoneNumber1]',  sender.phoneNumber1);\r\n                form.append('sender[phoneNumber2]',  sender.phoneNumber1);\r\n\r\n                setForm(form);\r\n\r\n                for(let pair of form.entries()){\r\n                    console.log([pair[0]+ ',' + pair[1]])\r\n                }    \r\n         \r\n        if(e){\r\n           const {sender} = {...input};\r\n           const {name, value} = e.target;\r\n           sender[name] = e.target.value;\r\n           const newInput = { ...input, sender, [name]: value };\r\n           return setInput(newInput);\r\n        }\r\n    }; \r\n\r\n    const photoChange = (e) => {\r\n        e.preventDefault();\r\n          if(e.target.files){\r\n              setRequestImage(e.target.files);\r\n               let Format = ['image/jpeg', 'image/png', 'image/gif', 5000000];\r\n              let filterUrl = Array.from(e.target.files).filter(x=> (x.type == Format[0] || x.type == Format[1]) && (x.size <= Format[2] || x.size <= Format[3]) );\r\n              \r\n                 let sourceUrl = filterUrl && filterUrl.map((file)=>URL.createObjectURL(file)) \r\n            \r\n              setPermanentImages(sourceUrl);\r\n              URL.revokeObjectURL(e.target.files); \r\n      } \r\n    }\r\n\r\n    const handleFormSubmit = async(e) => {\r\n        e.preventDefault();\r\n        \r\n        const res = await axios.post('/request/create', form);\r\n        if(res.status == 201){\r\n            const {request} = res.data;\r\n            const {requestImages} = request;\r\n            console.log(requestImages);\r\n            let requestFile =  requestImages.length > 0 && requestImages.map((file) => \r\n            generatePublicUrl(file.img)\r\n            );\r\n           setPermanentImages(requestFile);\r\n          }\r\n        \r\n        return setCount(1);\r\n    }\r\n\r\n\r\n    const handleReceiver = (e) => {\r\n            \r\n        if(e){\r\n            const {receiver} = {...input};\r\n            const {name} = e.target;\r\n            receiver[name] = e.target.value;\r\n            const newInp = { ...input, receiver };\r\n            return setInput(newInp);\r\n        }\r\n    }; \r\n\r\n\r\n    const adminHandler = async(title, content) => {\r\n        setTab(content)\r\n        if(title == 'Request' ){\r\n            let res = await axios.get('/request/get');\r\n            if(res.status == 201){\r\n                const {request} = res.data;\r\n               return setExtractedRequest(request);\r\n            }\r\n        }\r\n        if(title == 'Contact' ){\r\n            let res = await axios.get('/profile/get');\r\n            if(res.status == 201){\r\n                const {profile} = res.data;\r\n               return setExtractedRequest(profile);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const selector = [\r\n        {content: <Contact />, icon: contact(), title: \"Contact\", id: 1 },\r\n        {content: <Gallery />, icon: gallery(), title: \"Gallery\", id: 2},\r\n        {content: <ShippingRequest />, icon: offBack(), title: \"Request\", id: 3},\r\n        {content: \"\", icon: message(), title: \"Message\", id: 4}\r\n    ]\r\n\r\n    const[tab, setTab] = useState(selector[0].content);\r\n\r\n    return (\r\n        <RequestContext.Provider value={{input, setCount, count, setInput, handleChange, handleReceiver, permanentImages, setPermanentImages, handleFormSubmit, photoChange, adminHandler, tab, selector, setExtractedRequest, extractedRequest, contacts, setContacts}}>\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RequestContextProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}